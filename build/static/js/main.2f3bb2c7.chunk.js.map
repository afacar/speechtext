{"version":3,"sources":["assets/banner.png","../node_modules/react-flag-kit/assets sync /^/.//.*/.svg$","utils/action-types.js","utils/language-map.js","utils/localization.js","utils/firebase.js","utils/index.js","reducers/app-reducer.js","reducers/auth-reducer.js","reducers/file-reducer.js","reducers/index.js","actions/auth-actions.js","actions/user-actions.js","actions/app-actions.js","actions/file-actions.js","components/auth.js","containers/header.js","containers/landing/entry.js","containers/landing/how-it-works.js","containers/landing/features.js","containers/landing/pricing.js","containers/landing/contact.js","containers/footer.js","containers/landing/main.js","containers/dashboard/user-box.js","containers/user-header.js","components/dropzone.js","components/file.js","components/approvement-popup.js","containers/dashboard/file-list.js","components/slider-components.js","components/slider.js","components/player.js","components/upload-options.js","containers/dashboard/transcription.js","containers/dashboard/dashboard.js","containers/user/profile.js","containers/user/payment.js","containers/user/plan.js","containers/user/user.js","containers/landing/privacy.js","containers/landing/terms.js","containers/app.js","index.js","assets/logo.png"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","SET_LANGUAGE","SET_SUPPORTED_LANGUAGES","LOGIN","LOGOUT","GET_PLANS","GET_FILE_LIST","UPDATE_FILE","UPDATE_FILE_IN_STATE","SET_FILE_TO_UPLOAD","SET_SELECTED_FILE","LanguageMap","Intl","PluralRules","require","messages","messages_tr","messages_en","currentLanguage","navigator","language","split","_","has","supportedLanguages","key","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","addZeroes","val","length","ActionTypes","Localization","initGoogleAnalytics","ReactGA","initialize","pageview","window","location","pathname","search","formatExpireDate","expireDate","date","Date","seconds","day","getDate","month","getMonth","year","getFullYear","DEFAULT_SUPPORTED_LANGUAGES","setLanguage","state","action","type","Utils","payload","setSupportedLanguages","plans","auth","combineReducers","AppReducer","user","AuthReducer","userFiles","found","newState","isEmpty","each","file","currentFile","find","push","merge","forEach","elem","clone","fileId","data","selectedFile","firestore","getFileList","dispatch","getState","a","collection","doc","uid","get","snapshot","docs","status","orderBy","onSnapshot","deletedFiles","updateFile","update","updateFileState","updateFileInState","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","Auth","that","this","onAuthStateChanged","currentUser","setState","displayName","email","props","login","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","lang","config","Component","connect","catch","error","console","log","response","demoPlan","currentPlan","remainingMinutes","quota","set","showAuth","history","Nav","Navbar","variant","expand","bg","fixed","className","Container","Brand","href","onClick","goToRef","alt","src","Logo","style","float","description","Toggle","Collapse","Item","showLinks","Link","Button","icon","faSignInAlt","to","withRouter","Entry","align","Row","Col","lg","Banner","Card","faCheck","color","HowItWorks","mb","faUpload","size","faSync","faEdit","faDownload","featureList","faMicrophoneAlt","textId","faFileAudio","faLanguage","faClock","faClosedCaptioning","faFileSignature","faHandHoldingUsd","faUserShield","Features","md","sm","xs","item","Pricing","data-pricing-value","serverUrl","Contact","handleValueChange","stateName","values","handlePhoneChange","intlPhoneNumber","handleSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","Axios","post","then","Alert","success","timeout","validated","err","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","maxLength","nameSurname","onChange","target","Feedback","preferredCountries","defaultCountry","phone","sector","as","Check","custom","label","name","checked","productType","feedback","rows","opinions","Footer","rel","faMapMarkedAlt","marginLeft","paddingTop","Main","refs","topRef","createRef","aboutRef","howItWorksRef","featuresRef","pricingRef","contactRef","demoRef","ref","current","scrollIntoView","behavior","block","marginBottom","UserBox","logout","signOut","duration","currentPath","goToUrlOnClick","startsWith","mins","faSignOutAlt","UserHeader","Dropzone","openFileDialog","fileInputRef","click","onFileAdded","evt","files","onDragOver","highlight","onDragLeave","onDrop","dataTransfer","React","File","initUploadIfNecessary","uploadFile","progress","paused","transcribedFile","fileExtension","substr","lastIndexOf","storageRef","storage","uploadTask","put","onSelected","index","on","Math","round","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","originalFile","filePath","location_","path_","url","omit","selectedFileOptions","options","addFile","pauseUpload","pause","resumeUpload","resume","editFile","deleteFile","showSpinner","transcribeFile","undefined","isSelected","faTrashAlt","Spinner","animation","role","ProgressBar","striped","now","faPause","faPlay","bgColor","ApprovementPopup","headerText","bodyText","bodySubText","successButtonVariant","handleSuccess","successButtonText","cancelButtonVariant","handleCancel","cancelButtonText","FileList","media","document","createElement","onloadedmetadata","fileDurationInSeconds","parseInt","fileDurationInMinutes","ceil","selectedFileDuration","showApprovement","onFileValidated","URL","createObjectURL","goToPayment","cancelFileUpload","fileObj","createDate","setFileToUpload","setSelectedFile","onFileSelected","SliderBar","assign","top","bottom","left","width","SliderHandle","marginTop","styles","slider","height","borderRadius","background","transition","cursor","Slider","onSliderChange","onSliderChangeStart","playPause","lastValueStart","onSliderChangeEnd","seekTo","formatTime","time","floor","minutes","hours","nextProps","isEnabled","direction","Direction","HORIZONTAL","onChangeStart","onChangeEnd","SpeechTextPlayer","_handlePlayPause","onTimeUpdate","playerInfo","currentTime","seekToTime","second","playerRef","timeToSeek","disabled","isPlaying","Play","play","Pause","isMuted","SoundOn","mute","SoundOff","withMediaProps","UploadOptions","handleFileNameChange","fileName","saveFileName","editFileName","handleOptionsChange","renderFileName","onBlur","i","ReactDOM","findDOMNode","focus","submitForm","indexOf","context","textRef","setTextRef","element","selectedLanguage","defaultValue","min","max","speakerCount","tags","addOnBlur","autoTranscribe","onlabel","onstyle","offlabel","offstyle","Transcription","updateTranscribedFile","editorData","prevEditorData","isEqual","dataToUpload","startTime","endTime","text","join","Blob","downloadAsTxt","textData","replace","download","body","appendChild","downloadAsDocx","functions","httpsCallable","getDocxFile","newMetadata","contentDisposition","updateMetadata","metadata","downloadUrl","formatResults","splittedData","intervalHolder","line","lines","times","clearInterval","setInterval","renderResults","transcriptionClicked","html","handleChange","DropdownButton","title","alignRight","Dropdown","splittedTime","trim","renderOptions","class","Dashboard","Profile","initializeValues","surname","phoneNumber","billing","Billing","country","city","zipCode","address","identityNumber","identityVisible","updateProfile","info","defaultPhone","placeholder","fieldName","telInputProps","inputClassName","Accordion","defaultActiveKey","eventKey","countryList","getCodeList","userData","Payment","initializePage","durationType","calculatedPrice","basketId","checkoutForm","spinnerText","durationChanged","calculatePrice","durationInMinutes","parseFloat","SAlert","pricePerMinute","toFixed","initializePayment","publicIp","v4","ip","fncAddBasket","locale","newPlanId","renderSuccess","renderFormAsDemo","changeTab","validatePayment","phoneNumner","renderPaymentForm","validationResult","InputGroup","aria-label","Append","currency","paymentPageUrl","ResponsiveEmbed","planName","Plan","changeCurrentPlan","submitPlanChange","selectedPlanType","selectedPlan","planId","cancelPlanChange","User","tabName","activeTabKey","hashValue","hash","Tab","activeKey","Content","Pane","Privacy","Terms","App","getPlans","exact","path","render","component","stack","limit","effect","position","languages","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","getElementById"],"mappings":"m7UAAAA,EAAOC,QAAU,IAA0B,oC,wKCA3C,IAAIC,EAAM,CACT,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChaAAc,IACdaAAc,IACd,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,WAAY,IACZ,aAAc,IACd,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,aAAc,IACd,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,cAAe,IACf,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,eAAgB,IAChB,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,IACZ,WAAY,KAIb,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,osBC/RPU,EAAe,eACfC,EAA0B,0BAC1BC,EAAQ,QACRC,EAAS,SACTC,EAAY,YACZC,EAAgB,gBAChBC,EAAc,cACdC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAoB,oBCJlBC,EALK,CAChB,GAAM,QACN,GAAM,S,kCCELC,KAAKC,aACNC,EAAQ,KAQZ,IAWMC,EAAW,CACb,GAAMC,EACN,GAAMC,GAENC,EAAkBC,UAAUC,SAASC,MAAM,QAAQ,GAEnDC,IAAEC,IAAIR,EAAUG,KAChBA,EAAkB,MAGP,OACXM,mBAtBuB,CACvB,CACIC,IAAK,KACLC,MAAO,gBAEX,CACID,IAAK,KACLC,MAAO,YAgBXR,kBACAH,Y,iBCfJY,IAASC,cApBc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAeMR,QAAf,ECjBMS,EAAY,SAACC,GACf,OAAsB,IAAfA,EAAIC,OAAe,IAAMD,EAAMA,GAG3B,GACXE,cACA5B,cACA6B,eACAC,oBAAqB,WACjBC,IAAQC,WAAW,kBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,SAEhErB,WACAS,YACAa,iBAAkB,SAACC,EAAY9B,GAC3B,IAAI8B,EAAY,OAAO,KACvB,IAAIC,EAAO,IAAIC,KAA0B,IAArBF,EAAWG,SAC3BC,EAAMlB,EAAUe,EAAKI,WACrBC,EAAQpB,EAAUe,EAAKM,WAAa,GACpCC,EAAOP,EAAKQ,cAChB,MAAgB,OAAbvC,EACQkC,EAAM,IAAME,EAAQ,IAAME,EAE9BF,EAAQ,IAAMF,EAAM,IAAMI,ICnBnCE,EAA8B,CAChC,CACInC,IAAK,KACLC,MAAO,gBAEX,CACID,IAAK,KACLC,MAAO,YAsBA,GACXmC,YAvCgB,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC1C,OAAOA,EAAOC,MACV,KAAKC,EAAM1B,YAAYtC,aACnB,OAAO8D,EAAOG,SAAW,KAC7B,QACI,OAAOJ,IAmCfK,sBApB0B,WAAkD,IAAjDL,EAAgD,uDAAxCF,EAA6BG,EAAW,uCAC3E,OAAOA,EAAOC,MACV,KAAKC,EAAM1B,YAAYrC,wBACnB,OAAO6D,EAAOG,QAClB,QACI,OAAOJ,IAgBfM,MAZa,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAOA,EAAOC,MACV,KAAKC,EAAM1B,YAAYlC,UACnB,OAAO0D,EAAOG,QAClB,QACI,OAAOJ,KCvBJO,EAXF,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIC,EAAW,uCACjC,OAAOA,EAAOC,MACV,KAAKC,EAAM1B,YAAYpC,MAEvB,KAAK8D,EAAM1B,YAAYnC,OACnB,OAAO2D,EAAOG,QAClB,QACI,OAAOJ,I,QCPXvB,EAAgB0B,EAAhB1B,YCGO+B,cAAgB,CAC3BlD,SAAUmD,EAAWV,YACrBrC,mBAAoB+C,EAAWJ,sBAC/BK,KAAMC,EACNL,MAAOG,EAAWH,MAClBM,UDNuB,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIC,EAAW,uCAC3CY,GAAQ,EACRC,EAAW,GACf,OAAOb,EAAOC,MACV,KAAKzB,EAAYjC,cAMb,OALAsE,EAAWtD,IAAEuD,QAAQf,GAASC,EAAOG,QAAU,GAC/C5C,IAAEwD,KAAKf,EAAOG,SAAS,SAAAa,GACnB,IAAIC,EAAa1D,IAAE2D,KAAKnB,EAAO,CAAEvE,GAAIwF,IACrCH,EAASM,KAAK5D,IAAE6D,MAAMJ,EAAMC,OAEzBJ,EACX,KAAKrC,EAAYhC,YACb,IAAMwE,EAAOhB,EAAOG,QAUpB,OATAJ,EAAMsB,SAAQ,SAAAC,GACPA,EAAK9F,KAAOwF,EAAKxF,IAChBqF,EAASM,KAAK5D,IAAEgE,MAAMP,IACtBJ,GAAQ,GAERC,EAASM,KAAKG,MAGlBV,GAAOC,EAASM,KAAKH,GAClBH,EACX,KAAKrC,EAAY/B,qBAAjB,MAC6BuD,EAAOG,QAAxBqB,EADZ,EACYA,OAAQC,EADpB,EACoBA,KAUhB,OATA1B,EAAMsB,SAAQ,SAAAC,GACV,GAAGA,EAAK9F,KAAOgG,EAAQ,CACnB,IAAIR,EAAOzD,IAAE6D,MAAME,EAAMG,GACzBZ,EAASM,KAAKH,GACdJ,GAAQ,OAERC,EAASM,KAAKG,MAGfT,EACX,KAAKrC,EAAY9B,mBACb,OAAIa,IAAEuD,QAAQd,EAAOG,SAGdJ,EAFG,CAAEC,EAAOG,SAAf,mBAA2BJ,IAGnC,QACI,OAAOA,IClCf2B,aDsC2B,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAIC,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKzB,EAAY7B,kBACb,OAAOqD,EAAOG,QAClB,QACI,OAAOJ,M,4rBEpDX4B,GAAczB,EAAMtC,SAApB+D,UCDAA,GAAczB,EAAMtC,SAApB+D,U,mOCAAA,GAAczB,EAAMtC,SAApB+D,U,ikBCCAA,GAAczB,EAAMtC,SAApB+D,UAEKC,GAAc,WACvB,+CAAO,WAAOC,EAAUC,GAAjB,yBAAAC,EAAA,+DAC4BD,IAAvBrB,EADL,EACKA,KAAMiB,EADX,EACWA,aADX,SAEoBC,KAAYK,WAAW,aAAaC,IAAIxB,EAAKyB,KAAKF,WAAW,SACnFG,MAHE,QAEGC,EAFH,SAIYA,EAASC,OAChB1B,EAAY,GAChByB,EAASC,KAAKhB,SAAQ,SAAAY,GAEC,YADRA,EAAIR,OACPa,QACJ3B,EAAUQ,KAAV,IAAgB3F,GAAIyG,EAAIzG,IAAOyG,EAAIR,YAG3Cd,EAAYpD,IAAEgF,QAAQ5B,EAAW,0BAA2B,QAC5DkB,EAAS,CACL5B,KAAMC,EAAM1B,YAAYjC,cACxB4D,QAASQ,IAETpD,IAAEuD,QAAQY,KACNV,EAAMzD,IAAE2D,KAAKP,EAAW,CAAEnF,GAAIkG,EAAalG,KAC/CqG,EAAS,CACL5B,KAAMC,EAAM1B,YAAY7B,kBACxBwD,QAASa,MAKrBW,KAAYK,WAAW,aAAaC,IAAIxB,EAAKyB,KAAKF,WAAW,SAC5DQ,YAAW,SAACJ,GACT,GAAGA,GAAYA,EAASC,KAAM,CAAC,IACnBX,EAAiBI,IAAjBJ,aACJf,EAAY,GACZ8B,EAAe,GAcnB,GAbAL,EAASC,KAAKhB,SAAQ,SAAAY,GAEC,YADRA,EAAIR,OACPa,OACJG,EAAatB,KAAb,IAAmB3F,GAAIyG,EAAIzG,IAAOyG,EAAIR,SAEtCd,EAAUQ,KAAV,IAAgB3F,GAAIyG,EAAIzG,IAAOyG,EAAIR,YAG3Cd,EAAYpD,IAAEgF,QAAQ5B,EAAW,0BAA2B,QAC5DkB,EAAS,CACL5B,KAAMC,EAAM1B,YAAYjC,cACxB4D,QAASQ,KAETpD,IAAEuD,QAAQY,GAAe,CACzB,IAAIV,EAAMzD,IAAE2D,KAAKP,EAAW,CAAEnF,GAAIkG,EAAalG,KAC5CwF,EACCa,EAAS,CACL5B,KAAMC,EAAM1B,YAAY7B,kBACxBwD,QAASa,KAGbA,EAAMzD,IAAE2D,KAAKuB,EAAc,CAAEjH,GAAIkG,EAAalG,OAE1CqG,EAAS,CACL5B,KAAMC,EAAM1B,YAAY7B,kBACxBwD,QAAS,UAzD9B,2CAAP,qDAAM,IAiFGuC,GAAa,SAAC1B,EAAMS,GAC7B,+CAAO,WAAOI,EAAUC,GAAjB,eAAAC,EAAA,6DACKG,EAAQJ,IAAWrB,KAAnByB,IADL,SAEGP,KAAYK,WAAW,aAAaC,IAAIC,GAAKF,WAAW,SAASC,IAAIjB,EAAKxF,IAC/EmH,OAAOlB,GAHL,OAIHI,EAAS,CACL5B,KAAMC,EAAM1B,YAAYhC,YACxB2D,QAASa,IANV,2CAAP,qDAAM,IAWG4B,GAAkB,SAACpB,EAAQX,GACpC,+CAAO,WAAOgB,EAAUC,GAAjB,eAAAC,EAAA,6DACKG,EAAQJ,IAAWrB,KAAnByB,IADL,SAEGP,KAAYK,WAAW,aAAaC,IAAIC,GAAKF,WAAW,SAASC,IAAIT,GAAQQ,WAAW,YAAYC,IAAI,UAC7GU,OAAO,CAAE5C,MAAOc,IAHd,2CAAP,qDAAM,IAOGgC,GAAoB,SAACrB,EAAQC,GACtC,MAAO,CACHxB,KAAMC,EAAM1B,YAAY/B,qBACxB0D,QAAS,CACLqB,SACAC,U,sHCvGJ7D,GAAasC,EAAbtC,SACFkF,GAAW,CAEbC,WAAY,QAEZC,iBAAkB,IAElBC,cAAe,CACbrF,GAAS0C,KAAK4C,mBAAmBC,YACjCvF,GAAS0C,KAAK8C,qBAAqBD,YACnCvF,GAAS0C,KAAK+C,kBAAkBF,cAIhCG,G,4LAEE,IAAIC,EAAOC,KACX5F,GAAS0C,OAAOmD,oBAAmB,SAAAhD,GAC/B,IAAMiD,EAAcjD,GAAa,GAGjC,GAFA8C,EAAKI,SAAS,CAAElD,KAAMiD,IAEnBA,EAAa,CAAC,IACLxB,EAA4BwB,EAA5BxB,IAAK0B,EAAuBF,EAAvBE,YAAaC,EAAUH,EAAVG,MAC1BN,EAAKO,MAAMC,MAAM,CACb7B,MACA0B,cACAC,gB,+BAOZ,OACI,kBAACG,GAAA,EAAD,CAAOC,KAAMT,KAAKM,MAAMG,KAAMC,OAAQV,KAAKM,MAAMK,aAC7C,kBAACH,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,GAAA,EAAMM,MAAP,KACI,kBAAC,IAAD,CAAkB9I,GAAG,iBAG7B,kBAACwI,GAAA,EAAMO,KAAP,KACI,kBAAC,KAAD,CAAgBC,KAAOhB,KAAKM,MAAMzG,SAC9BoH,OAAQ3B,GACRxC,KAAM1C,GAAS0C,OACf1C,SAAUA,W,GA9Bf8G,aAqCJC,eAAQ,KAAM,CAAEZ,MJvDV,SAACtC,GAClB,+CAAO,WAAOI,EAAUC,GAAjB,iBAAAC,EAAA,sEACoBJ,KAAYK,WAAW,SAASC,IAAIR,EAAKS,KAAKC,MACpEyC,OAAM,SAAAC,GACHC,QAAQC,IAAI,YAHb,UACGC,EADH,QAMAzH,IAAEuD,QAAQkE,KAAazH,IAAEuD,QAAQkE,EAASvD,QAN1C,wBAOOwD,EAAW1H,IAAE2D,KAAKY,IAAQ,MAAa,CAAC,OAAQ,UACtDL,EAAI,MAAOA,EAAP,CAAayD,YAAaD,KACzBC,YAAYC,iBAAmBF,EAASG,MAT9C,SAUOzD,KAAYK,WAAW,SAC5BC,IAAIR,EAAKS,KACTmD,IAAI5D,GAZN,+BAcCA,EAAOuD,EAASvD,OAdjB,QAgBHI,EAAS,CACL5B,KAAMC,EAAM1B,YAAYpC,MACxB+D,QAASsB,IAGbE,KAAYK,WAAW,SAASC,IAAIR,EAAKS,KAAKM,YAAW,SAACJ,GACtD,IAAIX,EAAO,GACRW,GAAYA,EAASX,MAAQW,EAASX,SACrCA,EAAOW,EAASX,QAEpBI,EAAS,CACL5B,KAAMC,EAAM1B,YAAYpC,MACxB+D,QAASsB,OA5Bd,4CAAP,qDAAM,KIsDKkD,CAAyBrB,IC7ClCc,I,mBACF,WAAYN,GAAQ,IAAD,8BACf,4CAAMA,KAOVK,YAAc,WACV,EAAKR,SAAS,CACV2B,UAAU,KAPd,EAAKvF,MAAQ,CACTuF,UAAU,GAJC,E,iFAef9B,KAAKG,SAAS,CACVlD,KAAM+C,KAAKM,MAAMrD,S,yCAINqD,GACZvG,IAAEuD,QAAQ0C,KAAKzD,MAAMU,QAAUlD,IAAEuD,QAAQgD,EAAMrD,OAC9C+C,KAAKM,MAAMyB,QAAQpE,KAAK,gB,+BAItB,IAAD,OACL,OACI,6BACI,kBAACqE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAAQ,QAAQC,OAAO,KAAKC,GAAG,QAAQC,MAAM,MAAMC,UAAU,6BACjE,kBAACC,GAAA,EAAD,KACI,kBAACN,GAAA,EAAOO,MAAR,CAAcC,KAAK,KAAKC,QAAU,kBAAM,EAAKpC,MAAMqC,QAAQ,YACvD,yBAAKC,IAAI,gBAAgBC,IAAMC,KAAOR,UAAU,eAChD,yBAAKS,MAAQ,CAAEC,MAAM,UACjB,yBAAKV,UAAU,mBAAf,iBAGA,2BAAOA,UAAU,qBACb,kBAAC,IAAD,CAAkBtK,GAAG,iBACjBiL,YAAY,oBAK5B,kBAAChB,GAAA,EAAOiB,OAAR,MACA,kBAACjB,GAAA,EAAOkB,SAAR,KACI,kBAACnB,GAAA,EAAD,CAAKM,UAAU,WACX,kBAACN,GAAA,EAAIoB,KAAL,CAAUd,UAAYtC,KAAKM,MAAM+C,UAAY,UAAY,aACrD,kBAACrB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,iBAAiBC,QAAU,kBAAM,EAAKpC,MAAMqC,QAAQ,mBAC/D,kBAAC,IAAD,CAAkB3K,GAAG,wBAG7B,kBAACgK,GAAA,EAAIoB,KAAL,CAAUd,UAAYtC,KAAKM,MAAM+C,UAAY,UAAY,aACrD,kBAACrB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,aAAaC,QAAU,kBAAM,EAAKpC,MAAMqC,QAAQ,iBAC3D,kBAAC,IAAD,CAAkB3K,GAAG,sBAG7B,kBAACgK,GAAA,EAAIoB,KAAL,CAAUd,UAAYtC,KAAKM,MAAM+C,UAAY,UAAY,aACrD,kBAACrB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,YAAYC,QAAU,kBAAM,EAAKpC,MAAMqC,QAAQ,gBAC1D,kBAAC,IAAD,CAAkB3K,GAAG,qBAG7B,kBAACgK,GAAA,EAAIoB,KAAL,CAAUd,UAAYtC,KAAKM,MAAM+C,UAAY,UAAY,aACrD,kBAACrB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,WAAWC,QAAU,kBAAM,EAAKpC,MAAMqC,QAAQ,gBACzD,kBAAC,IAAD,CAAkB3K,GAAG,qBAIzB+B,IAAEuD,QAAQ0C,KAAKM,MAAMrD,OACrB,kBAAC+E,GAAA,EAAIoB,KAAL,KACI,kBAACG,GAAA,EAAD,CAAQb,QAAS,WAAQ,EAAKvC,SAAS,CAAE2B,UAAU,MAC/C,kBAAC,KAAD,CAAiB0B,KAAOC,KAAcnB,UAAU,oBAChD,kBAAC,IAAD,CAAkBtK,GAAG,qBAK5B+B,IAAEuD,QAAQ0C,KAAKM,MAAMrD,OACtB,kBAAC+E,GAAA,EAAIoB,KAAL,KACI,kBAAC,IAAD,CAAMM,GAAG,aAAapB,UAAU,2BAC5B,kBAAC,IAAD,CAAkBtK,GAAG,4BASrD,kBAAC,GAAD,CAAM6B,SAAWmG,KAAKM,MAAMzG,SAAW4G,KAAOT,KAAKzD,MAAMuF,SAAWnB,YAAcX,KAAKW,mB,GA3FlFO,cAwGNC,gBAPS,SAAC,GACrB,MAAO,CACHlE,KAFwC,EAArBA,KAGnBpD,SAHwC,EAAfA,YAOlBsH,CAAyBwC,YAAW/C,K,mDC3G7CgD,I,mBACF,WAAYtD,GAAQ,IAAD,8BACf,4CAAMA,KAOVK,YAAc,WACV,EAAKR,SAAS,CACV2B,UAAU,KAPd,EAAKvF,MAAQ,CACTuF,UAAU,GAJC,E,sEAcT,IAAD,OACL,OACI,yBAAKQ,UAAU,YACX,kBAACC,GAAA,EAAD,CAAWsB,MAAM,UACb,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKnB,IAAMoB,KAASrB,IAAI,uBAAuBN,UAAU,kBAE7D,kBAACyB,GAAA,EAAD,CAAKC,GAAG,KACJ,kBAACF,GAAA,EAAD,CAAKxB,UAAU,wBACX,kBAACyB,GAAA,EAAD,CAAKC,GAAG,MACJ,kBAACE,GAAA,EAAD,CAAM5B,UAAU,uBACZ,wBAAIA,UAAU,eACV,0BAAMA,UAAU,oBAAhB,iBACA,kBAAC,IAAD,CAAkBtK,GAAG,oBAEzB,4BACI,wBAAIsK,UAAU,6BACV,0BAAMA,UAAU,eACZ,kBAAC,KAAD,CAAiBkB,KAAOW,KAAUC,MAAM,aAE5C,yBAAK9B,UAAU,mBACX,kBAAC,IAAD,CAAkBtK,GAAG,sBAG7B,wBAAIsK,UAAU,6BACV,0BAAMA,UAAU,eACZ,kBAAC,KAAD,CAAiBkB,KAAOW,KAAUC,MAAM,aAE5C,kBAAC,IAAD,CAAkBpM,GAAG,qBAEzB,wBAAIsK,UAAU,6BACV,0BAAMA,UAAU,eACZ,kBAAC,KAAD,CAAiBkB,KAAOW,KAAUC,MAAM,aAE5C,kBAAC,IAAD,CAAkBpM,GAAG,qBAEzB,wBAAIsK,UAAU,6BACV,0BAAMA,UAAU,eACZ,kBAAC,KAAD,CAAiBkB,KAAOW,KAAUC,MAAM,aAE5C,kBAAC,IAAD,CAAkBpM,GAAG,qBAEzB,wBAAIsK,UAAU,6BACV,kBAACiB,GAAA,EAAD,CAAQrB,QAAQ,YAAYI,UAAU,iBAAiBI,QAAU,kBAAM,EAAKvC,SAAS,CAAE2B,UAAU,MAC7F,kBAAC,IAAD,CAAkB9J,GAAG,6BAUzD,kBAAC,GAAD,CAAM6B,SAAWmG,KAAKM,MAAMzG,SAAW4G,KAAOT,KAAKzD,MAAMuF,SAAWnB,YAAcX,KAAKW,mB,GAtEnFO,cAkFLC,gBANS,SAAC,GACrB,MAAO,CACHtH,SAFkC,EAAfA,YAMZsH,CAAyByC,IC5BzBS,I,OA1DI,SAAC/D,GAChB,OACI,kBAACwD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAG,MACJ,4BACI,kBAAC,IAAD,CAAkBhM,GAAG,sBAEzB,kBAAC8L,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAG,IAAIM,GAAG,KACX,kBAACJ,GAAA,EAAD,CAAM5B,UAAU,qBACZ,0BAAMA,UAAU,cAAhB,KACA,kBAAC,KAAD,CAAiBkB,KAAOe,KAAWjC,UAAU,cAAckC,KAAK,OAChE,kBAACN,GAAA,EAAKnD,KAAN,KACI,uBAAGuB,UAAU,aACT,kBAAC,IAAD,CAAkBtK,GAAG,yBAKrC,kBAAC+L,GAAA,EAAD,CAAKC,GAAG,IAAIM,GAAG,KACX,kBAACJ,GAAA,EAAD,CAAM5B,UAAU,qBACZ,0BAAMA,UAAU,cAAhB,KACA,kBAAC,KAAD,CAAiBkB,KAAOiB,KAASnC,UAAU,cAAckC,KAAK,OAC9D,kBAACN,GAAA,EAAKnD,KAAN,KACI,uBAAGuB,UAAU,aACT,kBAAC,IAAD,CAAkBtK,GAAG,yBAKrC,kBAAC+L,GAAA,EAAD,CAAKC,GAAG,IAAIM,GAAG,KACX,kBAACJ,GAAA,EAAD,CAAM5B,UAAU,qBACZ,0BAAMA,UAAU,cAAhB,KACA,kBAAC,KAAD,CAAiBkB,KAAOkB,KAASpC,UAAU,cAAckC,KAAK,OAC9D,kBAACN,GAAA,EAAKnD,KAAN,KACI,uBAAGuB,UAAU,aACT,kBAAC,IAAD,CAAkBtK,GAAG,yBAKrC,kBAAC+L,GAAA,EAAD,CAAKC,GAAG,IAAIM,GAAG,KACX,kBAACJ,GAAA,EAAD,CAAM5B,UAAU,qBACZ,0BAAMA,UAAU,cAAhB,KACA,kBAAC,KAAD,CAAiBkB,KAAOmB,KAAarC,UAAU,cAAckC,KAAK,OAClE,kBAACN,GAAA,EAAKnD,KAAN,KACI,uBAAGuB,UAAU,aACT,kBAAC,IAAD,CAAkBtK,GAAG,8BC5CnD4M,I,OAAc,CAChB,CACI1K,IAAK,EACLsJ,KAAMqB,KACNC,OAAQ,gBAEZ,CACI5K,IAAK,EACLsJ,KAAMuB,KACND,OAAQ,gBAEZ,CACI5K,IAAK,EACLsJ,KAAMwB,KACNF,OAAQ,kBAEZ,CACI5K,IAAK,EACLsJ,KAAMyB,KACNH,OAAQ,iBAEZ,CACI5K,IAAK,EACLsJ,KAAM0B,KACNJ,OAAQ,iBAEZ,CACI5K,IAAK,EACLsJ,KAAM2B,KACNL,OAAQ,gBAEZ,CACI5K,IAAK,EACLsJ,KAAMmB,KACNG,OAAQ,kBAEZ,CACI5K,IAAK,EACLsJ,KAAM4B,KACNN,OAAQ,kBAEZ,CACI5K,IAAK,EACLsJ,KAAM6B,KACNP,OAAQ,mBAkCDQ,GA9BE,SAAChF,GACd,OACI,kBAACwD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAG,KAAKuB,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAC5B,4BACI,kBAAC,IAAD,CAAkBzN,GAAG,oBAEzB,kBAAC8L,GAAA,EAAD,KAEQc,GAAY/M,KAAI,SAAA6N,GACZ,OACI,kBAAC3B,GAAA,EAAD,CAAKC,GAAG,IAAIuB,GAAG,IAAI1B,MAAM,SAAS3J,IAAMwL,EAAKxL,KACzC,wBAAIoI,UAAU,cACV,wBAAIpI,IAAMwL,EAAKxL,IAAMoI,UAAU,uFAAuFuB,MAAM,UACxH,kBAAC,KAAD,CAAiBL,KAAOkC,EAAKlC,KAAOgB,KAAK,KAAKJ,MAAM,YACpD,0BAAM9B,UAAU,gBACZ,kBAAC,IAAD,CAAkBtK,GAAK0N,EAAKZ,oBCjEtEa,I,mBACF,WAAYrF,GAAQ,IAAD,8BACf,4CAAMA,KAOVK,YAAc,WACV,EAAKR,SAAS,CACV2B,UAAU,KAPd,EAAKvF,MAAQ,CACTuF,UAAU,GAJC,E,sEAcT,IAAD,SACqB9B,KAAKM,MAAvBrD,EADH,EACGA,KAAM0F,EADT,EACSA,QACd,OACI,6BACI,kBAACJ,GAAA,EAAD,CAAWD,UAAU,aACjB,4BACI,kBAAC,IAAD,CAAkBtK,GAAG,mBAEzB,yBAAKsK,UAAU,kDACX,yBAAKA,UAAU,2CACX,0BAAMA,UAAU,4EAAhB,QACA,yBAAKA,UAAU,qEACX,wBAAIA,UAAU,sDAAsDsD,qBAAmB,MACnF,0BAAMtD,UAAU,SACZ,kBAAC,IAAD,CAAkBtK,GAAG,0BAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,6CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,2BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,2BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,2BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,4BAIzB+B,IAAEuD,QAAQL,IACV,yBAAKqF,UAAU,4BACX,kBAACiB,GAAA,EAAD,CAAQrB,QAAQ,oBAAoBI,UAAU,4BAA4BI,QAAU,kBAAM,EAAKvC,SAAS,CAAE2B,UAAU,MAChH,kBAAC,IAAD,CAAkB9J,GAAG,gCAMzC,yBAAKsK,UAAU,2CACX,0BAAMA,UAAU,kEACZ,kBAAC,IAAD,CAAkBtK,GAAG,4BAEzB,yBAAKsK,UAAU,qEACX,wBAAIA,UAAU,sDAAsDsD,qBAAmB,MAAvF,IACK,0BAAMtD,UAAU,SAAhB,QACD,0BAAMA,UAAU,sBAAhB,IACI,kBAAC,IAAD,CAAkBtK,GAAG,iCAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,6CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,gCAIzB+B,IAAEuD,QAAQL,IACV,yBAAKqF,UAAU,4BACX,kBAACiB,GAAA,EAAD,CAAQrB,QAAQ,oBAAoBI,UAAU,OAAOI,QAAU,kBAAM,EAAKvC,SAAS,CAAE2B,UAAU,MAC3F,kBAAC,IAAD,CAAkB9J,GAAG,oCAMzC,yBAAKsK,UAAU,uEACX,0BAAMA,UAAU,4EACZ,kBAAC,IAAD,CAAkBtK,GAAG,2BAEzB,yBAAKsK,UAAU,qEACX,wBAAIA,UAAU,sDAAsDsD,qBAAmB,MAAvF,IACK,0BAAMtD,UAAU,SAAhB,SACD,0BAAMA,UAAU,sBAAhB,MAEI,kBAAC,IAAD,CAAkBtK,GAAG,gCAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,6CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAIzB+B,IAAEuD,QAAQL,IACV,yBAAKqF,UAAU,4BACX,kBAACiB,GAAA,EAAD,CAAQrB,QAAQ,UAAUI,UAAU,OAAOI,QAAU,kBAAM,EAAKvC,SAAS,CAAE2B,UAAU,MACjF,kBAAC,IAAD,CAAkB9J,GAAG,mCAMzC,yBAAKsK,UAAU,2CACX,0BAAMA,UAAU,4EACZ,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,yBAAKsK,UAAU,qEACX,wBAAIA,UAAU,8EAA8EsD,qBAAmB,MAC3G,0BAAMtD,UAAU,sBACZ,kBAAC,IAAD,CAAkBtK,GAAG,sCAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,6CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,iCAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,iCAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,iCAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,kCAIzB+B,IAAEuD,QAAQL,IACV,yBAAKqF,UAAU,4BACX,kBAACiB,GAAA,EAAD,CAAQrB,QAAQ,oBAAoBI,UAAU,OAAOI,QAAU,kBAAMC,EAAQ,gBACzE,kBAAC,IAAD,CAAkB3K,GAAG,wCAQjD,kBAAC,GAAD,CAAM6B,SAAWmG,KAAKM,MAAMzG,SAAW4G,KAAOT,KAAKzD,MAAMuF,SAAWnB,YAAcX,KAAKW,mB,GAjLjFO,cA8LPC,gBAPS,SAAC,GACrB,MAAO,CACHlE,KAFwC,EAArBA,KAGnBpD,SAHwC,EAAfA,YAOlBsH,CAAyBwE,I,2DC/LlCE,I,OAAY,yBA2MHC,G,YAxMX,WAAYxF,GAAQ,IAAD,8BACf,4CAAMA,KAOVyF,kBAAoB,SAACC,EAAW7L,GAAW,IACjC8L,EAAW,EAAK1J,MAAhB0J,OACNA,EAAOD,GAAa7L,EACpB,EAAKgG,SAAS,CACV8F,YAZW,EAgBnBC,kBAAoB,SAACjI,GAAU,IACrBgI,EAAW,EAAK1J,MAAhB0J,OACNA,EAAM,MAAYhI,EAAKkI,gBACvB,EAAKhG,SAAS,CACV8F,YApBW,EAwBnBG,aAAe,SAAAC,GACX,IAAItG,EAAI,gBACAkG,EAAW,EAAK1J,MAAhB0J,OACFK,EAAOD,EAAME,cACnBF,EAAMG,iBACNH,EAAMI,mBACuB,IAAzBH,EAAKI,iBACLC,KAAMC,KAAN,UAAcf,GAAd,oBAA2C,CAAE5H,KAAMgI,IAC9CY,MAAK,SAACrF,GACHsF,IAAMC,QAAQ,qIACV,CACIC,QAAS,MAGjBjH,EAAKI,SAAS,CACV8F,OAAQ,GACRgB,WAAW,IAEflH,EAAKO,MAAMqC,QAAQ,aAEtBvB,OAAM,SAAC8F,GACJJ,IAAMzF,MAAM6F,MAGxB,EAAK/G,SAAS,CAAE8G,WAAW,KA7C3B,EAAK1K,MAAQ,CACT0J,OAAQ,IAJG,E,sEAmDR,IAAD,OACN,OACI,kBAAC1D,GAAA,EAAD,KACI,4BACI,kBAAC,IAAD,CAAkBvK,GAAG,uBAEzB,kBAACkM,GAAA,EAAD,CAAM5B,UAAU,cACZ,kBAAC6E,GAAA,EAAD,CAAMC,YAAU,EAACH,UAAYjH,KAAKzD,MAAM0K,UAAYI,SAAWrH,KAAKoG,cAChE,kBAACe,GAAA,EAAKG,MAAN,CAAYC,UAAU,YAClB,kBAACJ,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,wCAEzB,kBAACmP,GAAA,EAAKM,QAAN,CACIC,UAAQ,EACRjL,KAAK,OACLkL,UAAU,MACVxN,MAAQ6F,KAAKzD,MAAM0J,OAAO2B,aAAe,GACzCC,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,cAAe3N,EAAE0P,OAAO3N,UAEvE,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WACxB,kBAAC,IAAD,CAAkBzE,GAAG,4CAG7B,kBAACmP,GAAA,EAAKG,MAAN,CAAYC,UAAU,aAClB,kBAACJ,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,kCAEzB,kBAACmP,GAAA,EAAKM,QAAN,CACIC,UAAQ,EACRjL,KAAK,QACLkL,UAAU,KACVxN,MAAS6F,KAAKzD,MAAM0J,OAAO5F,OAAS,GACpCwH,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,QAAS3N,EAAE0P,OAAO3N,UAEjE,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WACxB,kBAAC,IAAD,CAAkBzE,GAAG,sCAG7B,kBAACmP,GAAA,EAAKG,MAAN,CAAYC,UAAU,aAClB,kBAACJ,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,kCAEzB,kBAAC,KAAD,CACIgQ,mBAAoB,CAAC,KAAM,KAAM,MACjCC,eAAgB,KAChBN,UAAU,KACVxN,MAAQ6F,KAAKzD,MAAM0J,OAAOiC,OAAS,GACnCL,SAAU,SAAC5J,GAAD,OAAU,EAAKiI,kBAAkBjI,OAGnD,kBAACkJ,GAAA,EAAKG,MAAN,CAAYC,UAAU,cAClB,kBAACJ,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,mCAEzB,kBAACmP,GAAA,EAAKM,QAAN,CACIC,UAAQ,EACRjL,KAAK,OACLkL,UAAU,KACVxN,MAAS6F,KAAKzD,MAAM0J,OAAOkC,QAAU,GACrCN,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,SAAU3N,EAAE0P,OAAO3N,UAElE,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WACxB,kBAAC,IAAD,CAAkBzE,GAAG,uCAG7B,kBAACmP,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,wCAEzB,kBAACmP,GAAA,EAAKrD,IAAN,KACI,kBAACqD,GAAA,EAAKG,MAAN,CAAYc,GAAIrE,KAAKwB,GAAG,IAAIgC,UAAU,mBAClC,kBAACJ,GAAA,EAAKkB,MAAN,CACIX,UAAQ,EACRY,QAAM,EACN7L,KAAK,QACLzE,GAAG,cACHuQ,MAAQ,kBAAC,IAAD,CAAkBvQ,GAAG,oCAC7BwQ,KAAK,YACLC,QAA4C,IAAlCzI,KAAKzD,MAAM0J,OAAOyC,YAC5Bb,SAAW,WAAQ,EAAK9B,kBAAkB,cAAe,IACzD4C,SAAS,MAGjB,kBAACxB,GAAA,EAAKG,MAAN,CAAYc,GAAIrE,KAAKwB,GAAG,IAAIgC,UAAU,uBAClC,kBAACJ,GAAA,EAAKkB,MAAN,CACIX,UAAQ,EACRY,QAAM,EACN7L,KAAK,QACLzE,GAAG,kBACHuQ,MAAQ,kBAAC,IAAD,CAAkBvQ,GAAG,oCAC7BwQ,KAAK,YACLC,QAA4C,IAAlCzI,KAAKzD,MAAM0J,OAAOyC,YAC5Bb,SAAW,WAAQ,EAAK9B,kBAAkB,cAAe,IACzD4C,SAAS,MAGjB,kBAACxB,GAAA,EAAKG,MAAN,CAAYc,GAAIrE,KAAKwB,GAAG,IAAIgC,UAAU,wBAClC,kBAACJ,GAAA,EAAKkB,MAAN,CACIX,UAAQ,EACRY,QAAM,EACN7L,KAAK,QACLzE,GAAG,iBACHuQ,MAAQ,kBAAC,IAAD,CAAkBvQ,GAAG,oCAC7BwQ,KAAK,YACLC,QAA4C,IAAlCzI,KAAKzD,MAAM0J,OAAOyC,YAC5Bb,SAAW,WAAQ,EAAK9B,kBAAkB,cAAe,IACzD4C,SAAS,MAGjB,kBAACxB,GAAA,EAAKG,MAAN,CAAYc,GAAIrE,KAAKwB,GAAG,IAAIgC,UAAU,wBAClC,kBAACJ,GAAA,EAAKkB,MAAN,CACIX,UAAQ,EACRY,QAAM,EACN7L,KAAK,QACLzE,GAAG,mBACHuQ,MAAQ,kBAAC,IAAD,CAAkBvQ,GAAG,oCAC7BwQ,KAAK,YACLC,QAA4C,IAAlCzI,KAAKzD,MAAM0J,OAAOyC,YAC5Bb,SAAW,WAAQ,EAAK9B,kBAAkB,cAAe,IACzD4C,SAAS,OAIrB,kBAACxB,GAAA,EAAKG,MAAN,CAAYC,UAAU,mBAClB,kBAACJ,GAAA,EAAKK,MAAN,KACI,kBAAC,IAAD,CAAkBxP,GAAG,qCAEzB,kBAACmP,GAAA,EAAKM,QAAN,CACIC,UAAQ,EACRjL,KAAK,OACL2L,GAAG,WACHQ,KAAK,IACLzO,MAAS6F,KAAKzD,MAAM0J,OAAO4C,UAAY,GACvChB,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,WAAY3N,EAAE0P,OAAO3N,UAEpE,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WACxB,kBAAC,IAAD,CAAkBzE,GAAG,yCAG7B,kBAACuL,GAAA,EAAD,CAAQ9G,KAAK,SAAS6F,UAAU,uBAC5B,kBAAC,IAAD,CAAkBtK,GAAG,oCAIjC,6BAAM,6BAAM,6BAAM,6BAAM,kC,GAnMlBkJ,aCqBP4H,I,OAzBA,WACX,OACI,4BAAQxG,UAAU,wBACd,yBAAKA,UAAU,aACX,uBAAGG,KAAK,oFAAoFqF,OAAO,SAASiB,IAAI,sBAC5GzG,UAAU,yBACV,kBAAC,KAAD,CAAiBkB,KAAOwF,KAAiBxE,KAAK,QAElD,uBAAGlC,UAAU,aAAaS,MAAO,CAAEkG,WAAY,SAA/C,wBAEI,6BAFJ,qBAKA,uBAAG3G,UAAU,cAAcS,MAAO,CAAEmG,WAAY,SAAhD,iCACoC,6BAChC,0BAAM5G,UAAU,eACZ,kBAAC,IAAD,CAAMoB,GAAG,WAAWpB,UAAU,eAA9B,kBACA,kBAAC,IAAD,CAAMoB,GAAG,SAASpB,UAAU,8BAA5B,0BCmCT6G,GA9CF,WACT,IAAMC,EAAO,CACTC,OAAQC,sBACRC,SAAUD,sBACVE,cAAeF,sBACfG,YAAaH,sBACbI,WAAYJ,sBACZK,WAAYL,sBACZM,QAASN,uBAGP3G,EAAU,SAACkH,GACbT,EAAKS,GAAKC,QAAQC,eAAe,CAC7BC,SAAU,SACVC,MAAO,WAIf,OACI,6BACI,kBAAC,GAAD,CAAQtH,QAAUA,EAAUU,WAAY,IACxC,yBAAKwG,IAAMT,EAAKC,QACZ,kBAAC,GAAD,OAEJ,kBAAC9G,GAAA,EAAD,CAAWQ,MAAO,CAAEmH,aAAc,UAC9B,yBAAKL,IAAMT,EAAKI,cAAgBlH,UAAU,cACtC,kBAAC,GAAD,OAEJ,6BACA,yBAAKuH,IAAMT,EAAKK,YAAcnH,UAAU,cACpC,kBAAC,GAAD,OAEJ,6BACA,yBAAKuH,IAAMT,EAAKM,WAAapH,UAAU,cACnC,kBAAC,GAAD,CAASK,QAAUA,KAEvB,6BACA,yBAAKkH,IAAMT,EAAKO,WAAarH,UAAU,cACnC,kBAAC,GAAD,CAASK,QAAUA,MAG3B,kBAAC,GAAD,QCvCNwH,I,yNACFC,OAAS,WACLhQ,EAAS0C,OAAOuN,UAChB,EAAK/J,MAAM8J,SACX,EAAK9J,MAAMyB,QAAQpE,KAAK,M,wEAGlB,IACEV,EAAS+C,KAAKM,MAAdrD,KACR,GAAIA,EAAJ,CACA,IAAMqN,EAAWrN,EAAKyE,YAAczE,EAAKyE,YAAYC,iBAAmB,EACpE4I,EAAcvK,KAAKM,MAAMyB,QAAQxG,SAASC,SAC1CgP,EAAiBD,EAAYE,WAAW,cAAgB,QAAU,aACtE,OACI,yBAAKnI,UAAU,YACX,kBAAC,IAAD,CAAMoB,GAAK8G,EAAiBlI,UAAU,gBAClC,uBAAGA,UAAU,gBAELiI,EAAYE,WAAW,eACvB,6BACI,kBAAC,IAAD,CAAkBzS,GAAG,qBACrB,6BACA,0BAAMsK,UAAU,mBACZ,kBAAC,IAAD,CAAkBtK,GAAG,0BAA0BiO,OAAQ,CAAEyE,KAAMJ,OAKvEC,EAAYE,WAAW,UACvB,6BACI,kBAAC,IAAD,CAAkBzS,GAAG,qBACrB,6BACA,0BAAMsK,UAAU,mBACZ,kBAAC,IAAD,CAAkBtK,GAAG,0BAA0BiO,OAAQ,CAAEyE,KAAMJ,SAMnF,kBAAC/G,GAAA,EAAD,CAAQrB,QAAQ,iBAAiBsC,KAAK,KAAKlC,UAAU,WAAWM,IAAI,WAAWF,QAAU1C,KAAKoK,QAC1F,kBAAC,KAAD,CAAiB5G,KAAOmH,c,GAxCtBzJ,cAqDPC,gBANS,SAAC,GACrB,MAAO,CACHlE,KAF8B,EAAXA,QAMa,CAAEmN,Ob5BpB,WAClB,MAAO,CACH3N,KAAMC,EAAM1B,YAAYnC,OACxB8D,QAAS,MayBFwE,CAAqCwC,YAAWwG,KCvDzDS,G,iLAGE,OACI,6BACI,kBAAC5I,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAAQ,QAAQC,OAAO,KAAKC,GAAG,QAAQC,MAAM,MAAMC,UAAU,6BACjE,kBAAC,IAAD,CAAMoB,GAAG,KACL,kBAACzB,GAAA,EAAOO,MAAR,KACI,yBAAKI,IAAI,gBAAgBC,IAAMC,KAAOR,UAAU,eAChD,yBAAKS,MAAQ,CAAEC,MAAM,UACjB,yBAAKV,UAAU,mBAAf,iBAGA,2BAAOA,UAAU,qBACb,kBAAC,IAAD,CAAkBtK,GAAG,iBACjBiL,YAAY,qBAMhC,kBAAChB,GAAA,EAAOiB,OAAR,MACA,kBAACjB,GAAA,EAAOkB,SAAR,KACI,kBAACnB,GAAA,EAAD,CAAKM,UAAU,WACX,kBAACN,GAAA,EAAIoB,KAAL,KACI,kBAAC,GAAD,gB,GA1BXlC,aA2CVC,gBANS,SAAC,GACrB,MAAO,CACHlE,KAF8B,EAAXA,QAMZkE,CAAyBwC,YAAWiH,KCWpCC,G,YA9DX,WAAYvK,GAAQ,IAAD,8BACf,4CAAMA,KAQVwK,eAAiB,WACb,EAAKC,aAAajB,QAAQ3P,MAAQ,GAClC,EAAK4Q,aAAajB,QAAQkB,SAXX,EAcnBC,YAAc,SAACC,GACX,IAAMC,EAAQD,EAAIpD,OAAOqD,MACrB,EAAK7K,MAAM2K,cAAgBlR,IAAEuD,QAAQ6N,IACrC,EAAK7K,MAAM2K,YAAYE,EAAM,KAjBlB,EAqBnBC,WAAa,SAACF,GACVA,EAAI1E,iBAEJ,EAAKrG,SAAS,CAAEkL,WAAW,KAxBZ,EA2BnBC,YAAc,WACV,EAAKnL,SAAS,CAAEkL,WAAW,KA5BZ,EA+BnBE,OAAS,SAAClF,GACNA,EAAMG,iBAEN,IAAM2E,EAAQ9E,EAAMmF,aAAaL,MAC7B,EAAK7K,MAAM2K,cAAgBlR,IAAEuD,QAAQ6N,IACrC,EAAK7K,MAAM2K,YAAYE,EAAM,IAEjC,EAAKhL,SAAS,CAAEkL,WAAW,KApC3B,EAAKN,aAAeU,IAAMnC,YAE1B,EAAK/M,MAAQ,CACT8O,WAAW,GALA,E,sEA0Cf,OACI,yBACI/I,UAAS,oBAAgBtC,KAAKzD,MAAM8O,UAAY,YAAc,IAC9DD,WAAapL,KAAKoL,WAClBE,YAActL,KAAKsL,YACnBC,OAASvL,KAAKuL,OACd7I,QAAU1C,KAAK8K,gBALnB,qCAQI,2BACIjB,IAAK7J,KAAK+K,aACVzI,UAAU,aACV7F,KAAK,OACLoL,SAAU7H,KAAKiL,mB,GAxDZ/J,a,oBCQjBwK,G,YACF,WAAYpL,GAAQ,IAAD,8BACf,4CAAMA,KAiBVqL,sBAAwB,SAAAnO,GACD,YAAhBA,EAAKsB,QAAwBtB,EAAKA,OACjC,EAAKoO,WAAWpO,GAChB,EAAK2C,SAAS,CACV0L,SAAU,EACVC,QAAQ,KAGhB,IAAID,EAAW,EAAKtP,MAAMsP,SACP,eAAhBrO,EAAKsB,SACJ+M,EAAWrO,EAAKuO,gBAAkBvO,EAAKuO,gBAAgBF,SAAW,GAEtE,EAAK1L,SAAS,CACV3C,OACAqO,cAhCW,EAoCnBD,WAAa,SAACpO,GACV,IAAIuC,EAAI,gBACA9C,EAAS,EAAKqD,MAAdrD,KACF+O,EAAgBxO,EAAKgL,KAAKyD,OAAOzO,EAAKgL,KAAK0D,YAAY,KAAO,GAChEC,EAAa/R,EAASgS,UAAUvC,IAAnB,oBAAoC5M,EAAKyB,IAAzC,YAAgDlB,EAAKxF,GAArD,yBAAwEwF,EAAKxF,GAA7E,YAAmFgU,IAEpG,EAAK7L,SAAS,CAAE0L,SAAU,IAE1B,IAAIQ,EAAaF,EAAWG,IAAI9O,EAAKA,MACrC,EAAK8C,MAAMiM,WAAW,EAAKjM,MAAMkM,OAEjChP,EAAKsB,OAAS,YACd,EAAKwB,MAAMjB,kBAAkB7B,GAC7B6O,EAAWI,GAAG,iBAAiB,SAAC7N,GAC5B,IAAIiN,EAAWa,KAAKC,MAAO/N,EAASgO,iBAAmBhO,EAASiO,WAAc,KAG9E,OAFA9M,EAAKI,SAAS,CAAE0L,aAERjN,EAASrC,OACb,KAAKnC,EAASgS,QAAQU,UAAUC,OAC5BzL,QAAQC,IAAI,UACZ,MACJ,KAAKnH,EAASgS,QAAQU,UAAUE,QAC5B1L,QAAQC,IAAI,gBAKjB,SAACF,GACAC,QAAQC,IAAI,eAAgBF,GAC5BtB,EAAKI,SAAS,CAAEkB,aACjB,WACCgL,EAAWzN,SAASiL,IAAIoD,iBAAiBpG,KAAzC,wCAA8C,WAAOqG,GAAP,SAAA3O,EAAA,6DAC1CwB,EAAKI,SAAS,CAAE0L,SAAU,MAC1BrO,EAAK2P,aAAaC,SAAWf,EAAWgB,UAAUC,MAClD9P,EAAK2P,aAAaI,IAAML,GACxB1P,EAAOzD,IAAEyT,KAAKhQ,EAAM,SACfsB,OAAS,WAEV/E,IAAEuD,QAAQ,EAAKgD,MAAMmN,uBACrBjQ,EAAKkQ,QAAU,EAAKpN,MAAMmN,qBARY,SAWpC1N,EAAKO,MAAMqN,QAAQnQ,GAXiB,2CAA9C,0DAgBR,EAAK2C,SAAS,CACVkM,gBApFW,EAwFnBuB,YAAc,WACV,EAAKzN,SAAS,CACV2L,QAAQ,IAEZ,EAAKvP,MAAM8P,WAAWwB,SA5FP,EA+FnBC,aAAe,WACX,EAAK3N,SAAS,CACV2L,QAAQ,IAEZ,EAAKvP,MAAM8P,WAAW0B,UAnGP,EAsGnBC,SAAW,SAAC5V,GACRA,EAAEoO,iBACF,EAAKlG,MAAM0N,SAAS,EAAKzR,MAAMiB,KAAKgP,QAxGrB,EA2GnByB,WAAa,SAAC7V,GACVA,EAAEoO,iBACFpO,EAAEqO,kBAFc,IAIRjJ,EAAS,EAAKjB,MAAdiB,KACR,EAAK8C,MAAMlB,gBAAgB5B,EAAKxF,GAAI,WACpC,EAAKmI,SAAS,CAAE+N,aAAa,KAjHd,EAoHnBC,eAAiB,WAAO,IACd3Q,EAAS,EAAKjB,MAAdiB,KACHzD,IAAEuD,QAAQE,EAAKkQ,WAAalQ,EAAKkQ,QAAQ7T,SACxC,EAAKyG,MAAMiM,WAAW,EAAKjM,MAAMkM,OAEjC,EAAKlM,MAAMlB,gBAAgB5B,EAAKxF,GAAI,UAtHxC,EAAKuE,MAAQ,CACTiB,KAAM8C,EAAM9C,KACZqO,cAAUuC,EACVtC,QAAQ,GANG,E,iFAWf9L,KAAK2L,sBAAsB3L,KAAKM,MAAM9C,Q,mDAGL,IAATA,EAAQ,EAARA,KACxBwC,KAAK2L,sBAAsBnO,K,+BA8GrB,IAAD,EAC2CwC,KAAKzD,MAA7CiB,EADH,EACGA,KAAMqO,EADT,EACSA,SAAUC,EADnB,EACmBA,OAAQoC,EAD3B,EAC2BA,YAChC,OACI,yBAAK5L,UAAS,yBAAqBtC,KAAKM,MAAM+N,WAAa,SAAW,KAClE,kBAACnK,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKnD,KAAN,KACMvD,EAAKgL,MAEF0F,GAA+B,eAAhB1Q,EAAKsB,QACrB,0BAAMwD,UAAU,iBAEZ,kBAAC,KAAD,CAAiBkB,KAAO8K,KAAahM,UAAU,SAASI,QAAU1C,KAAKiO,cAI3EC,GACA,yBAAK5L,UAAU,eACX,kBAACiM,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAASjK,KAAK,QAInC,SAAhBhH,EAAKsB,QAAqB+M,EAAW,KACrC,yBAAKvJ,UAAY,iBACb,8BAAuB,eAAhB9E,EAAKsB,OAA0B,kBAAoB,gBAC1D,kBAAC4P,GAAA,EAAD,CAAaC,SAAO,EAACC,IAAM/C,EAAWvJ,UAA2B,eAAhB9E,EAAKsB,OAA0B,sBAAwB,KAEpF,eAAhBtB,EAAKsB,SAA4BgN,GACjC,kBAAC,KAAD,CAAiBtI,KAAOqL,KAAUvM,UAAU,aAAaI,QAAU1C,KAAK4N,cAGxD,eAAhBpQ,EAAKsB,QAA2BgN,GAChC,kBAAC,KAAD,CAAiBtI,KAAOsL,KAASxM,UAAU,aAAcI,QAAU1C,KAAK8N,gBAKhE,cAAhBtQ,EAAKsB,QACL,yBAAKwD,UAAU,0BACX,kBAACiB,GAAA,EAAD,CAAQwL,QAAQ,SAASrM,QAAU1C,KAAKmO,gBAAxC,sB,GApKbjN,aAwLJC,gBARS,SAAC,GACrB,MAAO,CACHlE,KAFiE,EAA9CA,KAGnBiB,aAHiE,EAAxCA,aAIzBuP,oBAJiE,EAA1BA,uBAQP,CAAEE,Qb3HnB,SAACnQ,GACpB,+CAAO,WAAOa,EAAUC,GAAjB,eAAAC,EAAA,6DACKG,EAAQJ,IAAWrB,KAAnByB,IADL,SAGGP,KAAYK,WAAW,aAAaC,IAAIC,GAAKF,WAAW,SAASC,IAAIjB,EAAKxF,IAC/E6J,IAAIrE,GAJF,uBAMGW,KAAYK,WAAW,aAAaC,IAAIC,GAAKF,WAAW,SAASC,IAAIjB,EAAKxF,IAAIwG,WAAW,YAAYC,IAAI,UAC9GoD,IAAI,CACDtF,MAAOiB,EAAKsB,SARb,2CAAP,qDAAM,Ia0HyCI,cAAYE,mBAAiBC,sBAAjE8B,CAAsFuK,IC7KtFsD,GAnBU,SAAC1O,GACtB,OACI,6BACI,kBAACE,GAAA,EAAD,CAAOC,KAAMH,EAAMG,MACf,kBAACD,GAAA,EAAMI,OAAP,KAAc,2BAAKN,EAAM2O,aACzB,kBAACzO,GAAA,EAAMO,KAAP,KACMT,EAAM4O,SACR,6BACA,2BAAK5O,EAAM6O,aAAe,KAE9B,kBAAC3O,GAAA,EAAMsI,OAAP,KACI,kBAACvF,GAAA,EAAD,CAAQrB,QAAU5B,EAAM8O,sBAAwB,UAAY1M,QAAUpC,EAAM+O,eAAkB/O,EAAMgP,mBAAqB,WACzH,kBAAC/L,GAAA,EAAD,CAAQrB,QAAU5B,EAAMiP,qBAAuB,SAAY7M,QAAUpC,EAAMkP,cAAiBlP,EAAMmP,kBAAoB,cCJpIC,G,YACF,WAAYpP,GAAQ,IAAD,8BACf,4CAAMA,KAaV2K,YAdmB,wCAcL,WAAOzN,GAAP,iBAAAe,EAAA,sDACNwB,EADM,iBAEN4P,EAAQC,SAASC,cAAcrS,EAAKf,KAAKgO,WAAW,SAAW,QAAU,UACvEqF,iBAAmB,WAAO,IACpBpO,EAAgB,EAAKpB,MAAMrD,KAA3ByE,YACRJ,QAAQC,IAAI,qBAAsBoO,GAClC,IAAII,EAAwBC,SAASL,EAAMrF,UACvC2F,EAAwBvD,KAAKwD,KAAKH,EAAwB,IAC3DrO,EAAYC,iBAAmBsO,EAAwB,EACtDlQ,EAAKI,SAAS,CACVgQ,qBAAsBF,EAAwB,UAC9CG,iBAAiB,IAGrB,EAAKC,gBAAgB7S,EAAMyS,IAGnCN,EAAM9M,IAAMyN,IAAIC,gBAAgB/S,GAjBtB,2CAdK,wDAkCnBgT,YAAc,WACV,EAAKrQ,SAAS,CACVgQ,qBAAsB,GACtBC,iBAAiB,IAErB,EAAK9P,MAAMyB,QAAQpE,KAAK,kBAvCT,EA0CnB8S,iBAAmB,WACf,EAAKtQ,SAAS,CACVgQ,qBAAsB,GACtBC,iBAAiB,KA7CN,EAiDnBC,gBAjDmB,wCAiDD,WAAO7S,EAAMyS,GAAb,yBAAA1R,EAAA,6DACd+C,QAAQC,IAAI,yBAA0B/D,GAChCgL,EAAqBhL,EAArBgL,KAAMhE,EAAehH,EAAfgH,KAAM/H,EAASe,EAATf,KACdiU,EAAU,CACVvD,aAAc,CACV3E,OACAhE,OACA8F,SAAU2F,EACVU,WAAY,IAAI9U,MAEpB6R,QAAS,CACLjR,QAEJ+L,OACA1J,OAAQ,WAdE,SAiBO1E,EAAS+D,YAAYK,WAAW,aAAaC,IAAI,EAAK6B,MAAMrD,KAAKyB,KAAKF,WAAW,SAASC,MAjBjG,gBAiBNzG,EAjBM,EAiBNA,GACR0Y,EAAQlT,KAAOA,EACfkT,EAAQ1Y,GAAKA,EAEb,EAAKsI,MAAMsQ,gBAAgBF,GAC3B,EAAKpQ,MAAMuQ,gBAAgBH,GAtBb,4CAjDC,0DA0EnBI,eAAiB,SAACtE,GAAW,IAEnBtO,EADY,EAAK3B,MAAf4O,MACmBqB,GAC3B,EAAKlM,MAAMuQ,gBAAgB3S,IA1E3B,EAAK3B,MAAQ,CACT4O,MAAO,IAJI,E,0FAQmB,IAAVA,EAAS,EAATA,MACxBnL,KAAKG,SAAS,CACVgL,Y,+BAsEE,IAAD,OAECzJ,EADS1B,KAAKM,MAAdrD,KACmByE,aAAe,GACxC,OACI,6BACI,kBAAC,GAAD,CAAUuJ,YAAcjL,KAAKiL,cAC7B,yBAAK3I,UAAU,uBAEPtC,KAAKM,MAAM6K,MAAMtT,KAAI,SAAC2F,EAAMgP,GACxB,IAAI6B,GAActU,IAAEuD,QAAQ,EAAKgD,MAAMpC,eAAgB,EAAKoC,MAAMpC,aAAalG,KAAOwF,EAAKxF,GAC3F,OACI,yBAAK0K,QAAU,WAAQ,EAAKoO,eAAetE,IAAWtS,IAAMsD,EAAKxF,IAC7D,kBAAC,GAAD,CACIkC,IAAMsD,EAAKxF,GACXwF,KAAOA,EACPgP,MAAQA,EACRD,WAAa,EAAKuE,eAClBzC,WAAaA,SAOrC,kBAAC,GAAD,CACI5N,KAAOT,KAAKzD,MAAM6T,gBAClBnB,WAAW,qBACXC,SAAS,qDACTC,YACI,6BACI,iDADJ,IACgCzN,EAAYC,iBAD5C,IAC+D,6BAAM,8CADrE,IAC8F3B,KAAKzD,MAAM4T,sBAG7Gd,cAAgBrP,KAAKwQ,YACrBpB,qBAAqB,UACrBE,kBAAkB,gBAClBE,aAAexP,KAAKyQ,wB,GArHjBvP,aAoIRC,gBARS,SAAC,GACrB,MAAO,CACHlE,KAFuD,EAApCA,KAGnBkO,MAHuD,EAA9BhO,UAIzBe,aAJuD,EAAnBA,gBAQJ,CAAEE,eAAawS,gBf3BxB,SAACpT,GAC5B,MAAO,CACHf,KAAMC,EAAM1B,YAAY9B,mBACxByD,QAASa,IewBuDqT,gBfpBzC,SAACrT,GAC5B,MAAO,CACHf,KAAMC,EAAM1B,YAAY7B,kBACxBwD,QAASa,KeiBF2D,CAA4EwC,YAAW+L,K,0DC1IzFqB,GAAY,SAAC,GAAD,IAAG5W,EAAH,EAAGA,MAAO4I,EAAV,EAAUA,MAAV,OACrB,yBAAKT,UAAU,aACXS,MAAOvK,OAAOwY,OAAO,GACrB,CACIC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAM,GAAD,OAAa,IAARjX,EAAL,MAET4I,MAKKsO,GAAe,SAAC,GAAD,IAAGlX,EAAH,EAAGA,MAAO4I,EAAV,EAAUA,MAAV,OACxB,yBAAKT,UAAU,SACXS,MAAOvK,OAAOwY,OAAO,GACrB,CACIC,IAAK,EACLE,KAAK,GAAD,OAAa,IAARhX,EAAL,KACJmX,WAAY,EACZrI,YAAa,GAEjBlG,MCvBFwO,GAAS,CACXC,OAAQ,CACJJ,MAAO,IACPK,OAAQ,EACRC,aAAc,EACdC,WDRmB,OCSnBC,WAAY,aACZC,OAAQ,YAgFDC,G,YA5EX,WAAYxR,GAAQ,IAAD,8BACf,4CAAMA,KAcVyR,eAAiB,SAAC5X,GACd,EAAKgG,SAAS,CACVhG,WAjBW,EAqBnB6X,oBAAsB,SAAC7X,GACnB,EAAKmG,MAAM2R,YACX,EAAK9R,SAAS,CACV+R,eAAgB/X,KAxBL,EA4BnBgY,kBAAoB,SAAChY,GACjB,EAAKgG,SAAS,CACVhG,UAEDA,IACC,EAAKmG,MAAM8R,OAAOjY,GAClB,EAAKmG,MAAM2R,cAlCA,EAsCnBI,WAAa,SAACC,GACVA,EAAO5F,KAAK6F,MAAMD,GAClB,IAAIxW,EAAU4Q,KAAK6F,MAAMD,EAAO,IAC5BE,EAAU9F,KAAK6F,MAAMD,EAAO,IAC5BG,EAAQ/F,KAAK6F,MAAMC,EAAU,IAUjC,OATGC,EAAQ,IACPD,EAAU9F,KAAK6F,MAAMC,EAAU,KAEhCC,EAAQ,KAAIA,EAAK,WAAOA,IACxBD,EAAU,KAAIA,EAAO,WAAOA,IAC5B1W,EAAU,KAAIA,EAAO,WAAOA,IAC3B2W,IAAOA,EAAQ,MACfD,IAASA,EAAU,MACnB1W,IAASA,EAAU,MACjB,GAAN,OAAU2W,EAAV,YAAmBD,EAAnB,YAA8B1W,IAjD9B,EAAKS,MAAQ,CACTpC,MAAO,EACP+X,eAAgB,GALL,E,uFASOQ,GACtB1S,KAAKG,SAAS,CACVhG,MAAOuY,EAAUvY,U,+BA6CrB,IAAMmQ,EAAWtK,KAAKqS,WAAWrS,KAAKM,MAAMgK,UAC5C,OACI,kBAAC,UAAD,CACIqI,WAAY,EACZC,UAAYC,aAAUC,WACtBjL,SAAW7H,KAAK+R,eAChBgB,cAAgB/S,KAAKgS,oBACrBgB,YAAchT,KAAKmS,kBACnBpP,MAAQwO,GAAOC,QAEf,kBAAC,GAAD,CAAWoB,UAAYC,aAAUC,WAAa3Y,MAAQ6F,KAAKzD,MAAMpC,QACjE,kBAAC,GAAD,CAAcyY,UAAYC,aAAUC,WAAa3Y,MAAQ6F,KAAKzD,MAAMpC,QACpE,0BAAMmI,UAAU,eAAhB,UACQtC,KAAKqS,WAAWrS,KAAKzD,MAAMpC,MAAQ6F,KAAKM,MAAMgK,UADtD,cACqEA,S,GAtEhEpJ,aCPf+R,I,mBACF,WAAY3S,GAAQ,IAAD,8BACf,4CAAMA,KAeV4S,iBAAmB,WACf,EAAK5S,MAAMqP,MAAMsC,aAjBF,EAoBnBkB,aAAe,SAACC,GACZ,EAAKjT,SAAS,CACVkT,YAAaD,EAAWC,eAtBb,EA0BnBjB,OAAS,SAACvG,GACN,EAAKvL,MAAMqP,MAAMyC,OAAO,EAAK9R,MAAMqP,MAAMrF,SAAWuB,IA3BrC,EA8BnByH,WAAa,SAACC,GACV,EAAKjT,MAAMqP,MAAMyC,OAAOmB,GACxB,EAAKpT,SAAS,CACVkT,YAAaE,KA9BjB,EAAKhX,MAAQ,CACT8W,YAAa,GAGjB,EAAKG,UAAYlK,sBAPF,E,0FAUwB,IAAfmK,EAAc,EAAdA,WACrBA,GACCzT,KAAKsT,WAAWG,K,+BAyBd,IAAD,SACwBzT,KAAKM,MAA1BqP,EADH,EACGA,MAAO9M,EADV,EACUA,IAAKpG,EADf,EACeA,KAChBiX,EAAW3Z,IAAEuD,QAAQuF,GACzB,OAAI8M,EAIA,yBAAKrN,UAAU,oBACX,yBAAKA,UAAU,gCAENqN,EAAMgE,WACP,kBAAC,cAAWC,KAAZ,CAAiBlR,QAAU,kBAAOgR,EAA0B,KAAf/D,EAAMkE,UAGnDlE,EAAMgE,WACN,kBAAC,cAAWG,MAAZ,CAAkBpR,QAAU,kBAAOgR,EAA2B,KAAhB/D,EAAM9B,YAG5D,yBAAKvL,UAAU,gCAENqN,EAAMoE,SACP,kBAAC,cAAWC,QAAZ,CAAoBtR,QAAU,kBAAMiN,EAAMsE,MAAK,MAG/CjU,KAAKM,MAAMqP,MAAMoE,SACjB,kBAAC,cAAWG,SAAZ,CAAqBxR,QAAU,kBAAM,EAAKpC,MAAMqP,MAAMsE,MAAK,OAGnE,yBAAK3R,UAAU,iBACX,kBAAC,GAAD,CACInI,MAAQ6F,KAAKzD,MAAM8W,YAAcrT,KAAKM,MAAMqP,MAAMrF,SAClDA,SAAWtK,KAAKM,MAAMqP,MAAMrF,SAC5B8H,OAASpS,KAAKoS,OACdH,UAAYjS,KAAKkT,oBAIrBnZ,IAAEuD,QAAQb,IAASA,EAAKgO,WAAW,UACnC,kBAAC,UAAD,CACInI,UAAU,gBACVO,IAAM7C,KAAKM,MAAMuC,IACjBsQ,aAAenT,KAAKmT,aACpBtJ,IAAM7J,KAAKwT,aAtChB,S,GA1CYtS,cAwFhBiT,6BAAelB,I,0CClFxBmB,I,mBACF,WAAY9T,GAAQ,IAAD,uBACf,4CAAMA,KAyBV+T,qBAAuB,SAAChO,GACpB,EAAKlG,SAAS,CACVmU,SAAUjO,EAAMyB,OAAO3N,SA5BZ,EAgCnBoa,aAAe,WAAO,IACV/W,EAAS,EAAK8C,MAAd9C,KACA8W,EAAa,EAAK/X,MAAlB+X,SACR,EAAKhU,MAAMpB,WAAW1B,EAAM,CAAEgL,KAAM8L,IACpC,EAAKnU,SAAS,CACVqU,cAAc,KArCH,EAyCnBC,oBAAsB,SAACjM,EAAMrO,GAAW,IAC9BuT,EAAY,EAAKnR,MAAjBmR,QACNA,EAAQlF,GAAQrO,EAChB,EAAKgG,SAAS,CACVuN,aA7CW,EAiDnB8G,aAAe,WACX,EAAKrU,SAAS,CAAEqU,cAAc,KAlDf,EAqDnBE,eAAiB,WAAO,IACZlX,EAAS,EAAK8C,MAAd9C,KACR,OAAG,EAAKjB,MAAMiY,aAEN,6BACI,kBAACrN,GAAA,EAAKM,QAAN,CACIhL,KAAK,OACL6F,UAAU,iBACVnI,MAAQqD,EAAKgL,MAAQ,GACrBX,SAAW,EAAKwM,qBAChBM,OAAS,EAAKJ,aACd1K,IAAM,SAAA+K,GAAC,OAAIA,EAAIC,IAASC,YAAYF,GAAGG,QAAU,MAErD,kBAACxR,GAAA,EAAD,CAAQrB,QAAQ,UAAUI,UAAU,cAAcI,QAAU,kBAAM,EAAKvC,SAAS,CAAEqU,cAAc,MAC5F,kBAAC,KAAD,CAAiBhR,KAAOW,KAAUzB,QAAU,EAAK6R,iBAMzD,6BACI,kBAACpN,GAAA,EAAKK,MAAN,CAAY9E,QAAU,EAAK8R,cACrBhX,EAAKgL,MAEX,0BAAMlG,UAAU,eACZ,kBAAC,KAAD,CAAiBkB,KAAOkB,KAAShC,QAAU,EAAK8R,aAAehQ,KAAK,KAAKJ,MAAM,YA9EhF,EAqFnB4Q,WAAa,SAAA3O,GACT,IAAMC,EAAOD,EAAME,cAGnB,GAFAF,EAAMG,iBACNH,EAAMI,mBACuB,IAAzBH,EAAKI,gBAA0B,CAAC,IAAD,EACJ,EAAKpG,MAAxBzG,EADuB,EACvBA,SAAU2D,EADa,EACbA,KACZkQ,EAAY,EAAKnR,MAAjBmR,QACFA,EAAQ7T,WAAU6T,EAAQ7T,SAAWA,IACJ,GAAlC6T,EAAQ7T,SAASob,QAAQ,OACxBvH,EAAQ7T,SAAW6C,EAAMtD,YAAYsU,EAAQ7T,WAEjD2D,EAAKkQ,QAAU3T,IAAE6D,MAAMJ,EAAKkQ,QAASA,GAClB,YAAhBlQ,EAAKsB,OACJ,EAAKwB,MAAMjB,kBAAkB7B,EAAKxF,GAAI,CAAE0V,aAExC,EAAKpN,MAAMpB,WAAW1B,EAAM,CAAEkQ,QAASlQ,EAAKkQ,UAEzB,cAAhBlQ,EAAKsB,QACJ,EAAKwB,MAAMlB,gBAAgB5B,EAAKxF,GAAI,UAIhD,EAAKmI,SAAS,CAAE8G,WAAW,KAxG3B,IAAIyG,EAAUpN,EAAM9C,KAAO8C,EAAM9C,KAAKkQ,QAAU,GAHjC,OAIXA,EAAQwH,UAASxH,EAAQwH,QAAS,IACtC,EAAK3Y,MAAQ,CACTiY,cAAc,EACd9G,WAGJ,EAAKyH,QAAU,KACf,EAAKC,WAAa,SAAAC,GACd,EAAKF,QAAUE,GAZJ,E,0FAgBkB,IAAT7X,EAAQ,EAARA,KACpBkQ,EAAUlQ,EAAKkQ,SAAW,GAC9BA,EAAQwH,QAAUxH,EAAQwH,SAAW,GACrClV,KAAKG,SAAS,CACVuN,UACA4G,SAAU9W,EAAKgL,KACfgM,cAAc,M,+BAwFZ,IAAD,SAC0CxU,KAAKM,MAA5CzG,EADH,EACGA,SAAUI,EADb,EACaA,mBAAoBuD,EADjC,EACiCA,KAC9BkQ,EAAY1N,KAAKzD,MAAjBmR,QACFgG,EAA2B,eAAhBlW,EAAKsB,QAA2C,SAAhBtB,EAAKsB,OAClDwW,EAAmB5H,EAAQ7T,UAAYA,EAE3C,OADGyb,EAAiBL,QAAQ,MAAQ,IAAGK,EAAmBA,EAAiBrJ,OAAO,EAAGqJ,EAAiBL,QAAQ,OAE1G,kBAAC1S,GAAA,EAAD,CAAWD,UAAU,4BACjB,kBAACC,GAAA,EAAD,CAAWD,UAAU,2BACftC,KAAK0U,kBAEX,kBAACvN,GAAA,EAAD,CAAM7E,UAAU,eAAe8E,YAAU,EAACH,UAAYjH,KAAKzD,MAAM0K,UAAYI,SAAWrH,KAAKgV,YACzF,kBAAC9Q,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKpD,MAAN,CAAYwB,UAAU,iBAAtB,WAGA,kBAAC4B,GAAA,EAAKnD,KAAN,KACI,kBAACoG,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,wBAGA,kBAACL,GAAA,EAAKM,QAAN,CACIW,GAAG,SACHmN,aAAeD,EACf5B,SAAWA,EACXhM,UAAQ,EACRG,SAAU,SAACzP,GAAD,OAAO,EAAKqc,oBAAoB,WAAYrc,EAAE0P,OAAO3N,SAG3DF,EAAmBpC,KAAI,SAAAmJ,GACnB,OACI,4BAAQ9G,IAAM8G,EAAK9G,IAAMC,MAAQ6G,EAAK9G,KAChC8G,EAAK7G,WAM3B,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,2BAIJ,6BACA,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,2BAGA,kBAACL,GAAA,EAAKM,QAAN,CACIhL,KAAK,SACLiL,UAAQ,EACRgM,SAAWA,EACX8B,IAAI,IACJC,IAAI,KACJtb,MAAQuT,EAAQgI,aAChB7N,SAAW,SAACzP,GAAD,OAAO,EAAKqc,oBAAoB,eAAgBrc,EAAE0P,OAAO3N,UAExE,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,6BAIJ,6BACA,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,gBAGA,kBAAC,KAAD,CACIrN,MAAQuT,EAAQwH,QAChBxB,SAAYA,EACZpR,UAAS,0BAAsBoR,EAAW,WAAa,IACvD7L,SAAW,SAAC8N,GAAD,OAAU,EAAKlB,oBAAoB,UAAWkB,IACzDC,WAAY,KAGpB,6BACA,kBAACzO,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,2CAGA,kBAAC,KAAD,CACItN,IAAMsD,EAAKxF,GACXyQ,QAAUiF,EAAQmI,eAClBnC,SAAWA,EACXoC,QAAQ,KACRC,QAAQ,UACRC,SAAS,MACTC,SAAS,YACTlT,MAAM,OACN8E,SAAU,SAACY,GAAD,OAAa,EAAKgM,oBAAoB,iBAAkBhM,QAIrEiL,GACD,kBAACnQ,GAAA,EAAD,CAAQ9G,KAAK,SAAS6F,UAAU,eAAhC,kB,GA3MJpB,cA8NbC,gBAPS,SAAC,GACrB,MAAO,CACHtH,SAFoE,EAAjDA,SAGnBI,mBAHoE,EAAvCA,mBAI7BuD,KAJoE,EAAnBU,gBAOjB,CAAEgB,cAAYE,mBAAiBC,sBAAxD8B,CAA6EiT,I,mOChOtF8B,G,YACF,WAAY5V,GAAQ,IAAD,8BACf,4CAAMA,KAgCV6V,sBAAwB,WAAO,IAAD,EACa,EAAK5Z,MAApC6Z,EADkB,EAClBA,WAAYC,EADM,EACNA,eACZnY,EAAiB,EAAKoC,MAAtBpC,aACR,IAAInE,IAAEuc,QAAQF,EAAYC,GAAiB,CACvC,EAAKlW,SAAS,CACVkW,eAAgBD,IAEpB,IAAMG,EAAeH,EAChBve,KAAI,YAAkC,IAA/B2e,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KACxB,MAAM,GAAN,OAAUF,EAAV,cAAyBC,EAAzB,eAAuCC,EAAvC,UAEHC,KAAK,MACOvc,EAASgS,UAAUvC,IAAI3L,EAAa6N,gBAAgBqB,UAC1Dd,IAAI,IAAIsK,KAAK,CAACL,OA9Cd,EAkDnBM,cAAgB,WAAO,IACX3Y,EAAiB,EAAKoC,MAAtBpC,aACAkY,EAAe,EAAK7Z,MAApB6Z,WACJU,EAAW,GACfV,EAAWvY,SAAQ,SAAAI,GACZA,EAAKuY,WAAavY,EAAKwY,UACnBxY,EAAKyY,OACJzY,EAAKyY,KAAOzY,EAAKyY,KAAKK,QAAQ,OAAQ,KAE1CD,GAAQ,UAAO7Y,EAAKuY,UAAZ,cAA2BvY,EAAKwY,QAAhC,aAA4CxY,EAAKyY,KAAjD,UAIhB,IAAIpC,EAAWpW,EAAasK,KAC5B8L,EAAWA,EAASrI,OAAO,EAAGqI,EAASpI,YAAY,MAAQ,OAE3D,IAAMmJ,EAAUzF,SAASC,cAAc,KACjCrS,EAAO,IAAIoZ,KAAK,CAACE,GAAW,CAACra,KAAM,eACzC4Y,EAAQ5S,KAAO6N,IAAIC,gBAAgB/S,GACnC6X,EAAQ2B,SAAW1C,EACnB1E,SAASqH,KAAKC,YAAY7B,GAC1BA,EAAQrK,SAvEO,EA0EnBmM,eAAiB,WAAO,IACdjZ,EAAiB,EAAKoC,MAAtBpC,aAEY9D,EAASgd,YAAYC,cAAc,cACrDC,CAAY,CACRtZ,OAAQE,EAAalG,KAExB6O,MAAK,YAAe,IAAZ5I,EAAW,EAAXA,KACDkO,EAAa/R,EAASgS,UAAUvC,IAAI5L,EAAKmP,UACzCkH,EAAWpW,EAAasK,KAC5B8L,EAAWA,EAASrI,OAAO,EAAGqI,EAASpI,YAAY,MAAQ,QAC3D,IAAIqL,EAAc,CACdC,mBAAmB,uBAAD,OAAyBlD,IAE/CnI,EAAWsL,eAAeF,GACzB1Q,MAAK,SAAC6Q,GACHvL,EAAWc,iBAAiBpG,MAAK,SAAC8Q,GAC9B,IAAMtC,EAAUzF,SAASC,cAAc,KACvCwF,EAAQ5S,KAAOkV,EACftC,EAAQrK,iBAGjB5J,OAAM,SAAC8F,GACN5F,QAAQC,IAAI2F,OAjGD,EAqGnB0Q,cAAgB,SAAC3Z,GACb,IAAI8B,EAAI,gBACR,GAAG9B,EAAM,CACL,IAAI4Z,EAAe5Z,EAAKnE,MAAM,OAC9B,IAAIC,IAAEuD,QAAQua,GAAe,CAAC,IACpBC,EAAmB,EAAKvb,MAAxBub,eACF1B,EAAa,GACbxB,EAAI,EACRiD,EAAaha,SAAQ,SAAAka,GACjB,IAAIC,EAAQD,EAAKje,MAAM,QACnBme,EAAQD,EAAM,GAAGle,MAAM,OAC3Bsc,EAAWzY,KAAK,CACZzD,IAAK0a,IACL4B,UAAWyB,EAAM,GACjBxB,QAASwB,EAAM,GACfvB,KAAMsB,EAAM,QAGjBF,GAAgBI,cAAcJ,GACjCA,EAAiBK,aAAY,WACzBpY,EAAKoW,0BACN,KACH,EAAKhW,SAAS,CACViW,aACAC,eAAgBD,EAChB0B,oBAIZ,EAAK3X,SAAS,CACV+N,aAAa,KAnIF,EAuInBkK,cAAgB,WAAO,IACXhC,EAAe,EAAK7Z,MAApB6Z,WACR,IAAIrc,IAAEuD,QAAQ8Y,GAAa,CACvB,IAAInY,EAAOmY,EAAWve,KAAI,SAACoG,EAAMuO,GAC7B,GAAGvO,EAAKuY,WAAavY,EAAKwY,QACtB,OACI,yBAAKnU,UAAU,mBAAmBpI,IAAMsS,EAAQ9J,QAAU,kBAAM,EAAK2V,qBAAqB7L,KACtF,kBAAC,KAAD,CACIlK,UAAU,iBACVgW,KAAOra,EAAKuY,UAAY,MAAQvY,EAAKwY,QACrC/C,UAAW,IAEf,kBAAC,KAAD,CACI4E,KAAOra,EAAKyY,KACZhD,UAAW,EACX7L,SAAW,SAACzP,GAAQ,EAAKmgB,aAAata,EAAK/D,IAAK9B,EAAE0P,OAAO3N,UAE7D,iCAKhB,OACI,yBAAKmI,UAAU,IACX,kBAACkW,GAAA,EAAD,CAAgBxgB,GAAG,uBAAuBygB,MAAM,WAAW5U,MAAM,QAAQ6U,YAAU,GAC/E,kBAACC,GAAA,EAASvV,KAAV,CAAegF,GAAG,SAAS1F,QAAU,EAAKmU,eAA1C,wBACA,kBAAC8B,GAAA,EAASvV,KAAV,CAAegF,GAAG,SAAS1F,QAAU,EAAKyU,gBAA1C,0BAEJ,6BACElZ,GAId,OAAO,GAxKQ,EA2KnBoa,qBAAuB,SAAC7L,GAAW,IAG3BoM,EAFmB,EAAKrc,MAApB6Z,WACqB5J,GACEgK,UAAUqC,OAAO/e,MAAM,KAClD2Z,EAAa,EACU,IAAxBmF,EAAa7d,QACZ0Y,GAAczD,SAA2B,KAAlB4I,EAAa,IACpCnF,GAAczD,SAA2B,GAAlB4I,EAAa,IACpCnF,GAAczD,SAAS4I,EAAa,KACN,IAAxBA,EAAa7d,SACnB0Y,GAAczD,SAA2B,GAAlB4I,EAAa,IACpCnF,GAAczD,SAAS4I,EAAa,KAExC,EAAKzY,SAAS,CACVsT,eACD,WACC,EAAKtT,SAAS,CACVsT,gBAAYrF,QA5LL,EAiMnBmK,aAAe,SAACre,EAAKC,GAAW,IACtBic,EAAe,EAAK7Z,MAApB6Z,WACFC,EAAiB,GACrBD,EAAaA,EAAWve,KAAI,SAACoG,GAKzB,OAJAoY,EAAe1Y,K,2VAAf,IAAwBM,IACrBA,EAAK/D,MAAQA,IACZ+D,EAAKyY,KAAOvc,GAET8D,KAEX,EAAKkC,SAAS,CACViW,aACAC,iBACA5C,gBAAYrF,KA9MD,EAkNnB0K,cAAgB,WAAO,IACX1C,EAAe,EAAK7Z,MAApB6Z,WACAlY,EAAiB,EAAKoC,MAAtBpC,aACR,GAAGnE,IAAEuD,QAAQ8Y,KACLrc,IAAEuD,QAAQY,IAAyC,SAAxBA,EAAaY,OACxC,OACI,kBAAC,GAAD,CACI4U,SAAmC,eAAxBxV,EAAaY,UAtNxC,EAAKvC,MAAQ,CACT6Z,WAAY,GACZ0B,oBAAgB1J,GALL,E,0FAS0B,IAAjBlQ,EAAgB,EAAhBA,aACpB6B,EAAOC,KACL8X,EAAmB9X,KAAKzD,MAAxBub,gBACNI,cAAcJ,GACV/d,IAAEuD,QAAQY,IAAyC,SAAxBA,EAAaY,QAYxCkB,KAAKG,SAAS,CACViW,WAAY,GACZC,eAAgB,GAChByB,oBAAgB1J,KAdpBpO,KAAKG,SAAS,CACV+N,aAAa,IAEA9T,EAASgS,UAAUvC,IAAI3L,EAAa6N,gBAAgBqB,UAC1DH,iBAAiBpG,MAAK,SAAC8Q,GAC9BhR,KAAMhI,IAAIgZ,GACT9Q,MAAK,YAAe,IAAZ5I,EAAW,EAAXA,KACL8B,EAAK6X,cAAc3Z,Y,+BA2MzB,IACAC,EAAiB8B,KAAKM,MAAtBpC,aAEN,OADGnE,IAAEuD,QAAQY,KAAeA,EAAe,IAEvC,yBAAKoE,UAAU,2BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sBACTpE,EAAasK,MAEnB,kBAAC,SAAD,KACI,kBAAC,GAAD,CACItO,IAAMgE,EAAalG,GACnB6K,IAA8B,SAAxB3E,EAAaY,OAAoBZ,EAAaiP,aAAaI,IAAM,GACvE9Q,KAAOyB,EAAawP,QAAUxP,EAAawP,QAAQjR,KAAO,GAC1DgX,WAAazT,KAAKzD,MAAMkX,eAKhCzT,KAAKzD,MAAM2R,aACX,yBAAK6K,MAAM,sCACP,yBAAKA,MAAM,iBAAiBtK,KAAK,UAC7B,0BAAMsK,MAAM,WAAZ,iBAKP/Y,KAAKzD,MAAM2R,aACZ,yBAAK5L,UAAU,iBACTtC,KAAKoY,gBACLpY,KAAK8Y,sB,GA/PH5X,aA2QbC,gBAJS,SAAC,GACrB,MAAO,CAAElE,KADuC,EAAzBA,KACRiB,aADiC,EAAnBA,gBAIlBiD,CAAyB+U,IC3QlC8C,G,4LAEKjf,IAAEuD,QAAQ0C,KAAKM,MAAMrD,MACpB+C,KAAKM,MAAMyB,QAAQpE,KAAK,KAExBqC,KAAKM,MAAMlC,gB,+BAKf,OACI,6BACI,kBAAC,GAAD,MACA,kBAACmE,GAAA,EAAD,CAAWD,UAAU,uBACjB,kBAACwB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,GAAG,IAAIuB,GAAG,KACX,kBAAC,GAAD,OAEJ,kBAACxB,GAAA,EAAD,CAAKC,GAAG,IAAIuB,GAAG,KACX,kBAAC,GAAD,c,GAnBJrE,aAkCTC,gBANS,SAAC,GACrB,MAAO,CACHlE,KAF8B,EAAXA,QAMa,CAAEmB,gBAA3B+C,CAA0CwC,YAAWqV,K,yCCpC9DC,G,YACF,WAAY3Y,GAAQ,IAAD,8BACf,4CAAMA,KAQV4Y,iBAAmB,SAACjc,GAChB,IAAIlD,IAAEuD,QAAQL,IAASlD,IAAEuD,QAAQ,EAAKf,MAAM0J,QAAS,CAAC,IAC1CuC,EAAsCvL,EAAtCuL,KAAM2Q,EAAgClc,EAAhCkc,QAAS9Y,EAAuBpD,EAAvBoD,MAAO+Y,EAAgBnc,EAAhBmc,YAC1BC,EAAUpc,EAAKqc,SAAW,GAE1BrT,EAAS,CACTuC,OAAM2Q,UAAS9Y,QAAO+Y,cAAaG,QAFqBF,EAApDE,QAEwCC,KAFYH,EAA3CG,KAEqCC,QAFMJ,EAArCI,QAEwCC,QAFHL,EAA5BK,QAEwCC,eAFZN,EAAnBM,gBAIzC,EAAKxZ,SAAS,CACV8F,aAlBO,EAoCnBC,kBAAoB,SAACjI,GACjB,IAAImb,EAAcnb,EAAKkI,gBACjBF,EAAW,EAAK1J,MAAhB0J,OACNA,EAAOmT,YAAcA,EACrB,EAAKjZ,SAAS,CACV8F,YAzCW,EA6CnBF,kBAAoB,SAACC,EAAW7L,GACX,YAAd6L,GAA2B,OAAS7L,GACnC,EAAKgG,SAAS,CACVyZ,iBAAiB,IAHa,IAMhC3T,EAAW,EAAK1J,MAAhB0J,OACNA,EAAOD,GAAa7L,EACpB,EAAKgG,SAAS,CACV8F,YAtDW,EA0DnBG,aAAe,SAACC,GAAW,IACfJ,EAAW,EAAK1J,MAAhB0J,OACFK,EAAOD,EAAME,cAGnB,GAFAF,EAAMG,iBACNH,EAAMI,mBACuB,IAAzBH,EAAKI,gBAA0B,CAC/B,IAAIT,EAAOmT,aAAenT,EAAOmT,YAAYre,OAAS,GAElD,YADA+L,IAAMzF,MAAM,0CAGhB,EAAKf,MAAMuZ,cAAc5T,GACzBa,IAAMgT,KAAK,sCAEf,EAAK3Z,SAAS,CAAE8G,WAAW,KApE3B,EAAK1K,MAAQ,CACTqd,iBAAiB,EACjB3T,OAAQ,IALG,E,iFAwBfjG,KAAKkZ,iBAAiBlZ,KAAKM,MAAMrD,Q,mDAGA,IAATA,EAAQ,EAARA,KACrBA,EAAKqc,SAAoC,OAAzBrc,EAAKqc,QAAQC,SAC5BvZ,KAAKG,SAAS,CACVyZ,iBAAiB,IAGzB5Z,KAAKkZ,iBAAiBjc,K,+BAyChB,IAAD,OACGA,EAAS+C,KAAKM,MAAdrD,KACJ8c,EAAe9c,EAAOA,EAAKmc,YAAc,GACvCnT,EAAWjG,KAAKzD,MAAhB0J,OAEN,OADIA,IAAQA,EAAS,IAEjB,kBAACkB,GAAA,EAAD,CAAMC,YAAU,EAACH,UAAYjH,KAAKzD,MAAM0K,UAAYI,SAAWrH,KAAKoG,cAChE,kBAACe,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,aACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,OACL/L,KAAK,OACLud,YAAY,OACZ7f,MAAQ8L,EAAOuC,MAAQ,GACvBX,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,OAAQ3N,EAAE0P,OAAO3N,QAC5DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,eAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,gBACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,UACL/L,KAAK,OACLud,YAAY,UACZ7f,MAAQ8L,EAAOkT,SAAW,GAC1BtR,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,UAAW3N,EAAE0P,OAAO3N,QAC/DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,kBAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,cACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,QACL/L,KAAK,QACLud,YAAY,QACZ7f,MAAQ8L,EAAO5F,OAAS,GACxBwH,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,QAAS3N,EAAE0P,OAAO3N,QAC7DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,gBAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,qBACA,kBAAC,KAAD,CACIyS,UAAU,cACVjS,mBAAoB,CAAC,KAAM,KAAM,MACjCC,eAAgB,KAChBN,UAAU,KACV4N,aAAewE,EACf5f,MAAQ8L,EAAOmT,aAAe,GAC9BvR,SAAW7H,KAAKkG,kBAChBgU,cAAe,CACXxS,UAAU,GAEdyS,eAAe,eACfzS,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,uBAIJ,kBAACyH,GAAA,EAAD,KACI,kBAACkW,GAAA,EAAD,CAAWC,iBAAiB,KACxB,kBAACD,GAAA,EAAUlX,OAAX,CAAkBkF,GAAIlE,KAAKtD,OAAQ0Z,SAAS,IAAIhY,UAAU,iBAA1D,gBAGA,kBAAC8X,GAAA,EAAUjX,SAAX,CAAoBmX,SAAS,KACzB,kBAACpW,GAAA,EAAKnD,KAAN,KACI,kBAACoG,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,gBACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,UACLJ,GAAG,SACHV,UAAQ,EACRG,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,UAAW3N,EAAE0P,OAAO3N,QAC/DA,MAAQ8L,EAAOsT,SAAW,IAE1B,iCAEIxf,IAAElC,IAAI0iB,KAAYC,eAAe,SAACrgB,EAAOD,GACrC,OAAO,4BAAQA,IAAMA,EAAMC,MAAQD,GAAQC,OAIvD,kBAACgN,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,2BAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACA,kBAACH,GAAA,EAAKK,MAAN,aACI,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,OACL/L,KAAK,OACLud,YAAY,OACZ7f,MAAQ8L,EAAOuT,MAAQ,GACvB3R,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,OAAQ3N,EAAE0P,OAAO3N,QAC5DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,eAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,iBACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,UACL/L,KAAK,SACLud,YAAY,WACZ7f,MAAQ8L,EAAOwT,SAAW,GAC1B5R,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,UAAW3N,EAAE0P,OAAO3N,QAC/DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,mBAIJ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,gBACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,UACL/L,KAAK,WACLud,YAAY,UACZ7f,MAAQ8L,EAAOyT,SAAW,GAC1B7R,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,UAAW3N,EAAE0P,OAAO3N,QAC/DuN,UAAQ,IAEZ,kBAACP,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,kBAKAuD,KAAKzD,MAAMqd,iBACX,kBAACzS,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,wBACA,kBAACL,GAAA,EAAKM,QAAN,CACIe,KAAK,iBACL/L,KAAK,SACLud,YAAY,kBACZ7f,MAAQ8L,EAAO0T,gBAAkB,GACjC9R,SAAW,SAACzP,GAAQ,EAAK2N,kBAAkB,iBAAkB3N,EAAE0P,OAAO3N,QACtEuN,SAAW1H,KAAKzD,MAAMqd,kBAE1B,kBAACzS,GAAA,EAAKM,QAAQM,SAAd,CAAuBtL,KAAK,WAA5B,oCASxB,6BACA,kBAAC8G,GAAA,EAAD,CAAQ9G,KAAK,SAAS6F,UAAU,eAAhC,e,GA3OMpB,aAuPPC,gBANS,SAAC,GACrB,MAAO,CACHlE,KAF8B,EAAXA,QAMa,CAAE4c,cxB9Pb,SAAC5b,GAC1B,+CAAO,WAAOI,EAAUC,GAAjB,mCAAAC,EAAA,6DACKG,EAAQJ,IAAWrB,KAAnByB,IACA8J,EAAsFvK,EAAtFuK,KAAM2Q,EAAgFlb,EAAhFkb,QAAS9Y,EAAuEpC,EAAvEoC,MAAO+Y,EAAgEnb,EAAhEmb,YAAaG,EAAmDtb,EAAnDsb,QAASC,EAA0Cvb,EAA1Cub,KAAMC,EAAoCxb,EAApCwb,QAASC,EAA2Bzb,EAA3Byb,QAASC,EAAkB1b,EAAlB0b,gBACxEc,EAAW,CAAEjS,OAAM2Q,UAAS9Y,QAAO+Y,gBAE9BE,QADS,CAAEC,UAASC,OAAMC,UAASC,UAASC,kBAJlD,SAMGxb,KAAYK,WAAW,SAASC,IAAIC,GAAKS,OAAOsb,GANnD,2CAAP,qDAAM,KwB6PKtZ,CAA4C8X,I,mDCtPrDyB,G,YACF,WAAYpa,GAAQ,IAAD,8BACf,4CAAMA,KAUVqa,eAAiB,WACb,EAAKxa,SAAS,CACVmK,SAAU,EACVsQ,aAAc,QACdC,gBAAiB,EACjBte,MAAO,UACPue,cAAU1M,EACV2M,kBAAc3M,EACdF,aAAa,EACb8M,YAAa,MApBF,EAqCnBC,gBAAkB,SAAC7iB,GACf,EAAK+H,SAAS,CACVmK,SAAUlS,EAAE0P,OAAO3N,SAvCR,EA2CnB+gB,eAAiB,WACb,IAAIL,EAAkB,EADH,EAEc,EAAKte,MAAhC+N,EAFa,EAEbA,SAAUsQ,EAFG,EAEHA,aACRlZ,EAAgB,EAAKpB,MAAMrD,KAA3ByE,YACJyZ,EAAoBC,WAAW9Q,IAA8B,UAAjBsQ,EAA2B,GAAK,GAC7EO,EAAoB,GACnBE,QAAa,qCAGbR,GAAmBM,EADEC,WAAW1Z,EAAY4Z,iBACWC,QAAQ,GAEnE,EAAKpb,SAAS,CACV0a,kBACAte,MAAO,UACPwe,kBAAc3M,KAzDH,EA6DnBoN,kBA7DmB,uBA6DC,8CAAAjd,EAAA,6DACZwB,EADY,kBAEW,EAAKO,MAAxBzG,EAFQ,EAERA,SAAUoD,EAFF,EAEEA,KAFF,EAG2B,EAAKV,MAA1C+N,EAHU,EAGVA,SAAUsQ,EAHA,EAGAA,aAAcE,EAHd,EAGcA,SAC1BK,EAAoBC,WAAW9Q,IAA8B,UAAjBsQ,EAA2B,GAAK,GAChF,EAAKza,SAAS,CACV5D,MAAO,UACP2R,aAAa,EACb8M,YAAa,oBARD,SAWDS,KAASC,KAXR,OAWZC,EAXY,OAYGvhB,EAASgd,YAAYC,cAAc,cACtDuE,CAAa,CACTpJ,QAA+B,IAAtB2I,OAA0B/M,EAAY+M,EAC/CU,OAAQhiB,EACRiiB,UAAW7e,EAAKyE,YAAY1J,GAC5B2jB,KACAb,aACDjU,MAAK,YAAe,IAAZ5I,EAAW,EAAXA,KACC6c,EAA2B7c,EAA3B6c,SAAUC,EAAiB9c,EAAjB8c,aAClBhb,EAAKI,SAAS,CACV2a,WACAC,eACA7M,aAAa,EACb8M,YAAa,KAEjB5gB,EAAS+D,YAAYK,WAAW,YAAYC,IAAIxB,EAAKyB,KAAKF,WAAW,cAAcC,IAAIqc,GACtF9b,YAAW,SAACJ,GACNA,GAAYA,EAASX,MAAmC,YAA3BW,EAASX,OAAOa,QAC5CiB,EAAKI,SAAS,CACV5D,MAAO,kBA/BP,4CA7DD,EAmGnBwf,cAAgB,WACZ,MAAwB,YAArB,EAAKxf,MAAMA,MAA4B,KAEtC,6BACI,kBAACuK,GAAA,EAAD,CAAO5E,QAAQ,WAAf,0BAGA,kBAACqB,GAAA,EAAD,CAAQrB,QAAQ,UAAUQ,QAAU,EAAKiY,gBAAzC,oBACA,6BACA,kBAACpX,GAAA,EAAD,CAAQrB,QAAQ,QACZ,kBAAC,IAAD,CAAMwB,GAAG,cAAT,sBA7GG,EAmHnBsY,iBAAmB,WACf,OACI,6BACI,kBAAClV,GAAA,EAAD,CAAO5E,QAAQ,UAAf,uCACwC,kBAAC4E,GAAA,EAAMxD,KAAP,CAAYb,KAAK,IAAIC,QAAS,kBAAM,EAAKpC,MAAM2b,UAAU,UAAzD,iBADxC,+BAtHO,EA8HnBC,gBAAkB,WAAO,IAAD,EACmC,EAAK5b,MAAMrD,KAA1DuL,EADY,EACZA,KAAM2Q,EADM,EACNA,QAAS9Y,EADH,EACGA,MAAO8b,EADV,EACUA,YAAa7C,EADvB,EACuBA,QAE3C,OAAGvf,IAAEuD,QAAQkL,IAASzO,IAAEuD,QAAQ6b,IAAYpf,IAAEuD,QAAQ+C,IAAUtG,IAAEuD,QAAQ6e,MACnEpiB,IAAEuD,QAAQgc,IAAYvf,IAAEuD,QAAQgc,EAAQC,UAAYxf,IAAEuD,QAAQgc,EAAQE,OAASzf,IAAEuD,QAAQgc,EAAQG,UAAY1f,IAAEuD,QAAQgc,EAAQI,UAAY3f,IAAEuD,QAAQgc,EAAQK,iBAExJ,6BACI,kBAAC7S,GAAA,EAAD,CAAO5E,QAAQ,UAAf,eACgB,kBAAC4E,GAAA,EAAMxD,KAAP,CAAYZ,QAAS,kBAAM,EAAKpC,MAAM2b,UAAU,aAAhD,yBADhB,+BAQT,CACHlV,SAAS,IA9IE,EAkJnBqV,kBAAoB,WAAO,IACjB1a,EAAgB,EAAKpB,MAAMrD,KAA3ByE,YACFA,IAAaA,EAAc,IAFT,MAGkD,EAAKnF,MAArEse,EAHc,EAGdA,gBAAiBvQ,EAHH,EAGGA,SAAUyQ,EAHb,EAGaA,aAAc7M,EAH3B,EAG2BA,YACjD,GAAa,YAJS,EAGwC3R,MACtC,OAAO,KAC/B,GAAwB,SAArBmF,EAAYjF,KACX,OAAO,EAAKuf,mBAEhB,IAAIK,EAAmB,EAAKH,kBAC5B,OAAIG,EAAiBtV,QAIjB,6BAE6B,eAArBrF,EAAYjF,MACZ,kBAAC0K,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,gCACA,kBAAC8U,GAAA,EAAD,CAAYha,UAAU,QAClB,kBAAC6E,GAAA,EAAKM,QAAN,CACIe,KAAK,WACLwR,YAAY,kBACZuC,aAAW,kBACX9f,KAAK,SACLtC,MAAQmQ,EACRzC,SAAW,EAAKoT,kBAEpB,kBAACqB,GAAA,EAAWE,OAAZ,KACI,kBAACrV,GAAA,EAAKM,QAAN,CAAcW,GAAG,SAASjO,MAAQ,EAAKoC,MAAMqe,aAAe/S,SAAW,SAAAzP,GAAC,OAAI,EAAK+H,SAAS,CAAEya,aAAcxiB,EAAE0P,OAAO3N,UAC/G,4BAAQD,IAAI,QAAQC,MAAM,SAA1B,SACA,4BAAQD,IAAI,UAAUC,MAAM,WAA5B,aAGR,kBAACmiB,GAAA,EAAWE,OAAZ,KACI,kBAACjZ,GAAA,EAAD,CAAQrB,QAAQ,UAAUQ,QAAU,EAAKwY,gBAAzC,gBAMZL,EAAkB,GAClB,kBAAC1T,GAAA,EAAKG,MAAN,KACI,kBAACH,GAAA,EAAKK,MAAN,KAAY,qCAA4B,eAArB9F,EAAYjF,KAAwB,cAAgB,GAA3D,YAAZ,cAAuH,QAAzBiF,EAAY+a,SAAqB,IAAM,GAArI,YAA2I5B,EAA3I,YAAwL,QAAzBnZ,EAAY+a,SAAqB,KAAO,KACvM,6BACA,kBAAClZ,GAAA,EAAD,CAAQrB,QAAQ,UAAUQ,QAAU,EAAK8Y,mBAA2C,eAArB9Z,EAAYjF,KAAwB,eAAiB,uBAIxHyR,GACA,6BACI,kBAACK,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,WADrC,OAEU,8BAAQ,EAAKlS,MAAMye,cAI7BD,GAAgBA,EAAa2B,gBAC7B,kBAACC,GAAA,EAAD,KACI,2BAAO9Z,IAAMkY,EAAa2B,mBA/C/BL,GAzJX,EAAK9f,MAAQ,CACT+N,SAAU,EACVsQ,aAAc,QACdC,gBAAiB,EACjBte,MAAO,WAPI,E,0FAwBkB,IAATU,EAAQ,EAARA,KACxB,GAAGA,GAAQA,EAAKyE,aAAyC,YAA1BzE,EAAKyE,YAAYjF,KAAoB,CAAC,IACzDiF,EAAgBzE,EAAhByE,YACR1B,KAAKG,SAAS,CACV0a,iBAAkBnZ,EAAY4Z,eAAiB5Z,EAAYE,OAAO2Z,QAAQ,UAG9Evb,KAAKG,SAAS,CACV0a,gBAAiB,M,+BAkLnB,IACAnZ,EAAgB1B,KAAKM,MAAMrD,KAA3ByE,YAEN,OADG3H,IAAEuD,QAAQoE,KAAcA,EAAc,IAErC,kBAACa,GAAA,EAAD,KACI,kBAAC2B,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKpD,MAAN,CAAYwB,UAAU,sBAAqB,4CAA3C,IAAkEZ,EAAYkb,UAC9E,kBAAC1Y,GAAA,EAAKnD,KAAN,KACI,kBAAC+C,GAAA,EAAD,KAE6B,SAArBpC,EAAYjF,MACZ,kBAACsH,GAAA,EAAD,CAAKC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,GACnB,kBAAC2B,GAAA,EAAKK,MAAN,KAAY,gDAAZ,UAAyC9F,EAAYE,OAA+B,IAAtBF,EAAYE,MAAoBF,EAAYE,MAAQ,QAA1B,OAIvE,YAArBF,EAAYjF,MACZ,kBAACsH,GAAA,EAAD,CAAKC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,GACnB,kBAAC2B,GAAA,EAAKK,MAAN,KAAY,6CAAZ,IAAoC9K,EAAMhB,iBAAiBgG,EAAY/F,cAG/E,kBAACoI,GAAA,EAAD,CAAKC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,GACnB,kBAAC2B,GAAA,EAAKK,MAAN,KAAY,oDAA6B9F,EAAYC,iBAArD,UAGAD,EAAY4Z,eAAiB,GAC7B,kBAACvX,GAAA,EAAD,CAAKC,GAAI,EAAGuB,GAAI,EAAGC,GAAI,GACnB,kBAAC2B,GAAA,EAAKK,MAAN,KAAY,kDAAZ,KAAyC9F,EAAY4Z,oBAMzE,6BAEItb,KAAKoc,oBAGLpc,KAAK+b,qB,GAzPH7a,aAuQPC,gBAPS,SAAC,GACrB,MAAO,CACHlE,KAFwC,EAArBA,KAGnBpD,SAHwC,EAAfA,YAOlBsH,CAAyBwC,YAAW+W,KCvQ7CmC,G,YACF,WAAYvc,GAAQ,IAAD,8BACf,4CAAMA,KAeVwc,kBAAoB,WAEa,SADZ,EAAKxc,MAAdrD,KACAyE,YAAYjF,KAChB,EAAK0D,SAAS,CACViQ,iBAAiB,IAGrB,EAAK2M,oBAvBM,EA2BnBA,iBAAmB,WAAO,IACdC,EAAqB,EAAKzgB,MAA1BygB,iBACAngB,EAAU,EAAKyD,MAAfzD,MACJogB,EAAeljB,IAAE2D,KAAKb,EAAO,CAAEJ,KAAMugB,IACtB5iB,EAASgd,YAAYC,cAAc,iBACtDuE,CAAa,CACTsB,OAAQD,EAAaC,SACtBrW,MAAK,YAAc,EAAX5I,KACC8I,SACJD,IAAMC,QAAQ,qCAGtB,EAAK5G,SAAS,CACViQ,iBAAiB,KAxCN,EA4CnB+M,iBAAmB,WACf,EAAKhd,SAAS,CACViQ,iBAAiB,KA3CrB,EAAK7T,MAAQ,CACTygB,iBAAkB,IAJP,E,0FAQkB,IAAT/f,EAAQ,EAARA,KACrBA,GAAQA,EAAKyE,aAAezE,EAAKyE,YAAYjF,MAAkC,SAA1BQ,EAAKyE,YAAYjF,MACrEuD,KAAKG,SAAS,CACV6c,iBAAkB/f,EAAKyE,YAAYjF,S,+BAuCrC,IAAD,OACCiF,EAAgB1B,KAAKM,MAAMrD,KAA3ByE,YACAsb,EAAqBhd,KAAKzD,MAA1BygB,iBAGN,OAFGjjB,IAAEuD,QAAQoE,KAAcA,EAAc,IACrCsb,IAAkBA,EAAmBtb,EAAYjF,MAEjD,kBAAC8F,GAAA,EAAD,KACI,yBAAKD,UAAU,uDACX,yBAAKA,UAAS,kDAAkE,eAArB0a,EAAoC,8BAAgC,IACvHta,QAAU,kBAAM,EAAKvC,SAAS,CAAE6c,iBAAkB,iBACtD,0BAAM1a,UAAU,kEACZ,kBAAC,IAAD,CAAkBtK,GAAG,4BAEzB,yBAAKsK,UAAU,qEACX,wBAAIA,UAAU,sDAAsDsD,qBAAmB,MAAvF,IACK,0BAAMtD,UAAU,SAAhB,QACD,0BAAMA,UAAU,sBAAhB,IACI,kBAAC,IAAD,CAAkBtK,GAAG,iCAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,0CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,+BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,kCAKrC,yBAAKsK,UAAS,kDAAkE,YAArB0a,EAAiC,8BAAgC,IACpHta,QAAU,kBAAM,EAAKvC,SAAS,CAAE6c,iBAAkB,cACtD,0BAAM1a,UAAU,4EACZ,kBAAC,IAAD,CAAkBtK,GAAG,2BAEzB,yBAAKsK,UAAU,qEACX,wBAAIA,UAAU,sDAAsDsD,qBAAmB,MAAvF,IACK,0BAAMtD,UAAU,SAAhB,SACD,0BAAMA,UAAU,sBAAhB,MAEI,kBAAC,IAAD,CAAkBtK,GAAG,gCAIjC,yBAAKsK,UAAU,kBACX,wBAAIA,UAAU,0CACV,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,8BAEzB,wBAAIsK,UAAU,iBACV,kBAAC,IAAD,CAAkBtK,GAAG,kCAOrCglB,GAAoBA,IAAqBtb,EAAYjF,MACrD,yBAAKoH,MAAM,UACP,kBAACN,GAAA,EAAD,CAAQrB,QAAQ,UAAUQ,QAAU1C,KAAK8c,mBAAzC,gBAIJ9c,KAAKzD,MAAM6T,iBACX,kBAAC,GAAD,CACI3P,KAAOT,KAAKzD,MAAM6T,gBAClBnB,WAAW,2BACXC,SAAS,gEACTG,cAAgBrP,KAAK+c,iBACrBvN,aAAexP,KAAKmd,wB,GA5IzBjc,aA2JJC,gBAPS,SAAC,GACrB,MAAO,CACHlE,KAFqC,EAAlBA,KAGnBJ,MAHqC,EAAZA,SAOlBsE,CAAyB0b,IC3JlCO,G,YACF,WAAY9c,GAAQ,IAAD,uBACf,4CAAMA,KAcV2b,UAAY,SAACoB,GACT,EAAKld,SAAS,CACVmd,aAAcD,IAElB,EAAK/c,MAAMyB,QAAQpE,KAAK,IAAM0f,IAhB9B,IAAIE,EAAYjd,EAAM/E,SAASiiB,KAAOld,EAAM/E,SAASiiB,KAAKvR,OAAO,GAAK,GAHvD,OAIf,EAAK1P,MAAQ,CACT+gB,aAAcC,GAAwB,WAL3B,E,iFAUZxjB,IAAEuD,QAAQ0C,KAAKM,MAAMrD,OACpB+C,KAAKM,MAAMyB,QAAQpE,KAAK,O,+BAWtB,IAAD,OACL,OACI,6BACI,kBAAC,GAAD,MACA,kBAAC4E,GAAA,EAAD,CAAWD,UAAU,qBACjB,kBAACmb,GAAA,EAAIlb,UAAL,CAAevK,GAAG,oBAAoB0lB,UAAY1d,KAAKzD,MAAM+gB,cACzD,kBAACxZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKyB,GAAI,EAAGlD,UAAU,aAClB,kBAACN,GAAA,EAAD,CAAKE,QAAQ,QAAQI,UAAU,eAC3B,kBAACN,GAAA,EAAIoB,KAAL,KACI,kBAACpB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,WAAW6X,SAAS,UAAU5X,QAAU,kBAAM,EAAKvC,SAAS,CAAEmd,aAAc,cAA3F,YAEJ,kBAACtb,GAAA,EAAIoB,KAAL,KACI,kBAACpB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,WAAW6X,SAAS,UAAU5X,QAAU,kBAAM,EAAKvC,SAAS,CAAEmd,aAAc,cAA3F,YAEJ,kBAACtb,GAAA,EAAIoB,KAAL,KACI,kBAACpB,GAAA,EAAIsB,KAAL,CAAUb,KAAK,QAAQ6X,SAAS,OAAO5X,QAAU,kBAAM,EAAKvC,SAAS,CAAEmd,aAAc,WAArF,YAIZ,kBAACvZ,GAAA,EAAD,CAAKyB,GAAI,EAAGlD,UAAU,8BAClB,kBAACmb,GAAA,EAAIE,QAAL,KACI,kBAACF,GAAA,EAAIG,KAAL,CAAUtD,SAAS,WACf,kBAAC,GAAD,OAEJ,kBAACmD,GAAA,EAAIG,KAAL,CAAUtD,SAAS,WACf,kBAAC,GAAD,CAAS2B,UAAYjc,KAAKic,aAE9B,kBAACwB,GAAA,EAAIG,KAAL,CAAUtD,SAAS,QACf,kBAAC,GAAD,iB,GApDrBpZ,aAsEJC,gBANS,SAAC,GACrB,MAAO,CACHlE,KAF8B,EAAXA,QAMZkE,CAAyBwC,YAAWyZ,KCoLpCS,GA9PC,WACZ,OACI,yBAAKvb,UAAU,WACX,kBAAC,GAAD,MACA,kBAACC,GAAA,EAAD,CAAWD,UAAU,qBACjB,wBAAIuB,MAAM,UAAS,8CACnB,uBAAGvB,UAAU,eAAc,gEAC3B,qWAMA,6BACA,4BAAI,0EACJ,sTAMA,6BACA,4BAAI,uDACJ,mSAKA,6OAKA,6BACA,4BAAI,sDACJ,uKAGA,sZAKA,kbAMA,4ZAMA,6BACA,4BAAI,mDACJ,qEAGA,4BACI,2DACA,wEACA,gEAGJ,6BACA,4BAAI,iDACJ,qGAGA,4BACI,+HAGA,iHAGA,8IAGA,2DAIJ,oFAEA,6BACA,4BAAI,4DACJ,+HAGA,4BACI,6UAKA,wPAMJ,6BACA,4BAAI,+CACJ,4BACI,iQAGI,4BACI,wDAGA,uEAGA,4GAGA,8LAMR,qOAIA,qJAEI,4BACI,yWAMA,mPAKA,qOAMR,sQAMJ,6BACA,4BAAI,+CACJ,oHAGA,4BACI,8PAIA,yLAKJ,oFAEA,6BACA,4BAAI,mDACJ,+hBAOA,0QAIA,6IAIA,6BACA,4BAAI,uDACJ,sWAMA,6BACA,4BAAI,uCACJ,m9BAWA,6BACA,4BAAI,uDACJ,opBASA,6BACA,4BAAI,2DACJ,8GAEI,kBAAC,IAAD,CAAMoB,GAAG,UAAT,gCAGJ,6BACA,4BAAI,8DACJ,4VAKA,sfAMA,6BACA,4BAAI,uDACJ,2GAEI,uBAAGjB,KAAK,sCAAR,kCAGR,kBAAC,GAAD,QCsBGqb,GA/QD,WACV,OACI,yBAAKxb,UAAU,SACX,kBAAC,GAAD,MACA,kBAACC,GAAA,EAAD,CAAWD,UAAU,mBACjB,wBAAIuB,MAAM,UAAS,gDACnB,uBAAGvB,UAAU,eAAc,gEAC3B,kkCAWA,6pBAQA,qQAGoB,kBAAC,IAAD,CAAMoB,GAAG,YAAT,iCAHpB,sFAOA,6BACA,4BAAI,6DACJ,2BACI,oDADJ,gKAIA,2BACI,mEADJ,kdAOA,2BACI,6DADJ,kpBASA,2BACI,qEADJ,8hBAOA,2BACI,wDADJ,qSAKA,2BACI,2EADJ,oxBAUA,6BACA,4BAAI,kDACJ,2BACI,4CADJ,urBAQA,2BACI,oCADJ,4+CAeA,2BACI,qFADJ,shBAOA,2BACI,8CADJ,wVAMA,6BACA,4BAAI,6DACJ,2BACI,wEADJ,wgDAeA,0vBAQA,2BACI,oDADJ,w7BAUA,saAMA,gxBASA,2BACI,oDADJ,0XAOA,6BACA,4BAAI,oDACJ,4zBAUA,6BACA,4BAAI,qDACJ,kxBASA,6BACA,4BAAI,wDACJ,4YAKA,obAOA,6BACA,4BAAI,uDACJ,6nCAWA,ydAOA,6BACA,4BAAI,2CACJ,gsCAaA,6BACA,4BAAI,6CACJ,sXAMA,6BACA,4BAAI,4CACJ,gHACsF,kBAAC,IAAD,CAAMA,GAAG,WAAT,kBADtF,uGAKA,6BACA,4BAAI,iEACJ,iEACuC,uBAAGjB,KAAK,gCAAR,yBADvC,2EAKJ,kBAAC,GAAD,QCnQNsb,G,4LAEE/d,KAAKM,MAAMhE,YAAY0D,KAAKM,MAAMzG,UAClCmG,KAAKM,MAAM1D,sBAAsBoD,KAAKM,MAAMrG,oBAC5C+F,KAAKM,MAAM0d,a,+BAIX,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAS,SAAA7d,GAAK,OAAI,kBAAC,GAASA,MAClD,kBAAC,IAAD,CAAO4d,KAAK,aAAaE,UAAYpF,KACrC,kBAAC,IAAD,CAAOkF,KAAK,QAAQE,UAAYhB,KAChC,kBAAC,IAAD,CAAOc,KAAK,WAAWE,UAAYP,KACnC,kBAAC,IAAD,CAAOK,KAAK,SAASE,UAAYN,MAErC,kBAAC,IAAD,CAAOO,MAAO,CAAEC,MAAO,GAAKtX,QAAU,IAAOsR,MAAO,EAAOiG,OAAS,QAAUC,SAAW,mB,GAjBvFtd,aAuBHC,eAAQ,KAAM,CAAE7E,Y7BlCJ,SAACzC,GACxB,MAAO,CACH4C,KAAMC,EAAM1B,YAAYtC,aACxBiE,QAAS9C,I6B+B2B+C,sB7B3BP,SAAC6hB,GAClC,MAAO,CACHhiB,KAAMC,EAAM1B,YAAYrC,wBACxBgE,QAAS8hB,I6BwBkDT,S7BpB3C,WACpB,OAAO,SAAA3f,GACHF,KAAYK,WAAW,SACtBG,MACAkI,MAAK,SAAAjI,GACF,GAAGA,EAAU,CACT,IAAI/B,EAAQ,GACZ+B,EAASC,KAAKhB,SAAQ,SAAAY,GAAG,OAAI5B,EAAMc,K,2VAAN,EAAY3F,GAAIyG,EAAIzG,IAAOyG,EAAIR,YAC5DI,EAAS,CACL5B,KAAMC,EAAM1B,YAAYlC,UACxB6D,QAASE,QAIpBuE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,S6BKTF,CAAgE4c,I,GC1BrBrhB,EAAMzB,aAAxDhB,G,GAAAA,mBAAoBN,G,GAAAA,gBAAiBH,G,GAAAA,SAC7CkD,EAAMxB,sBAEN,IAAMwjB,GAAmBpjB,OAAOqjB,sCAAwCC,IAClEC,GAAQC,YAAYC,EAAUL,GAChCM,YAAgBC,OAWpBpK,IAASsJ,OAAO,mBARH,kBACT,kBAAC,IAAD,CAAUU,MAAQA,IACd,kBAAC,IAAD,CAAchD,OAASliB,GAAkBH,SAAUA,GAASG,KACxD,kBAAC,GAAD,CAAKE,SAAWF,GAAkBM,mBAAqBA,SAKnD,MAAU2V,SAASsP,eAAe,U,mBC3BlDvnB,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.2f3bb2c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.536159e5.png\";","var map = {\n\t\"./AD.svg\": 235,\n\t\"./AE.svg\": 236,\n\t\"./AF.svg\": 237,\n\t\"./AG.svg\": 238,\n\t\"./AI.svg\": 239,\n\t\"./AL.svg\": 240,\n\t\"./AM.svg\": 241,\n\t\"./AO.svg\": 242,\n\t\"./AR.svg\": 243,\n\t\"./AS.svg\": 244,\n\t\"./AT.svg\": 245,\n\t\"./AU.svg\": 246,\n\t\"./AW.svg\": 247,\n\t\"./AX.svg\": 248,\n\t\"./AZ.svg\": 249,\n\t\"./BA.svg\": 250,\n\t\"./BB.svg\": 251,\n\t\"./BD.svg\": 252,\n\t\"./BE.svg\": 253,\n\t\"./BF.svg\": 254,\n\t\"./BG.svg\": 255,\n\t\"./BH.svg\": 256,\n\t\"./BI.svg\": 257,\n\t\"./BJ.svg\": 258,\n\t\"./BL.svg\": 259,\n\t\"./BM.svg\": 260,\n\t\"./BN.svg\": 261,\n\t\"./BO.svg\": 262,\n\t\"./BR.svg\": 263,\n\t\"./BS.svg\": 264,\n\t\"./BT.svg\": 265,\n\t\"./BV.svg\": 266,\n\t\"./BW.svg\": 267,\n\t\"./BY.svg\": 268,\n\t\"./BZ.svg\": 269,\n\t\"./CA.svg\": 270,\n\t\"./CC.svg\": 271,\n\t\"./CD.svg\": 272,\n\t\"./CF.svg\": 273,\n\t\"./CG.svg\": 274,\n\t\"./CH.svg\": 275,\n\t\"./CI.svg\": 276,\n\t\"./CK.svg\": 277,\n\t\"./CL.svg\": 278,\n\t\"./CM.svg\": 279,\n\t\"./CN.svg\": 280,\n\t\"./CO.svg\": 281,\n\t\"./CR.svg\": 282,\n\t\"./CU.svg\": 283,\n\t\"./CV.svg\": 284,\n\t\"./CW.svg\": 285,\n\t\"./CX.svg\": 286,\n\t\"./CY.svg\": 287,\n\t\"./CZ.svg\": 288,\n\t\"./DE.svg\": 289,\n\t\"./DJ.svg\": 290,\n\t\"./DK.svg\": 291,\n\t\"./DM.svg\": 292,\n\t\"./DO.svg\": 293,\n\t\"./DZ.svg\": 294,\n\t\"./EC.svg\": 295,\n\t\"./EE.svg\": 296,\n\t\"./EG.svg\": 297,\n\t\"./ER.svg\": 298,\n\t\"./ES.svg\": 299,\n\t\"./ET.svg\": 300,\n\t\"./EU.svg\": 301,\n\t\"./FI.svg\": 302,\n\t\"./FJ.svg\": 303,\n\t\"./FK.svg\": 304,\n\t\"./FM.svg\": 305,\n\t\"./FO.svg\": 306,\n\t\"./FR.svg\": 307,\n\t\"./GA.svg\": 308,\n\t\"./GB-ENG.svg\": 309,\n\t\"./GB-NIR.svg\": 310,\n\t\"./GB-SCT.svg\": 311,\n\t\"./GB-WLS.svg\": 312,\n\t\"./GB-ZET.svg\": 313,\n\t\"./GB.svg\": 314,\n\t\"./GD.svg\": 315,\n\t\"./GE.svg\": 316,\n\t\"./GF.svg\": 317,\n\t\"./GG.svg\": 318,\n\t\"./GH.svg\": 319,\n\t\"./GI.svg\": 320,\n\t\"./GL.svg\": 321,\n\t\"./GM.svg\": 322,\n\t\"./GN.svg\": 323,\n\t\"./GP.svg\": 324,\n\t\"./GQ.svg\": 325,\n\t\"./GR.svg\": 326,\n\t\"./GS.svg\": 327,\n\t\"./GT.svg\": 328,\n\t\"./GU.svg\": 329,\n\t\"./GW.svg\": 330,\n\t\"./GY.svg\": 331,\n\t\"./HK.svg\": 332,\n\t\"./HM.svg\": 333,\n\t\"./HN.svg\": 334,\n\t\"./HR.svg\": 335,\n\t\"./HT.svg\": 336,\n\t\"./HU.svg\": 337,\n\t\"./ID.svg\": 338,\n\t\"./IE.svg\": 339,\n\t\"./IL.svg\": 340,\n\t\"./IM.svg\": 341,\n\t\"./IN.svg\": 342,\n\t\"./IO.svg\": 343,\n\t\"./IQ.svg\": 344,\n\t\"./IR.svg\": 345,\n\t\"./IS.svg\": 346,\n\t\"./IT.svg\": 347,\n\t\"./JE.svg\": 348,\n\t\"./JM.svg\": 349,\n\t\"./JO.svg\": 350,\n\t\"./JP.svg\": 351,\n\t\"./KE.svg\": 352,\n\t\"./KG.svg\": 353,\n\t\"./KH.svg\": 354,\n\t\"./KI.svg\": 355,\n\t\"./KM.svg\": 356,\n\t\"./KN.svg\": 357,\n\t\"./KP.svg\": 358,\n\t\"./KR.svg\": 359,\n\t\"./KW.svg\": 360,\n\t\"./KY.svg\": 361,\n\t\"./KZ.svg\": 362,\n\t\"./LA.svg\": 363,\n\t\"./LB.svg\": 364,\n\t\"./LC.svg\": 365,\n\t\"./LGBT.svg\": 366,\n\t\"./LI.svg\": 367,\n\t\"./LK.svg\": 368,\n\t\"./LR.svg\": 369,\n\t\"./LS.svg\": 370,\n\t\"./LT.svg\": 371,\n\t\"./LU.svg\": 372,\n\t\"./LV.svg\": 373,\n\t\"./LY.svg\": 374,\n\t\"./MA.svg\": 375,\n\t\"./MC.svg\": 376,\n\t\"./MD.svg\": 377,\n\t\"./ME.svg\": 378,\n\t\"./MG.svg\": 379,\n\t\"./MH.svg\": 380,\n\t\"./MK.svg\": 381,\n\t\"./ML.svg\": 382,\n\t\"./MM.svg\": 383,\n\t\"./MN.svg\": 384,\n\t\"./MO.svg\": 385,\n\t\"./MP.svg\": 386,\n\t\"./MQ.svg\": 387,\n\t\"./MR.svg\": 388,\n\t\"./MS.svg\": 389,\n\t\"./MT.svg\": 390,\n\t\"./MU.svg\": 391,\n\t\"./MV.svg\": 392,\n\t\"./MW.svg\": 393,\n\t\"./MX.svg\": 394,\n\t\"./MY.svg\": 395,\n\t\"./MZ.svg\": 396,\n\t\"./NA.svg\": 397,\n\t\"./NC.svg\": 398,\n\t\"./NE.svg\": 399,\n\t\"./NF.svg\": 400,\n\t\"./NG.svg\": 401,\n\t\"./NI.svg\": 402,\n\t\"./NL.svg\": 403,\n\t\"./NO.svg\": 404,\n\t\"./NP.svg\": 405,\n\t\"./NR.svg\": 406,\n\t\"./NU.svg\": 407,\n\t\"./NZ.svg\": 408,\n\t\"./OM.svg\": 409,\n\t\"./PA.svg\": 410,\n\t\"./PE.svg\": 411,\n\t\"./PF.svg\": 412,\n\t\"./PG.svg\": 413,\n\t\"./PH.svg\": 414,\n\t\"./PK.svg\": 415,\n\t\"./PL.svg\": 416,\n\t\"./PM.svg\": 417,\n\t\"./PN.svg\": 418,\n\t\"./PR.svg\": 419,\n\t\"./PS.svg\": 420,\n\t\"./PT.svg\": 421,\n\t\"./PW.svg\": 422,\n\t\"./PY.svg\": 423,\n\t\"./QA.svg\": 424,\n\t\"./RE.svg\": 425,\n\t\"./RO.svg\": 426,\n\t\"./RS.svg\": 427,\n\t\"./RU.svg\": 428,\n\t\"./RW.svg\": 429,\n\t\"./SA.svg\": 430,\n\t\"./SAMI.svg\": 431,\n\t\"./SB.svg\": 432,\n\t\"./SC.svg\": 433,\n\t\"./SD.svg\": 434,\n\t\"./SE-JAM.svg\": 435,\n\t\"./SE-SKA.svg\": 436,\n\t\"./SE-VAS.svg\": 437,\n\t\"./SE.svg\": 438,\n\t\"./SEFI.svg\": 439,\n\t\"./SG.svg\": 440,\n\t\"./SI.svg\": 441,\n\t\"./SJ.svg\": 442,\n\t\"./SK.svg\": 443,\n\t\"./SL.svg\": 444,\n\t\"./SM.svg\": 445,\n\t\"./SN.svg\": 446,\n\t\"./SO.svg\": 447,\n\t\"./SR.svg\": 448,\n\t\"./SS.svg\": 449,\n\t\"./ST.svg\": 450,\n\t\"./SV.svg\": 451,\n\t\"./SX.svg\": 452,\n\t\"./SY.svg\": 453,\n\t\"./SZ.svg\": 454,\n\t\"./TC.svg\": 455,\n\t\"./TD.svg\": 456,\n\t\"./TF.svg\": 457,\n\t\"./TG.svg\": 458,\n\t\"./TH.svg\": 459,\n\t\"./TJ.svg\": 460,\n\t\"./TK.svg\": 461,\n\t\"./TL.svg\": 462,\n\t\"./TM.svg\": 463,\n\t\"./TN.svg\": 464,\n\t\"./TO.svg\": 465,\n\t\"./TORN.svg\": 466,\n\t\"./TR.svg\": 467,\n\t\"./TT.svg\": 468,\n\t\"./TV.svg\": 469,\n\t\"./TW.svg\": 470,\n\t\"./TZ.svg\": 471,\n\t\"./UA.svg\": 472,\n\t\"./UG.svg\": 473,\n\t\"./UM.svg\": 474,\n\t\"./US-CA.svg\": 475,\n\t\"./US.svg\": 476,\n\t\"./UY.svg\": 477,\n\t\"./UZ.svg\": 478,\n\t\"./VA.svg\": 479,\n\t\"./VC.svg\": 480,\n\t\"./VE.svg\": 481,\n\t\"./VG.svg\": 482,\n\t\"./VI.svg\": 483,\n\t\"./VN.svg\": 484,\n\t\"./VU.svg\": 485,\n\t\"./WF.svg\": 486,\n\t\"./WS.svg\": 487,\n\t\"./WW-AFR.svg\": 488,\n\t\"./WW-ASI.svg\": 489,\n\t\"./WW-AUS.svg\": 490,\n\t\"./WW-EUR.svg\": 491,\n\t\"./WW-NAM.svg\": 492,\n\t\"./WW-SAM.svg\": 493,\n\t\"./WW.svg\": 494,\n\t\"./XK.svg\": 495,\n\t\"./YE.svg\": 496,\n\t\"./YT.svg\": 497,\n\t\"./ZA.svg\": 498,\n\t\"./ZM.svg\": 499,\n\t\"./ZW.svg\": 500\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 234;","export const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const SET_SUPPORTED_LANGUAGES = 'SET_SUPPORTED_LANGUAGES';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PLANS = 'GET_PLANS';\nexport const GET_FILE_LIST = 'GET_FILE_LIST';\nexport const UPDATE_FILE = 'UPDATE_FILE';\nexport const UPDATE_FILE_IN_STATE = 'UPDATE_FILE_IN_STATE';\nexport const SET_FILE_TO_UPLOAD = 'SET_FILE_TO_UPLOAD';\nexport const SET_SELECTED_FILE = 'SET_SELECTED_FILE';\n","const LanguageMap = {\n    'tr': 'tr-TR',\n    'en': 'en-US'\n}\n\nexport default LanguageMap;","import _ from 'lodash';\nimport messages_tr from \"../translations/tr.json\";\nimport messages_en from \"../translations/en.json\";\n\nif (!Intl.PluralRules) {\n    require('intl-pluralrules');\n}\n\n// if (!Intl.RelativeTimeFormat) {\n//     require('@formatjs/intl-relativetimeformat/polyfill');\n//     require('@formatjs/intl-relativetimeformat/dist/include-aliases');\n// }\n\nconst supportedLanguages = [\n    {\n        key: 'tr',\n        value: 'Türkçe'\n    },\n    {\n        key: 'en',\n        value: 'English'\n    }\n];\n\nconst messages = {\n    'tr': messages_tr,\n    'en': messages_en\n};\nvar currentLanguage = navigator.language.split(/[-_]/)[0];\n\nif(!_.has(messages, currentLanguage)) {\n    currentLanguage = 'en'\n}\n\nexport default {\n    supportedLanguages,\n    currentLanguage,\n    messages\n}","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB3WVII6cEAbOz-k0U0i0KcmseIxKYAUpo\",\n  authDomain: \"speechtext-72dfc.firebaseapp.com\",\n  databaseURL: \"https://speechtext-72dfc.firebaseio.com\",\n  projectId: \"speechtext-72dfc\",\n  storageBucket: \"gs://speechtext-72dfc.appspot.com\",\n  messagingSenderId: \"282156468695\",\n  appId: \"1:282156468695:web:257c6a6595b6d7eb65a392\"\n};\n\nvar firebaseProdConfig = {\n  apiKey: \"AIzaSyDbbYt3Mo-UwrqleiDbZeKrKrQSpaavWxw\",\n  authDomain: \"speechtext-io.firebaseapp.com\",\n  databaseURL: \"https://speechtext-io.firebaseio.com\",\n  projectId: \"speechtext-io\",\n  storageBucket: \"gs://speechtext-io.appspot.com/\",\n  messagingSenderId: \"936987129989\",\n  appId: \"1:936987129989:web:4dc13f4d3b3deeab4051ec\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import ReactGA from 'react-ga';\n\nimport * as ActionTypes from './action-types';\nimport LanguageMap from './language-map';\nimport Localization from './localization';\nimport firebase from './firebase';\n\nconst addZeroes = (val) => {\n    return val.length === 1 ? '0' + val : val;\n}\n\nexport default {\n    ActionTypes,\n    LanguageMap,\n    Localization,\n    initGoogleAnalytics: () => {\n        ReactGA.initialize('UA-147269515-1');\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    },\n    firebase,\n    addZeroes,\n    formatExpireDate: (expireDate, language) => {\n        if(!expireDate) return null;\n        var date = new Date(expireDate.seconds * 1000);\n        let day = addZeroes(date.getDate());\n        let month = addZeroes(date.getMonth() + 1);\n        let year = date.getFullYear();\n        if(language === 'tr') {\n            return day + '/' + month + '/' + year;\n        }\n        return month + '/' + day + '/' + year;\n    }\n}","import Utils from '../utils';\n\nconst setLanguage = (state = 'en', action) => {\n    switch(action.type) {\n        case Utils.ActionTypes.SET_LANGUAGE:\n            return action.payload || 'en';\n        default:\n            return state;\n    }\n}\n\nconst DEFAULT_SUPPORTED_LANGUAGES = [\n    {\n        key: 'tr',\n        value: 'Türkçe'\n    },\n    {\n        key: 'en',\n        value: 'English'\n    }\n]\n\nconst setSupportedLanguages = (state = DEFAULT_SUPPORTED_LANGUAGES, action) => {\n    switch(action.type) {\n        case Utils.ActionTypes.SET_SUPPORTED_LANGUAGES:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nconst getPlans = (state = [], action) => {\n    switch(action.type) {\n        case Utils.ActionTypes.GET_PLANS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default {\n    setLanguage,\n    setSupportedLanguages,\n    plans: getPlans\n}","import Utils from '../utils';\n\nconst auth = (state = {}, action) => {\n    switch(action.type) {\n        case Utils.ActionTypes.LOGIN:\n            return action.payload;\n        case Utils.ActionTypes.LOGOUT:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default auth;","import _ from 'lodash';\nimport Utils from '../utils';\nconst { ActionTypes } = Utils;\n\nexport const getFileList = (state = [], action) => {\n    var found = false;\n    var newState = [];\n    switch(action.type) {\n        case ActionTypes.GET_FILE_LIST:\n            newState = _.isEmpty(state) ? action.payload : [];\n            _.each(action.payload, file => {\n                var currentFile =_.find(state, { id: file });\n                newState.push(_.merge(file, currentFile));\n            });\n            return newState;\n        case ActionTypes.UPDATE_FILE:\n            const file = action.payload;\n            state.forEach(elem => {\n                if(elem.id === file.id) {\n                    newState.push(_.clone(file));\n                    found = true;\n                } else {\n                    newState.push(elem);\n                }\n            });\n            if(!found) newState.push(file);\n            return newState;\n        case ActionTypes.UPDATE_FILE_IN_STATE:\n            const { fileId, data } = action.payload;\n            state.forEach(elem => {\n                if(elem.id === fileId) {\n                    var file = _.merge(elem, data);\n                    newState.push(file);\n                    found = true;\n                } else {\n                    newState.push(elem);\n                }\n            });\n            return newState;\n        case ActionTypes.SET_FILE_TO_UPLOAD:\n            if(!_.isEmpty(action.payload)) {\n                return [action.payload, ...state]\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport const setSelectedFile = (state = {}, action) => {\n    switch(action.type) {\n        case ActionTypes.SET_SELECTED_FILE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport AppReducer from './app-reducer';\nimport AuthReducer from './auth-reducer';\nimport { getFileList, setSelectedFile } from './file-reducer';\n\nexport default combineReducers({\n    language: AppReducer.setLanguage,\n    supportedLanguages: AppReducer.setSupportedLanguages,\n    user: AuthReducer,\n    plans: AppReducer.plans,\n    userFiles: getFileList,\n    selectedFile: setSelectedFile\n})","import _ from 'lodash';\nimport Utils from '../utils';\nconst { firestore } = Utils.firebase;\n\nexport const login = (data) => {\n    return async (dispatch, getState) => {\n        const response = await firestore().collection('users').doc(data.uid).get()\n        .catch(error => {\n            console.log('error');\n        });\n        \n        if(_.isEmpty(response) || _.isEmpty(response.data())) {\n            const demoPlan = _.find(getState()['plans'], ['type', 'Demo']);\n            data = {...data, currentPlan: demoPlan};\n            data.currentPlan.remainingMinutes = demoPlan.quota;\n            await firestore().collection('users')\n            .doc(data.uid)\n            .set(data);\n        } else {\n            data = response.data();\n        }\n        dispatch({\n            type: Utils.ActionTypes.LOGIN,\n            payload: data\n        });\n\n        firestore().collection('users').doc(data.uid).onSnapshot((snapshot) => {\n            var data = {};\n            if(snapshot && snapshot.data && snapshot.data()) {\n                data = snapshot.data();\n            }\n            dispatch({\n                type: Utils.ActionTypes.LOGIN,\n                payload: data\n            }); \n        })\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: Utils.ActionTypes.LOGOUT,\n        payload: {}\n    }\n}\n","import Utils from '../utils';\nconst { firestore } = Utils.firebase;\n\nexport const updateProfile = (data) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().user;\n        const { name, surname, email, phoneNumber, country, city, zipCode, address, identityNumber} = data;\n        var userData = { name, surname, email, phoneNumber };\n        var addressData = { country, city, zipCode, address, identityNumber };\n        userData.Billing = addressData;\n        await firestore().collection('users').doc(uid).update(userData);\n    }\n}","import Utils from '../utils';\nconst { firestore } = Utils.firebase;\n\nexport const setLanguage = (language) => {\n    return {\n        type: Utils.ActionTypes.SET_LANGUAGE,\n        payload: language\n    }\n}\n\nexport const setSupportedLanguages = (languages) => {\n    return {\n        type: Utils.ActionTypes.SET_SUPPORTED_LANGUAGES,\n        payload: languages\n    }\n}\n\nexport const getPlans = () => {\n    return dispatch => {\n        firestore().collection('plans')\n        .get()\n        .then(snapshot => {\n            if(snapshot) {\n                var plans = [];\n                snapshot.docs.forEach(doc => plans.push({id: doc.id, ...doc.data()}));\n                dispatch({\n                    type: Utils.ActionTypes.GET_PLANS,\n                    payload: plans\n                });\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n}","import _ from 'lodash';\nimport Utils from '../utils';\nconst { firestore } = Utils.firebase;\n\nexport const getFileList = () => {\n    return async (dispatch, getState) => {\n        const { user, selectedFile } = getState();\n        const snapshot = await firestore().collection('userfiles').doc(user.uid).collection('files')\n        .get();\n        if(snapshot && snapshot.docs) {\n            var userFiles = [];\n            snapshot.docs.forEach(doc => {\n                let data = doc.data();\n                if(data.status !== 'DELETED') {\n                    userFiles.push({id: doc.id, ...doc.data()})\n                }\n            });\n            userFiles = _.orderBy(userFiles, 'originalFile.createDate', 'desc');\n            dispatch({\n                type: Utils.ActionTypes.GET_FILE_LIST,\n                payload: userFiles\n            });\n            if(!_.isEmpty(selectedFile)) {\n                var file =_.find(userFiles, { id: selectedFile.id });\n                dispatch({\n                    type: Utils.ActionTypes.SET_SELECTED_FILE,\n                    payload: file\n                });\n            }\n        }\n\n        firestore().collection('userfiles').doc(user.uid).collection('files')\n        .onSnapshot((snapshot) => {\n            if(snapshot && snapshot.docs) {\n                const { selectedFile } = getState();\n                var userFiles = [];\n                var deletedFiles = [];\n                snapshot.docs.forEach(doc => {\n                    let data = doc.data();\n                    if(data.status === 'DELETED') {\n                        deletedFiles.push({id: doc.id, ...doc.data()});\n                    } else {\n                        userFiles.push({id: doc.id, ...doc.data()})\n                    }\n                });\n                userFiles = _.orderBy(userFiles, 'originalFile.createDate', 'desc');\n                dispatch({\n                    type: Utils.ActionTypes.GET_FILE_LIST,\n                    payload: userFiles\n                });\n                if(!_.isEmpty(selectedFile)) {\n                    var file =_.find(userFiles, { id: selectedFile.id });\n                    if(file) {\n                        dispatch({\n                            type: Utils.ActionTypes.SET_SELECTED_FILE,\n                            payload: file\n                        });\n                    } else {\n                        file =_.find(deletedFiles, { id: selectedFile.id });\n                        if(file) {\n                            dispatch({\n                                type: Utils.ActionTypes.SET_SELECTED_FILE,\n                                payload: {}\n                            });\n                        }\n                    }\n                }\n            }\n        });\n    }\n}\n\nexport const addFile = (file) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().user;\n        \n        await firestore().collection('userfiles').doc(uid).collection('files').doc(file.id)\n        .set(file);\n\n        await firestore().collection('userfiles').doc(uid).collection('files').doc(file.id).collection('progress').doc('status')\n        .set({\n            state: file.status\n        });\n    }\n}\n\nexport const updateFile = (file, data) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().user;\n        await firestore().collection('userfiles').doc(uid).collection('files').doc(file.id)\n        .update(data);\n        dispatch({\n            type: Utils.ActionTypes.UPDATE_FILE,\n            payload: file\n        });\n    }\n}\n\nexport const updateFileState = (fileId, newState) => {\n    return async (dispatch, getState) => {\n        const { uid } = getState().user;\n        await firestore().collection('userfiles').doc(uid).collection('files').doc(fileId).collection('progress').doc('status')\n        .update({ state: newState });\n    }\n}\n\nexport const updateFileInState = (fileId, data) => {\n    return {\n        type: Utils.ActionTypes.UPDATE_FILE_IN_STATE,\n        payload: {\n            fileId,\n            data\n        }\n    }\n}\n\nexport const setFileToUpload = (file) => {\n    return {\n        type: Utils.ActionTypes.SET_FILE_TO_UPLOAD,\n        payload: file\n    }\n}\n\nexport const setSelectedFile = (file) => {\n    return {\n        type: Utils.ActionTypes.SET_SELECTED_FILE,\n        payload: file\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../actions';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'react-bootstrap';\nimport Utils from '../utils';\nimport FirebaseUIAuth from \"react-firebaseui-localized\";\n\nconst { firebase } = Utils;\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ]\n};\n\nclass Auth extends Component {\n    componentDidMount() {\n        var that = this;\n        firebase.auth().onAuthStateChanged(user => {\n            const currentUser = user ? user: '';\n            that.setState({ user: currentUser });\n            \n            if(currentUser) {\n                const { uid, displayName, email } = currentUser;\n                that.props.login({\n                    uid,\n                    displayName,\n                    email\n                });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <Modal show={this.props.show} onHide={this.props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <FormattedMessage id=\"Auth.title\" />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FirebaseUIAuth lang={ this.props.language }\n                        config={uiConfig}\n                        auth={firebase.auth()}\n                        firebase={firebase} />\n                </Modal.Body>\n            </Modal>\n        )\n    }\n}\n\nexport default connect(null, { login })(Auth);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport _ from 'lodash';\nimport { Nav, Navbar, Container, Button } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Logo from '../assets/logo.png';\nimport Auth from '../components/auth';\nimport '../styles/header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showAuth: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            showAuth: false\n        })\n    }\n\n    componentDidMount() {\n        this.setState({\n            user: this.props.user\n        })\n    }\n\n    componentDidUpdate(props) {\n        if(_.isEmpty(this.state.user) && !_.isEmpty(props.user)) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav>\n                    <Navbar variant=\"light\" expand=\"lg\" bg=\"light\" fixed=\"top\" className='text-dark fixed-top-style'>\n                        <Container>\n                            <Navbar.Brand href=\"/#\" onClick={ () => this.props.goToRef('topRef') }>\n                                <img alt='Speech > Text' src={ Logo } className='logo-style' />\n                                <div style={ { float:'right'} }>\n                                    <div className='logo-text-style'>\n                                        Speech > Text\n                                    </div>\n                                    <small className='logo-footer-style'>\n                                        <FormattedMessage id=\"Header.subText\"\n                                            description=\"Logo subtext\"\n                                        />\n                                    </small>\n                                </div>\n                            </Navbar.Brand>\n                            <Navbar.Toggle />\n                            <Navbar.Collapse>\n                                <Nav className=\"ml-auto\">\n                                    <Nav.Item className={ this.props.showLinks ? 'visible' : 'invisible' }>\n                                        <Nav.Link href=\"/#how-it-works\" onClick={ () => this.props.goToRef('howItWorksRef') }>\n                                            <FormattedMessage id=\"Header.howItWorks\" />\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item className={ this.props.showLinks ? 'visible' : 'invisible' }>\n                                        <Nav.Link href=\"/#features\" onClick={ () => this.props.goToRef('featuresRef') }>\n                                            <FormattedMessage id=\"Header.features\" />\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item className={ this.props.showLinks ? 'visible' : 'invisible' }>\n                                        <Nav.Link href=\"/#pricing\" onClick={ () => this.props.goToRef('pricingRef') }>\n                                            <FormattedMessage id=\"Header.pricing\" />\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item className={ this.props.showLinks ? 'visible' : 'invisible' }>\n                                        <Nav.Link href=\"#contact\" onClick={ () => this.props.goToRef('contactRef') }>\n                                            <FormattedMessage id=\"Header.contact\" />\n                                        </Nav.Link>\n                                    </Nav.Item>\n                                    {\n                                        _.isEmpty(this.props.user) && \n                                        <Nav.Item>\n                                            <Button onClick={() => { this.setState({ showAuth: true }) }}>\n                                                <FontAwesomeIcon icon={ faSignInAlt } className='margin-right-10' />\n                                                <FormattedMessage id=\"Header.signIn\" />\n                                            </Button>\n                                        </Nav.Item>\n                                    }\n                                    {\n                                        !_.isEmpty(this.props.user) &&\n                                        <Nav.Item>\n                                            <Link to='/dashboard' className='dashboard-link nav-link'>\n                                                <FormattedMessage id='Header.dashboard' />\n                                            </Link>\n                                        </Nav.Item>\n                                    }\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Container>\n                    </Navbar>\n                </Nav>\n                <Auth language={ this.props.language } show={ this.state.showAuth } handleClose={ this.handleClose } />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, language }) => {\n    return {\n        user,\n        language\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport Banner from '../../assets/banner.png';\nimport '../../styles/entry.css';\nimport Auth from '../../components/auth';\n\nclass Entry extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showAuth: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            showAuth: false\n        })\n    }\n\n    render() {\n        return (\n            <div className='main-div' >\n                <Container align=\"center\">\n                    <Row>\n                        <Col lg=\"6\">\n                            <img src={ Banner } alt='Speech > Text Banner' className='banner-image' />\n                        </Col>\n                        <Col lg=\"6\">\n                            <Row className='list-container-style'>\n                                <Col lg=\"12\">\n                                    <Card className='list-container-card'>\n                                        <h4 className='title-style'>\n                                            <span className='title-name-style'>Speech > Text</span>\n                                            <FormattedMessage id=\"Banner.subText\" />\n                                        </h4>\n                                        <ul>\n                                            <li className=\"d-flex align-items-center\">\n                                                <span className='badge-style'>\n                                                    <FontAwesomeIcon icon={ faCheck } color='#28a745' />\n                                                </span>\n                                                <div className='list-text-style'>\n                                                    <FormattedMessage id=\"Banner.feature1\" />\n                                                </div>\n                                            </li>\n                                            <li className=\"d-flex align-items-center\">\n                                                <span className='badge-style'>\n                                                    <FontAwesomeIcon icon={ faCheck } color='#28a745' />\n                                                </span>\n                                                <FormattedMessage id=\"Banner.feature2\" />\n                                            </li>\n                                            <li className=\"d-flex align-items-center\">\n                                                <span className='badge-style'>\n                                                    <FontAwesomeIcon icon={ faCheck } color='#28a745' />\n                                                </span>\n                                                <FormattedMessage id=\"Banner.feature3\" />\n                                            </li>\n                                            <li className=\"d-flex align-items-center\">\n                                                <span className='badge-style'>\n                                                    <FontAwesomeIcon icon={ faCheck } color='#28a745' />\n                                                </span>\n                                                <FormattedMessage id=\"Banner.feature4\" />\n                                            </li>\n                                            <li className=\"d-flex align-items-center\">\n                                                <Button variant='secondary' className='margin-left-25' onClick={ () => this.setState({ showAuth: true }) } >\n                                                    <FormattedMessage id=\"Banner.feature5\" />\n                                                </Button>\n                                            </li>\n                                        </ul>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n                <Auth language={ this.props.language } show={ this.state.showAuth } handleClose={ this.handleClose } />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ language }) => {\n    return {\n        language\n    }\n}\n\nexport default connect(mapStateToProps)(Entry);","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSync, faUpload, faDownload, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport '../../styles/how-it-works.css';\n\nconst HowItWorks = (props) => {\n    return (\n        <Row>\n            <Col lg=\"12\">\n                <h4>\n                    <FormattedMessage id=\"HowItWorks.title\" />\n                </h4>\n                <Row>\n                    <Col lg=\"3\" mb=\"3\">\n                        <Card className=\"h-100 text-center\">\n                            <span className='span-style'>1</span>\n                            <FontAwesomeIcon icon={ faUpload } className='image-style' size=\"5x\" />\n                            <Card.Body>\n                                <p className=\"card-text\">\n                                    <FormattedMessage id=\"HowItWorks.step1\" />\n                                </p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col lg=\"3\" mb=\"3\">\n                        <Card className=\"h-100 text-center\">\n                            <span className='span-style'>2</span>\n                            <FontAwesomeIcon icon={ faSync } className='image-style' size=\"5x\" />\n                            <Card.Body>\n                                <p className=\"card-text\">\n                                    <FormattedMessage id=\"HowItWorks.step2\" />\n                                </p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col lg=\"3\" mb=\"3\">\n                        <Card className=\"h-100 text-center\">\n                            <span className='span-style'>3</span>\n                            <FontAwesomeIcon icon={ faEdit } className='image-style' size=\"5x\" />\n                            <Card.Body>\n                                <p className=\"card-text\">\n                                    <FormattedMessage id=\"HowItWorks.step3\" />\n                                </p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col lg=\"3\" mb=\"3\">\n                        <Card className=\"h-100 text-center\">\n                            <span className='span-style'>4</span>\n                            <FontAwesomeIcon icon={ faDownload } className='image-style' size=\"5x\" />\n                            <Card.Body>\n                                <p className=\"card-text\">\n                                    <FormattedMessage id=\"HowItWorks.step4\" />\n                                </p>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default HowItWorks;","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faMicrophoneAlt, faFileAudio, faLanguage, faClock, faClosedCaptioning,\n    faDownload, faUserShield, faFileSignature, faHandHoldingUsd\n} from '@fortawesome/free-solid-svg-icons';\nimport '../../styles/features.css';\n\nconst featureList = [\n    {\n        key: 1,\n        icon: faMicrophoneAlt,\n        textId: 'Features.one'\n    },\n    {\n        key: 2,\n        icon: faFileAudio,\n        textId: 'Features.two'\n    },\n    {\n        key: 3,\n        icon: faLanguage,\n        textId: 'Features.three'\n    },\n    {\n        key: 4,\n        icon: faClock,\n        textId: 'Features.four'\n    },\n    {\n        key: 5,\n        icon: faClosedCaptioning,\n        textId: 'Features.five'\n    },\n    {\n        key: 6,\n        icon: faFileSignature,\n        textId: 'Features.six'\n    },\n    {\n        key: 7,\n        icon: faDownload,\n        textId: 'Features.seven'\n    },\n    {\n        key: 8,\n        icon: faHandHoldingUsd,\n        textId: 'Features.eight'\n    },\n    {\n        key: 9,\n        icon: faUserShield,\n        textId: 'Features.nine'\n    }\n];\n\nconst Features = (props) => {\n    return (\n        <Row>\n            <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n                <h4>\n                    <FormattedMessage id=\"Features.title\" />\n                </h4>\n                <Row>\n                    {\n                        featureList.map(item => {\n                            return (\n                                <Col lg=\"4\" md='4' align='center' key={ item.key }>\n                                    <ul className=\"list-group\">\n                                        <li key={ item.key } className=\"list-group-item d-flex align-items-center justify-content-center flex-column feature\" align=\"center\">\n                                            <FontAwesomeIcon icon={ item.icon } size='5x' color='#007bff' />\n                                            <span className='feature-text'>\n                                                <FormattedMessage id={ item.textId} />\n                                            </span>\n                                        </li>\n                                    </ul>\n                                </Col>\n                            )\n                        })\n                    }\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Features;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { Container, Button } from 'react-bootstrap';\n\nimport '../../styles/pricing.css';\nimport Auth from '../../components/auth';\n\nclass Pricing extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showAuth: false\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            showAuth: false\n        })\n    }\n\n    render() {\n        const { user, goToRef } = this.props;\n        return (\n            <div>\n                <Container className=\"mb-5 mt-5\">\n                    <h4>\n                        <FormattedMessage id=\"Pricing.title\" />\n                    </h4>\n                    <div className=\"pricing card-deck flex-column flex-md-row mb-3\">\n                        <div className=\"card card-pricing text-center px-3 mb-4\">\n                            <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\">Demo</span>\n                            <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\" >\n                                <h2 className=\"h2 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"15\">\n                                    <span className=\"price\">\n                                        <FormattedMessage id=\"Pricing.Demo.price\" />\n                                    </span>\n                                </h2>\n                            </div>\n                            <div className=\"card-body pt-0\" >\n                                <ul className=\"list-unstyled mb-4 pricing-body-container\" >\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Demo.feature1\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Demo.feature2\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Demo.feature3\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Demo.feature4\" />\n                                    </li>\n                                </ul>\n                                {\n                                    _.isEmpty(user) &&\n                                    <div className='pricing-footer-container' >\n                                        <Button variant=\"outline-secondary\" className=\"mb-3 payment-button-style\" onClick={ () => this.setState({ showAuth: true }) }>\n                                            <FormattedMessage id=\"Pricing.Demo.buttonText\" />\n                                        </Button>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"card card-pricing text-center px-3 mb-4\" >\n                            <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white\">\n                                <FormattedMessage id=\"Pricing.Standard.title\" />\n                            </span>\n                            <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\" >\n                                <h2 className=\"h2 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"30\">\n                                    $<span className=\"price\">5,90</span>\n                                    <span className=\"h6 text-muted ml-2\">/\n                                        <FormattedMessage id=\"Pricing.Standard.timeText\" />\n                                    </span>\n                                </h2>\n                            </div>\n                            <div className=\"card-body pt-0\">\n                                <ul className=\"list-unstyled mb-4 pricing-body-container\">\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Standard.feature1\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Standard.feature2\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Standard.feature3\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Standard.feature4\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Standard.feature5\" />\n                                    </li>\n                                </ul>\n                                {\n                                    _.isEmpty(user) &&\n                                    <div className='pricing-footer-container' >\n                                        <Button variant=\"outline-secondary\" className=\"mb-3\" onClick={ () => this.setState({ showAuth: true }) }>\n                                            <FormattedMessage id=\"Pricing.Standard.buttonText\" />\n                                        </Button>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"card card-pricing shadow text-center px-3 mb-4 card-pricing-popular\">\n                            <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\">\n                                <FormattedMessage id=\"Pricing.Monthly.title\" />\n                            </span>\n                            <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\" >\n                                <h2 className=\"h2 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"30\">\n                                    $<span className=\"price\">24,90</span>\n                                    <span className=\"h6 text-muted ml-2\">\n                                        / 5\n                                        <FormattedMessage id=\"Pricing.Monthly.timeText\" />\n                                    </span>\n                                </h2>\n                            </div>\n                            <div className=\"card-body pt-0\">\n                                <ul className=\"list-unstyled mb-4 pricing-body-container\" >\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Monthly.feature1\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Monthly.feature2\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Monthly.feature3\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Monthly.feature4\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Monthly.feature5\" />\n                                    </li>\n                                </ul>\n                                {\n                                    _.isEmpty(user) &&\n                                    <div className='pricing-footer-container' >\n                                        <Button variant=\"primary\" className=\"mb-3\" onClick={ () => this.setState({ showAuth: true }) }>\n                                            <FormattedMessage id=\"Pricing.Monthly.buttonText\" />\n                                        </Button>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"card card-pricing text-center px-3 mb-4\">\n                            <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\">\n                                <FormattedMessage id=\"Pricing.Enterprise.title\" />\n                            </span>\n                            <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\">\n                                <h2 className=\"h2 font-weight-normal text-primary text-center mb-0 enterprise-header-style\" data-pricing-value=\"45\" >\n                                    <span className=\"h6 text-muted ml-1\">\n                                        <FormattedMessage id=\"Pricing.Enterprise.pricingText\" />\n                                    </span>\n                                </h2>\n                            </div>\n                            <div className=\"card-body pt-0\">\n                                <ul className=\"list-unstyled mb-4 pricing-body-container\">\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Enterprise.feature1\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Enterprise.feature2\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Enterprise.feature3\" />\n                                    </li>\n                                    <li className='list-unstyled'>\n                                        <FormattedMessage id=\"Pricing.Enterprise.feature4\" />\n                                    </li>\n                                </ul>\n                                {\n                                    _.isEmpty(user) &&\n                                    <div className='pricing-footer-container' >\n                                        <Button variant=\"outline-secondary\" className=\"mb-3\" onClick={ () => goToRef('contactRef') }>\n                                            <FormattedMessage id=\"Pricing.Enterprise.buttonText\" />\n                                        </Button>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Container>\n                <Auth language={ this.props.language } show={ this.state.showAuth } handleClose={ this.handleClose } />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, language }) => {\n    return {\n        user,\n        language\n    }\n}\n\nexport default connect(mapStateToProps)(Pricing);","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Axios from 'axios';\nimport { Container, Form, Col, Card, Button } from 'react-bootstrap';\nimport IntlTelInput from 'react-bootstrap-intl-tel-input'\nimport Alert from 'react-s-alert';\nimport '../../styles/contact.css';\n\nconst serverUrl = 'http://localhost:3001';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: {}\n        };\n    }\n\n    handleValueChange = (stateName, value) => {\n        var { values } = this.state;\n        values[stateName] = value;\n        this.setState({\n            values\n        });\n    }\n\n    handlePhoneChange = (data) => {\n        var { values } = this.state;\n        values['phone'] = data.intlPhoneNumber;\n        this.setState({\n            values\n        });\n    }\n\n    handleSubmit = event => {\n        var that = this;\n        const { values } = this.state;\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === true) {\n            Axios.post(`${serverUrl}/saveDemoRequest`, { data: values })\n                .then((response) => {\n                    Alert.success(\"Talebiniz alınmıştır.\\nGöndereceğimiz emailde yer alan link üzerinden demo'ya erişebilirsiniz.\",\n                        {\n                            timeout: 10000\n                        }\n                    );\n                    that.setState({\n                        values: {},\n                        validated: false\n                    });\n                    that.props.goToRef('topRef');\n                })\n                .catch((err) => {\n                    Alert.error(err);\n                })\n        }\n        this.setState({ validated: true });\n    };\n\n    render () {\n        return (\n            <Container>\n                <h4>\n                    <FormattedMessage id=\"DemoRequest.title\" />\n                </h4>\n                <Card className='card-style'>\n                    <Form noValidate validated={ this.state.validated } onSubmit={ this.handleSubmit } >\n                        <Form.Group controlId=\"formName\">\n                            <Form.Label>\n                                <FormattedMessage id=\"DemoRequest.Form.Label.nameSurname\" />\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                maxLength=\"100\"\n                                value={ this.state.values.nameSurname || '' }\n                                onChange={ (e) => { this.handleValueChange('nameSurname', e.target.value) } }\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                <FormattedMessage id=\"DemoRequest.Form.Feedback.nameSurname\" />\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\">\n                            <Form.Label>\n                                <FormattedMessage id=\"DemoRequest.Form.Label.email\" />\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                maxLength=\"50\"\n                                value= { this.state.values.email || '' }\n                                onChange={ (e) => { this.handleValueChange('email', e.target.value) } }\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                <FormattedMessage id=\"DemoRequest.Form.Feedback.email\" />\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group controlId=\"formPhone\">\n                            <Form.Label>\n                                <FormattedMessage id=\"DemoRequest.Form.Label.phone\" />\n                            </Form.Label>\n                            <IntlTelInput\n                                preferredCountries={['TR', 'US', 'GB']}\n                                defaultCountry={'TR'}\n                                maxLength=\"20\"\n                                value={ this.state.values.phone || '' }\n                                onChange={(data) => this.handlePhoneChange(data)}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"formSector\">\n                            <Form.Label>\n                                <FormattedMessage id=\"DemoRequest.Form.Label.sector\" />\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                maxLength=\"50\"\n                                value= { this.state.values.sector || '' }\n                                onChange={ (e) => { this.handleValueChange('sector', e.target.value) } }\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                <FormattedMessage id=\"DemoRequest.Form.Feedback.sector\" />\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Label>\n                            <FormattedMessage id=\"DemoRequest.Form.Label.productType\" />\n                        </Form.Label>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"2\" controlId=\"formProductDemo\">\n                                <Form.Check\n                                    required\n                                    custom\n                                    type='radio'\n                                    id=\"productDemo\"\n                                    label={ <FormattedMessage id=\"DemoRequest.Form.Radio.product1\" /> }\n                                    name=\"rdProduct\"\n                                    checked={ this.state.values.productType === 0 }\n                                    onChange={ () => { this.handleValueChange('productType', 0) } }\n                                    feedback=\"\"\n                                />\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"2\" controlId=\"formProductStandard\">\n                                <Form.Check\n                                    required\n                                    custom\n                                    type='radio'\n                                    id=\"productStandard\"\n                                    label={ <FormattedMessage id=\"DemoRequest.Form.Radio.product2\" /> }\n                                    name=\"rdProduct\"\n                                    checked={ this.state.values.productType === 1 }\n                                    onChange={ () => { this.handleValueChange('productType', 1) } }\n                                    feedback=\"\"\n                                />\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"2\" controlId=\"formProductCorporate\">\n                                <Form.Check\n                                    required\n                                    custom\n                                    type='radio'\n                                    id=\"productMonthly\"\n                                    label={ <FormattedMessage id=\"DemoRequest.Form.Radio.product3\" /> }\n                                    name=\"rdProduct\"\n                                    checked={ this.state.values.productType === 2 }\n                                    onChange={ () => { this.handleValueChange('productType', 2) } }\n                                    feedback=\"\"\n                                />\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"2\" controlId=\"formProductCorporate\">\n                                <Form.Check\n                                    required\n                                    custom\n                                    type='radio'\n                                    id=\"productCorporate\"\n                                    label={ <FormattedMessage id=\"DemoRequest.Form.Radio.product4\" /> }\n                                    name=\"rdProduct\"\n                                    checked={ this.state.values.productType === 3 }\n                                    onChange={ () => { this.handleValueChange('productType', 3) } }\n                                    feedback=\"\"\n                                />\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group controlId=\"formUsageNeeded\">\n                            <Form.Label>\n                                <FormattedMessage id=\"DemoRequest.Form.Label.opinions\" />\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                as=\"textarea\"\n                                rows=\"6\"\n                                value= { this.state.values.opinions || '' }\n                                onChange={ (e) => { this.handleValueChange('opinions', e.target.value) } }\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                <FormattedMessage id=\"DemoRequest.Form.Feedback.opinions\" />\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Button type=\"submit\" className='submit-button-style'>\n                            <FormattedMessage id=\"DemoRequest.Form.Button.text\" />\n                        </Button>\n                    </Form>\n                </Card>\n                <br /><br /><br /><br /><br />\n            </Container>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarkedAlt } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/footer.css';\n\nconst Footer = () => {\n    return (\n        <footer className=\"bg-dark fixed-bottom\">\n            <div className=\"container\">\n                <a href=\"https://www.google.com/maps/dir//39.8986893,32.7742932/@39.8987893,32.7722978,17z\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    className=\"float-left text-white\">\n                    <FontAwesomeIcon icon={ faMapMarkedAlt } size=\"2x\" />\n                </a>\n                <p className=\"float-left\" style={{ marginLeft: '20px' }}>\n                    support@speechtext.io\n                    <br />\n                    +90 554 242 14 17\n                </p>\n                <p className=\"float-right\" style={{ paddingTop: '10px' }}>\n                    Copyright &copy; SpeechText 2019<br />\n                    <span className=\"float-right\">\n                        <Link to='/privacy' className='footer-link'>Privacy Policy</Link>\n                        <Link to='/terms' className='footer-link margin-left-20'>Terms of Service</Link>\n                    </span>\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { createRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport '../../styles/main.css';\n\nimport Header from '../header';\nimport Entry from './entry';\nimport HowItWorks from './how-it-works';\nimport Features from './features';\nimport Pricing from './pricing';\nimport Contact from './contact';\nimport Footer from '../footer';\n\nconst Main = () => {\n    const refs = {\n        topRef: createRef(),\n        aboutRef: createRef(),\n        howItWorksRef: createRef(),\n        featuresRef: createRef(),\n        pricingRef: createRef(),\n        contactRef: createRef(),\n        demoRef: createRef()\n    }\n\n    const goToRef = (ref) => {\n        refs[ref].current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n        });\n    }\n\n    return (\n        <div>\n            <Header goToRef={ goToRef } showLinks={ true } />\n            <div ref={ refs.topRef }>\n                <Entry />\n            </div>\n            <Container style={{ marginBottom: '100px' }}>\n                <div ref={ refs.howItWorksRef } className='page-style'>\n                    <HowItWorks />\n                </div>\n                <hr />\n                <div ref={ refs.featuresRef } className='page-style'>\n                    <Features />\n                </div>\n                <hr />\n                <div ref={ refs.pricingRef } className='page-style'>\n                    <Pricing goToRef={ goToRef } />\n                </div>\n                <hr />\n                <div ref={ refs.contactRef } className='page-style'>\n                    <Contact goToRef={ goToRef } />\n                </div>\n            </Container>\n            <Footer />\n        </div>\n    );\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faSignOutAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\n\nimport { logout } from '../../actions';\nimport firebase from '../../utils/firebase';\n\nclass UserBox extends Component {\n    logout = () => {\n        firebase.auth().signOut();\n        this.props.logout();\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { user } = this.props;\n        if(!user) return;\n        const duration = user.currentPlan ? user.currentPlan.remainingMinutes : 0;\n        let currentPath = this.props.history.location.pathname;\n        let goToUrlOnClick = currentPath.startsWith('/dashboard') ? '/user' : '/dashboard';\n        return (\n            <div className='user-box'>\n                <Link to={ goToUrlOnClick } className='profile-link'>\n                    <p className='profile-name'>\n                        {\n                            currentPath.startsWith('/dashboard') &&\n                            <div>\n                                <FormattedMessage id=\"Header.myAccount\" />\n                                <br />\n                                <span className='profile-subtext'>\n                                    <FormattedMessage id=\"Header.remainingMinutes\" values={{ mins: duration}} />\n                                </span>\n                            </div>\n                        }\n                        {\n                            currentPath.startsWith('/user') &&\n                            <div>\n                                <FormattedMessage id=\"Header.dashboard\" />\n                                <br />\n                                <span className='profile-subtext'>\n                                    <FormattedMessage id=\"Header.remainingMinutes\" values={{ mins: duration}} />\n                                </span>\n                            </div>\n                        }\n                    </p>\n                </Link>\n                <Button variant='outline-danger' size='sm' className='sign-out' alt='Sign out' onClick={ this.logout }>\n                    <FontAwesomeIcon icon={ faSignOutAlt } />\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => {\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps, { logout })(withRouter(UserBox));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport  { withRouter } from 'react-router'\nimport { Link } from 'react-router-dom';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport Logo from '../assets/logo.png';\nimport '../styles/header.css';\nimport '../styles/user.css';\n\nimport UserBox from './dashboard/user-box';\n\nclass UserHeader extends Component {\n\n    render() {\n        return (\n            <div>\n                <Nav>\n                    <Navbar variant=\"light\" expand=\"lg\" bg=\"light\" fixed=\"top\" className='text-dark fixed-top-style'>\n                        <Link to='/'>\n                            <Navbar.Brand>\n                                <img alt='Speech > Text' src={ Logo } className='logo-style' />\n                                <div style={ { float:'right'} }>\n                                    <div className='logo-text-style'>\n                                        Speech > Text\n                                    </div>\n                                    <small className='logo-footer-style'>\n                                        <FormattedMessage id=\"Header.subText\"\n                                            description=\"Logo subtext\"\n                                        />\n                                    </small>\n                                </div>\n                            </Navbar.Brand>\n                        </Link>\n                        <Navbar.Toggle />\n                        <Navbar.Collapse>\n                            <Nav className=\"ml-auto\">\n                                <Nav.Item>\n                                    <UserBox />\n                                </Nav.Item>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Nav>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user }) => {\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(UserHeader));","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass Dropzone extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInputRef = React.createRef();\n\n        this.state = {\n            highlight: false\n        }\n    }\n\n    openFileDialog = () => {\n        this.fileInputRef.current.value = '';\n        this.fileInputRef.current.click();\n    }\n\n    onFileAdded = (evt) => {\n        const files = evt.target.files;\n        if (this.props.onFileAdded && !_.isEmpty(files)) {\n            this.props.onFileAdded(files[0]);\n        }\n    }\n\n    onDragOver = (evt) => {\n        evt.preventDefault();\n\n        this.setState({ highlight: true });\n    }\n\n    onDragLeave = () => {\n        this.setState({ highlight: false });\n    }\n\n    onDrop = (event) => {\n        event.preventDefault();\n\n        const files = event.dataTransfer.files;\n        if (this.props.onFileAdded && !_.isEmpty(files)) {\n            this.props.onFileAdded(files[0]);\n        }\n        this.setState({ highlight: false });\n    }\n\n    render() {\n        return (\n            <div\n                className={ `drop-zone ${this.state.highlight ? 'highlight' : ''}` }\n                onDragOver={ this.onDragOver }\n                onDragLeave={ this.onDragLeave }\n                onDrop={ this.onDrop }\n                onClick={ this.openFileDialog }\n            >\n                Click Here or Drop Files to Upload\n                <input\n                    ref={this.fileInputRef}\n                    className='file-input'\n                    type=\"file\"\n                    onChange={this.onFileAdded}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Dropzone;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Card, ProgressBar, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faTrashAlt, faPause, faPlay\n} from '@fortawesome/free-solid-svg-icons';\nimport firebase from '../utils/firebase';\nimport { addFile, updateFile, updateFileState, updateFileInState } from '../actions';\n\nclass File extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            file: props.file,\n            progress: undefined,\n            paused: false\n        }\n    }\n\n    componentDidMount() {\n        this.initUploadIfNecessary(this.props.file);\n    }\n\n    componentWillReceiveProps({ file }) {\n        this.initUploadIfNecessary(file);\n    }\n\n    initUploadIfNecessary = file => {\n        if(file.status === 'INITIAL' && file.file) {\n            this.uploadFile(file);\n            this.setState({\n                progress: 0,\n                paused: false\n            });\n        }\n        var progress = this.state.progress;\n        if(file.status === 'PROCESSING') {\n            progress = file.transcribedFile ? file.transcribedFile.progress : 0;\n        }\n        this.setState({\n            file,\n            progress\n        });\n    }\n\n    uploadFile = (file) => {\n        var that = this;\n        const { user } = this.props;\n        const fileExtension = file.name.substr(file.name.lastIndexOf('.') + 1);\n        var storageRef = firebase.storage().ref(`userfiles/${user.uid}/${file.id}/originalFile/${file.id}.${fileExtension}`);\n\n        this.setState({ progress: 0 });\n\n        var uploadTask = storageRef.put(file.file);\n        this.props.onSelected(this.props.index);\n\n        file.status = 'UPLOADING';\n        this.props.updateFileInState(file);\n        uploadTask.on('state_changed', (snapshot) => {\n            var progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n            that.setState({ progress });\n        \n            switch (snapshot.state) {\n                case firebase.storage.TaskState.PAUSED: // or 'paused'\n                    console.log('paused');\n                    break;\n                case firebase.storage.TaskState.RUNNING: // or 'running'\n                    console.log('unpaused');\n                    break;\n                default:\n                    break;\n            }\n            }, (error) => {\n                console.log('upload error', error);\n                that.setState({ error })\n            }, () => {\n                uploadTask.snapshot.ref.getDownloadURL().then(async (downloadURL) => {\n                    that.setState({ progress: 100 });\n                    file.originalFile.filePath = uploadTask.location_.path_;\n                    file.originalFile.url = downloadURL;\n                    file = _.omit(file, 'file');\n                    file.status = 'UPLOADED';\n                    \n                    if(!_.isEmpty(this.props.selectedFileOptions)) {\n                        file.options = this.props.selectedFileOptions;\n                    }\n\n                    await that.props.addFile(file);\n    \n                    // that.props.updateFileState(file.id, 'UPLOADED');\n                });\n        });\n        this.setState({\n            uploadTask\n        });\n    }\n\n    pauseUpload = () => {\n        this.setState({\n            paused: true\n        });\n        this.state.uploadTask.pause();\n    }\n\n    resumeUpload = () => {\n        this.setState({\n            paused: false\n        });\n        this.state.uploadTask.resume();\n    }\n\n    editFile = (e) => {\n        e.preventDefault();\n        this.props.editFile(this.state.file.index);\n    }\n\n    deleteFile = (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { file } = this.state;\n        this.props.updateFileState(file.id, 'DELETED');\n        this.setState({ showSpinner: true })\n    }\n\n    transcribeFile = () => {\n        var { file } = this.state;\n        if(_.isEmpty(file.options) || !file.options.language) {\n            this.props.onSelected(this.props.index);\n        } else {\n            this.props.updateFileState(file.id, 'READY');\n        }\n    }\n\n    render() {\n        const { file, progress, paused, showSpinner } = this.state;\n        return (\n            <div className={ `file-container ${this.props.isSelected ? 'active' : ''}` }>\n                <Card>\n                    <Card.Body>\n                        { file.name }\n                        {\n                            !showSpinner && file.status !== 'PROCESSING' &&\n                            <span className='file-settings'>\n                                {/* <FontAwesomeIcon icon={ faEdit } className='edit'  onClick={ this.editFile } /> */}\n                                <FontAwesomeIcon icon={ faTrashAlt } className='delete' onClick={ this.deleteFile } />\n                            </span>\n                        }\n                        {\n                            showSpinner &&\n                            <div className='float-right'>\n                                <Spinner animation=\"border\" role=\"status\" size='sm' />\n                            </div>\n                        }\n                        {\n                            file.status !== 'DONE' && progress < 100 &&\n                            <div className={ 'file-progress' }>\n                                <span>{file.status === 'PROCESSING' ? 'Transcribing...' : 'Uploading...'}</span>\n                                <ProgressBar striped now={ progress } className={file.status === 'PROCESSING' ? 'transcribe-progress' : ''} />\n                                {\n                                    file.status !== 'PROCESSING' && !paused &&\n                                    <FontAwesomeIcon icon={ faPause } className='pause-play' onClick={ this.pauseUpload } />\n                                }\n                                {\n                                    file.status !== 'PROCESSING' && paused &&\n                                    <FontAwesomeIcon icon={ faPlay } className='pause-play'  onClick={ this.resumeUpload } />\n                                }\n                            </div>\n                        }\n                        {\n                            file.status === 'CONVERTED' &&\n                            <div className='file-transcribe-button'>\n                                <Button bgColor='orange' onClick={ this.transcribeFile }>\n                                    Transcribe\n                                </Button>\n                            </div>\n                        }\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, selectedFile, selectedFileOptions }) => {\n    return {\n        user,\n        selectedFile,\n        selectedFileOptions\n    }\n}\n\nexport default connect(mapStateToProps, { addFile, updateFile, updateFileState, updateFileInState })(File);","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ApprovementPopup = (props) => {\n    return (\n        <div>\n            <Modal show={props.show}>\n                <Modal.Header><b>{ props.headerText }</b></Modal.Header>\n                <Modal.Body>\n                    { props.bodyText }\n                    <br />\n                    <p>{ props.bodySubText || '' }</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant={ props.successButtonVariant || 'success' } onClick={ props.handleSuccess }>{ props.successButtonText || 'Confirm'}</Button>\n                    <Button variant={ props.cancelButtonVariant || 'danger' }  onClick={ props.handleCancel }>{ props.cancelButtonText || 'Cancel'}</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ApprovementPopup;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport firebase from '../../utils/firebase';\nimport { getFileList, setFileToUpload, setSelectedFile } from '../../actions';\n\nimport Dropzone from '../../components/dropzone';\nimport File from '../../components/file';\nimport ApprovementPopup from '../../components/approvement-popup';\n\nclass FileList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            files: []\n        }\n    }\n\n    componentWillReceiveProps({ files }) {\n        this.setState({\n            files\n        });\n    }\n\n    onFileAdded = async (file) => {\n        var that = this;\n        var media = document.createElement(file.type.startsWith('audio') ? 'audio' : 'video');\n        media.onloadedmetadata = () => {\n            const { currentPlan } = this.props.user;\n            console.log('onFileAdded media:', media);\n            let fileDurationInSeconds = parseInt(media.duration);\n            let fileDurationInMinutes = Math.ceil(fileDurationInSeconds / 60);\n            if(currentPlan.remainingMinutes - fileDurationInMinutes < 0) {\n                that.setState({\n                    selectedFileDuration: fileDurationInMinutes + ' min(s)',\n                    showApprovement: true\n                });\n            } else {\n                this.onFileValidated(file, fileDurationInMinutes);\n            }\n        };\n        media.src = URL.createObjectURL(file);\n    }\n\n    goToPayment = () => {\n        this.setState({\n            selectedFileDuration: '',\n            showApprovement: false\n        });\n        this.props.history.push('/user#payment');\n    }\n\n    cancelFileUpload = () => {\n        this.setState({\n            selectedFileDuration: '',\n            showApprovement: false\n        });\n    }\n\n    onFileValidated = async (file, fileDurationInMinutes) => {\n        console.log('onFileValidated file: ', file);\n        var { name, size, type } = file;\n        var fileObj = {\n            originalFile: {\n                name,\n                size,\n                duration: fileDurationInMinutes,\n                createDate: new Date()\n            },\n            options: {\n                type\n            },\n            name,\n            status: 'INITIAL'\n        }\n\n        const { id } = await firebase.firestore().collection('userfiles').doc(this.props.user.uid).collection('files').doc();\n        fileObj.file = file;\n        fileObj.id = id;\n\n        this.props.setFileToUpload(fileObj);\n        this.props.setSelectedFile(fileObj);\n    }\n\n    onFileSelected = (index) => {\n        const { files } = this.state;\n        const selectedFile = files[index];\n        this.props.setSelectedFile(selectedFile);\n    }\n\n    render() {\n        var { user } = this.props;\n        const currentPlan = user.currentPlan || {};\n        return (\n            <div>\n                <Dropzone onFileAdded={ this.onFileAdded } />\n                <div className='file-list-container'>\n                    {\n                        this.props.files.map((file, index) => {\n                            var isSelected = !_.isEmpty(this.props.selectedFile) ? this.props.selectedFile.id === file.id : false;\n                            return (\n                                <div onClick={ () => { this.onFileSelected(index) } } key={ file.id }>\n                                    <File\n                                        key={ file.id }\n                                        file={ file }\n                                        index={ index }\n                                        onSelected={ this.onFileSelected }\n                                        isSelected={ isSelected }\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <ApprovementPopup\n                    show={ this.state.showApprovement }\n                    headerText='Time Limit Reached'\n                    bodyText='You do not have enough credits to upload this file'\n                    bodySubText={\n                        <sub>\n                            <b>Remaining Minutes:</b> { currentPlan.remainingMinutes } <br /><b>File Duration: </b> { this.state.selectedFileDuration }\n                        </sub>\n                    }\n                    handleSuccess={ this.goToPayment }\n                    successButtonVariant='primary'\n                    successButtonText='Go to Payment'\n                    handleCancel={ this.cancelFileUpload }\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, userFiles, selectedFile }) => {\n    return {\n        user,\n        files: userFiles,\n        selectedFile\n    }\n}\n\nexport default connect(mapStateToProps, { getFileList, setFileToUpload, setSelectedFile })(withRouter(FileList));","import React from 'react';\n \nexport const WHITE_SMOKE = '#eee';\n\n// A colored bar that will represent the current value\nexport const SliderBar = ({ value, style }) => (\n    <div className='slider-bar'\n        style={Object.assign({},\n        {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            width: `${value * 100}%`,\n        },\n        style)}\n    />\n)\n \n// A handle to indicate the current value\nexport const SliderHandle = ({ value, style }) => (\n    <div className='handle'\n        style={Object.assign({},\n        {\n            top: 0,\n            left: `${value * 100}%`,\n            marginTop: -4,\n            marginLeft: -8,\n        },\n        style)}\n    />\n)\n","import React, { Component } from 'react';\nimport { Slider as ReactSlider, Direction } from 'react-player-controls';\n\nimport { SliderBar, SliderHandle, WHITE_SMOKE } from './slider-components';\n\nconst styles = {\n    slider: {\n        width: 750,\n        height: 8,\n        borderRadius: 4,\n        background: WHITE_SMOKE,\n        transition: 'width 0.1s',\n        cursor: 'pointer'\n    }\n}\nclass Slider extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: 0,\n            lastValueStart: 0\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            value: nextProps.value\n        });\n    }\n\n    onSliderChange = (value) => {\n        this.setState({\n            value\n        });\n    }\n\n    onSliderChangeStart = (value) => {\n        this.props.playPause();\n        this.setState({\n            lastValueStart: value\n        });\n    }\n\n    onSliderChangeEnd = (value) => {\n        this.setState({\n            value\n        });\n        if(value) {\n            this.props.seekTo(value);\n            this.props.playPause();\n        }\n    }\n\n    formatTime = (time) => {\n        time = Math.floor(time);\n        let seconds = Math.floor(time % 60);\n        let minutes = Math.floor(time / 60);\n        let hours = Math.floor(minutes / 60)\n        if(hours > 0) {\n            minutes = Math.floor(minutes % 60);\n        }\n        if(hours < 10) hours = `0${hours}`;\n        if(minutes < 10) minutes = `0${minutes}`;\n        if(seconds < 10) seconds = `0${seconds}`;\n        if(!hours) hours = '00';\n        if(!minutes) minutes = '00';\n        if(!seconds) seconds = '00';\n        return `${hours}:${minutes}:${seconds}`;\n    }\n\n    render() {\n        const duration = this.formatTime(this.props.duration);\n        return (\n            <ReactSlider\n                isEnabled={ true }\n                direction={ Direction.HORIZONTAL }\n                onChange={ this.onSliderChange }\n                onChangeStart={ this.onSliderChangeStart }\n                onChangeEnd={ this.onSliderChangeEnd }\n                style={ styles.slider }\n            >\n                <SliderBar direction={ Direction.HORIZONTAL } value={ this.state.value } />\n                <SliderHandle direction={ Direction.HORIZONTAL } value={ this.state.value } />\n                <span className='player-time'>\n                    {`${this.formatTime(this.state.value * this.props.duration)} / ${duration}`}\n                </span>\n            </ReactSlider>\n        )\n    }\n}\n\nexport default Slider;","import React, { Component, createRef } from 'react';\nimport _ from 'lodash';\nimport  { withMediaProps, Player } from 'react-media-player';\nimport { PlayerIcon } from 'react-player-controls';\n\nimport Slider from './slider';\nimport '../styles/player.css';\n\nclass SpeechTextPlayer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0\n        };\n\n        this.playerRef = createRef();\n    }\n\n    componentWillReceiveProps({ timeToSeek }) {\n        if(timeToSeek) {\n            this.seekToTime(timeToSeek);\n        }\n    }\n\n    _handlePlayPause = () => {\n        this.props.media.playPause()\n    }\n\n    onTimeUpdate = (playerInfo) => {\n        this.setState({\n            currentTime: playerInfo.currentTime\n        });\n    }\n\n    seekTo = (progress) => {\n        this.props.media.seekTo(this.props.media.duration * progress);\n    }\n\n    seekToTime = (second) => {\n        this.props.media.seekTo(second);\n        this.setState({\n            currentTime: second\n        });\n    }\n\n    render() {\n        const { media, src, type } = this.props;\n        let disabled = _.isEmpty(src);\n        if(!media) {\n            return null;\n        }\n        return (\n            <div className='player-container'>\n                <div className='player-controls play-resume'>\n                    {\n                        !media.isPlaying &&\n                        <PlayerIcon.Play onClick={ () => !disabled ? media.play() : null } />\n                    }\n                    {\n                        media.isPlaying &&\n                        <PlayerIcon.Pause onClick={ () => !disabled ? media.pause() : null } />\n                    }\n                </div>\n                <div className='player-controls mute-unmute'>\n                    {\n                        !media.isMuted &&\n                        <PlayerIcon.SoundOn onClick={ () => media.mute(true) } />\n                    }\n                    {\n                        this.props.media.isMuted &&\n                        <PlayerIcon.SoundOff onClick={ () => this.props.media.mute(false) } />\n                    }\n                </div>\n                <div className='player-slider'>\n                    <Slider\n                        value={ this.state.currentTime / this.props.media.duration }\n                        duration={ this.props.media.duration }\n                        seekTo={ this.seekTo }\n                        playPause={ this._handlePlayPause }\n                    />\n                </div>\n                {\n                    _.isEmpty(type) && type.startsWith('video') &&\n                    <Player\n                        className='player-window'\n                        src={ this.props.src }\n                        onTimeUpdate={ this.onTimeUpdate }\n                        ref={ this.playerRef }\n                    />\n                }\n            </div>\n        );\n    }\n}\n\nexport default withMediaProps(SpeechTextPlayer);","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Container, Card, Form, Button } from 'react-bootstrap';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\nimport { updateFile, updateFileState, updateFileInState } from '../actions';\nimport Utils from '../utils';\n\nclass UploadOptions extends Component {\n    constructor(props) {\n        super(props);\n        \n        var options = props.file ? props.file.options : {};\n        if(!options.context) options.context= [];\n        this.state = {\n            editFileName: false,\n            options\n        }\n\n        this.textRef = null;\n        this.setTextRef = element => {\n            this.textRef = element;\n        }        \n    }\n\n    componentWillReceiveProps({ file }) {\n        var options = file.options || {};\n        options.context = options.context || [];\n        this.setState({\n            options,\n            fileName: file.name,\n            editFileName: false\n        })\n    }\n\n    handleFileNameChange = (event) => {\n        this.setState({\n            fileName: event.target.value\n        });\n    }\n\n    saveFileName = () => {\n        const { file } = this.props;\n        const { fileName } = this.state;\n        this.props.updateFile(file, { name: fileName });\n        this.setState({\n            editFileName: false\n        });\n    }\n    \n    handleOptionsChange = (name, value) => {\n        var { options } = this.state;\n        options[name] = value;\n        this.setState({\n            options\n        });\n    }\n\n    editFileName = () => {\n        this.setState({ editFileName: true });\n    }\n\n    renderFileName = () => {\n        const { file } = this.props;\n        if(this.state.editFileName) {\n            return (\n                <div>\n                    <Form.Control\n                        type='text'\n                        className='file-name-edit'\n                        value={ file.name || '' }\n                        onChange={ this.handleFileNameChange }\n                        onBlur={ this.saveFileName }\n                        ref={ i => i ? ReactDOM.findDOMNode(i).focus() : '' }\n                    />\n                    <Button variant='primary' className='float-right' onClick={ () => this.setState({ editFileName: false })}>\n                        <FontAwesomeIcon icon={ faCheck } onClick={ this.saveFileName } />\n                    </Button>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Form.Label onClick={ this.editFileName }>\n                        { file.name }\n                    </Form.Label>\n                    <span className='float-right'>\n                        <FontAwesomeIcon icon={ faEdit } onClick={ this.editFileName } size='2x' color='blue' />\n                    </span>\n                </div>\n            )\n        }\n    }\n\n    submitForm = event => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === true) {\n            const { language, file } = this.props;\n            var { options } = this.state;\n            if(!options.language) options.language = language;\n            if(options.language.indexOf('-') == -1) {\n                options.language = Utils.LanguageMap[options.language];\n            }\n            file.options = _.merge(file.options, options);\n            if(file.status === 'INITIAL') {\n                this.props.updateFileInState(file.id, { options });\n            } else {\n                this.props.updateFile(file, { options: file.options });\n    \n                if(file.status === 'CONVERTED') {\n                    this.props.updateFileState(file.id, 'READY');\n                }\n            }\n        }\n        this.setState({ validated: true });\n    }\n\n    render() {\n        const { language, supportedLanguages, file } = this.props;\n        const { options } = this.state;\n        const disabled = file.status === 'PROCESSING' || file.status === 'DONE';\n        let selectedLanguage = options.language || language;\n        if(selectedLanguage.indexOf('-') > -1) selectedLanguage = selectedLanguage.substr(0, selectedLanguage.indexOf('-'));\n        return (\n            <Container className='upload-options-container'>\n                <Container className='upload-options-filename'>\n                    { this.renderFileName() }\n                </Container>\n                <Form className='form-options' noValidate validated={ this.state.validated } onSubmit={ this.submitForm }>\n                    <Card>\n                        <Card.Title className='options-title'>\n                            Options\n                        </Card.Title>\n                        <Card.Body>\n                            <Form.Group>\n                                <Form.Label>\n                                    Spoken Language\n                                </Form.Label>\n                                <Form.Control\n                                    as='select'\n                                    defaultValue={ selectedLanguage }\n                                    disabled={ disabled }\n                                    required\n                                    onChange={(e) => this.handleOptionsChange('language', e.target.value)}\n                                >\n                                    {\n                                        supportedLanguages.map(lang => {\n                                            return (\n                                                <option key={ lang.key } value={ lang.key }>\n                                                    { lang.value }\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </Form.Control>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Select Spoken Language\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <br />\n                            <Form.Group>\n                                <Form.Label>\n                                    Number of Speakers\n                                </Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    required\n                                    disabled={ disabled }\n                                    min='1'\n                                    max='10'\n                                    value={ options.speakerCount }\n                                    onChange={ (e) => this.handleOptionsChange('speakerCount', e.target.value) }\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                        Enter Number of Speakers\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <br />\n                            <Form.Group>\n                                <Form.Label>\n                                    Context\n                                </Form.Label>\n                                <TagsInput\n                                    value={ options.context }\n                                    disabled= { disabled }\n                                    className={ `react-tagsinput ${disabled ? 'disabled' : ''}` }\n                                    onChange={ (tags) => this.handleOptionsChange('context', tags) }\n                                    addOnBlur={ true }\n                                />\n                            </Form.Group>\n                            <br />\n                            <Form.Group>\n                                <Form.Label>\n                                    Auto Transcribe on Upload Complete\n                                </Form.Label>\n                                <BootstrapSwitchButton\n                                    key={ file.id }\n                                    checked={ options.autoTranscribe }\n                                    disabled={ disabled }\n                                    onlabel='On'\n                                    onstyle='success'\n                                    offlabel='Off'\n                                    offstyle='secondary'\n                                    style='mx-3'\n                                    onChange={(checked) => this.handleOptionsChange('autoTranscribe', checked) }\n                                />\n                            </Form.Group>\n                            {\n                                !disabled &&\n                                <Button type=\"submit\" className='float-right'>\n                                    Submit\n                                </Button>\n                            }\n                        </Card.Body>\n                    </Card>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = ({ language, supportedLanguages, selectedFile }) => {\n    return {\n        language,\n        supportedLanguages,\n        file: selectedFile };\n}\n\nexport default connect(mapStateToProps, { updateFile, updateFileState, updateFileInState })(UploadOptions);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport Axios from 'axios';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport ContentEditable from 'react-contenteditable';\nimport { Media } from 'react-media-player';\n\nimport firebase from '../../utils/firebase';\nimport SpeechTextPlayer from '../../components/player';\nimport UploadOptions from '../../components/upload-options';\n\nclass Transcription extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editorData: {},\n            intervalHolder: undefined\n        }\n    }\n\n    componentWillReceiveProps({ selectedFile }) {\n        var that = this;\n        var { intervalHolder } = this.state;\n        clearInterval(intervalHolder);\n        if(!_.isEmpty(selectedFile) && selectedFile.status === 'DONE') {\n            this.setState({\n                showSpinner: true\n            })\n            var storageRef = firebase.storage().ref(selectedFile.transcribedFile.filePath);\n            storageRef.getDownloadURL().then((downloadUrl) => {\n                Axios.get(downloadUrl)\n                .then(({ data }) => {\n                    that.formatResults(data);\n                });\n            });\n        } else {\n            this.setState({\n                editorData: {},\n                prevEditorData: {},\n                intervalHolder: undefined\n            })\n        }\n    }\n\n    updateTranscribedFile = () => {\n        const { editorData, prevEditorData } = this.state;\n        const { selectedFile } = this.props;\n        if(!_.isEqual(editorData, prevEditorData)) {\n            this.setState({\n                prevEditorData: editorData\n            });\n            const dataToUpload = editorData\n                .map(({ startTime, endTime, text}) => {\n                    return `${startTime} - ${endTime} \\n ${text}---`;\n                })\n                .join('\\n');\n            var storageRef = firebase.storage().ref(selectedFile.transcribedFile.filePath);\n            storageRef.put(new Blob([dataToUpload]));\n        }\n    }\n\n    downloadAsTxt = () => {\n        const { selectedFile } = this.props;\n        const { editorData } = this.state;\n        var textData = '';\n        editorData.forEach(data => {\n            if(data.startTime && data.endTime) {\n                if(data.text) {\n                    data.text = data.text.replace(/---/g, '');\n                }\n                textData += `${data.startTime} - ${data.endTime}\\n${data.text}\\n`;\n            }\n        });\n    \n        var fileName = selectedFile.name;\n        fileName = fileName.substr(0, fileName.lastIndexOf('.')) + '.txt';\n        \n        const element = document.createElement(\"a\");\n        const file = new Blob([textData], {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = fileName;\n        document.body.appendChild(element); // Required for this to work in FireFox\n        element.click();\n    }\n\n    downloadAsDocx = () => {\n        var { selectedFile } = this.props;\n\n        var getDocxFile = firebase.functions().httpsCallable('getDocxFile');\n        getDocxFile({ \n            fileId: selectedFile.id\n        })\n        .then(({ data }) => {\n            var storageRef = firebase.storage().ref(data.filePath);\n            var fileName = selectedFile.name;\n            fileName = fileName.substr(0, fileName.lastIndexOf('.')) + '.docx';\n            var newMetadata = {\n                contentDisposition: `attachment;filename=${fileName}`\n            }\n            storageRef.updateMetadata(newMetadata)\n            .then((metadata) => {\n                storageRef.getDownloadURL().then((downloadUrl) => {\n                    const element = document.createElement(\"a\");\n                    element.href = downloadUrl;\n                    element.click();\n                });\n            })\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    formatResults = (data) => {\n        var that = this;\n        if(data) {\n            var splittedData = data.split('---');\n            if(!_.isEmpty(splittedData)) {\n                var { intervalHolder } = this.state;\n                var editorData = []\n                var i = 0;\n                splittedData.forEach(line => {\n                    var lines = line.split(' \\n ');\n                    var times = lines[0].split(' - ');\n                    editorData.push({\n                        key: i++,\n                        startTime: times[0],\n                        endTime: times[1],\n                        text: lines[1]\n                    });\n                });\n                if(intervalHolder) clearInterval(intervalHolder);\n                intervalHolder = setInterval(() => {\n                    that.updateTranscribedFile();\n                }, 5000);\n                this.setState({\n                    editorData,\n                    prevEditorData: editorData,\n                    intervalHolder\n                });\n            }\n        }\n        this.setState({\n            showSpinner: false\n        })\n    }\n\n    renderResults = () => {\n        const { editorData } = this.state;\n        if(!_.isEmpty(editorData)) {\n            var data = editorData.map((data, index) => {\n                if(data.startTime && data.endTime) {\n                    return (\n                        <div className='conversionResult' key={ index } onClick={ () => this.transcriptionClicked(index) } >\n                            <ContentEditable\n                                className='conversionTime'\n                                html={ data.startTime + ' - ' + data.endTime } // innerHTML of the editable div\n                                disabled={ true } // use true to disable edition\n                            />\n                            <ContentEditable\n                                html={ data.text } // innerHTML of the editable div\n                                disabled={ false } // use true to disable edition\n                                onChange={ (e) => { this.handleChange(data.key, e.target.value) }} // handle innerHTML change\n                            />\n                            <br />\n                        </div>\n                    )\n                }\n            });\n            return (\n                <div className=''>\n                    <DropdownButton id=\"dropdown-item-button\" title=\"Download\" align='right' alignRight>\n                        <Dropdown.Item as=\"button\" onClick={ this.downloadAsTxt }>Text Document (.txt)</Dropdown.Item>\n                        <Dropdown.Item as=\"button\" onClick={ this.downloadAsDocx }>Word Document (.docx)</Dropdown.Item>\n                    </DropdownButton>\n                    <br />\n                    { data }\n                </div>\n            );\n        }\n        return false;\n    }\n\n    transcriptionClicked = (index) => {\n        const { editorData } = this.state;\n        let selectedRow = editorData[index];\n        let splittedTime = selectedRow.startTime.trim().split(':');\n        var timeToSeek = 0;\n        if(splittedTime.length === 3) {\n            timeToSeek += parseInt(splittedTime[0] * 3600);\n            timeToSeek += parseInt(splittedTime[1] * 60);\n            timeToSeek += parseInt(splittedTime[2]);\n        } else if(splittedTime.length === 2) {\n            timeToSeek += parseInt(splittedTime[0] * 60);\n            timeToSeek += parseInt(splittedTime[1]);\n        }\n        this.setState({\n            timeToSeek\n        }, () => {\n            this.setState({\n                timeToSeek: undefined\n            })\n        });\n    }\n\n    handleChange = (key, value) => {\n        var { editorData } = this.state;\n        var prevEditorData = [];\n        editorData = editorData.map((data) => {\n            prevEditorData.push({...data});\n            if(data.key === key) {\n                data.text = value;\n            }\n            return data;\n        });\n        this.setState({\n            editorData,\n            prevEditorData,\n            timeToSeek: undefined\n        });\n    }\n    \n    renderOptions = () => {\n        const { editorData } = this.state;\n        const { selectedFile } = this.props;\n        if(_.isEmpty(editorData)) {\n            if(!_.isEmpty(selectedFile) && selectedFile.status !== 'DONE') {\n                return (\n                    <UploadOptions\n                        disabled={ selectedFile.status !== 'PROCESSING' }\n                    />\n                )\n            }\n        }\n    }\n\n    render() {\n        var { selectedFile } = this.props;\n        if(_.isEmpty(selectedFile)) selectedFile = {};\n        return (\n            <div className='transcription-container'>\n                <div className='transcription-title'>\n                    <div className='selected-file-name'>\n                        { selectedFile.name }\n                    </div>\n                    <Media>\n                        <SpeechTextPlayer\n                            key={ selectedFile.id }\n                            src={ selectedFile.status === 'DONE' ? selectedFile.originalFile.url : '' }\n                            type={ selectedFile.options ? selectedFile.options.type : '' }\n                            timeToSeek={ this.state.timeToSeek }\n                        />\n                    </Media>\n                </div>\n                {\n                    this.state.showSpinner &&\n                    <div class=\"d-flex justify-content-center mt-5\">\n                        <div class=\"spinner-border\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                }\n                {\n                    !this.state.showSpinner &&\n                    <div className='transcription'>\n                        { this.renderResults() }\n                        { this.renderOptions() }\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user, selectedFile }) => {\n    return { user, selectedFile };\n}\n\nexport default connect(mapStateToProps)(Transcription);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport _ from 'lodash';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport { getFileList } from '../../actions';\nimport '../../styles/dashboard.css';\nimport UserHeader from '../user-header';\nimport FileList from './file-list';\nimport Transcription from './transcription';\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        if(_.isEmpty(this.props.user)) {\n            this.props.history.push('/');\n        } else {\n            this.props.getFileList();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <UserHeader />\n                <Container className='dashboard-container'>\n                    <Row>\n                        <Col lg=\"4\" md=\"4\">\n                            <FileList />\n                        </Col>\n                        <Col lg=\"8\" md=\"8\">\n                            <Transcription />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => {\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps, { getFileList })(withRouter(Dashboard));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Card, Form, Accordion, Button } from 'react-bootstrap';\nimport IntlTelInput from 'react-bootstrap-intl-tel-input';\nimport countryList from 'country-list';\n\nimport Alert from 'react-s-alert';\nimport { updateProfile } from '../../actions';\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            identityVisible: false,\n            values: {}\n        }\n    }\n\n    initializeValues = (user) => {\n        if(!_.isEmpty(user) && _.isEmpty(this.state.values)) {\n            const { name, surname, email, phoneNumber } = user;\n            var billing = user.Billing || {};\n            const { country, city, zipCode, address, identityNumber } = billing;\n            var values = {\n                name, surname, email, phoneNumber, country, city, zipCode, address, identityNumber\n            }\n            this.setState({\n                values\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.initializeValues(this.props.user);\n    }\n\n    componentWillReceiveProps({ user }) {\n        if(user.Billing && user.Billing.country === 'tr') {\n            this.setState({\n                identityVisible: true\n            });\n        }\n        this.initializeValues(user);\n    }\n\n    handlePhoneChange = (data) => {\n        var phoneNumber = data.intlPhoneNumber;\n        var { values } = this.state;\n        values.phoneNumber = phoneNumber;\n        this.setState({\n            values\n        })\n    }\n    \n    handleValueChange = (stateName, value) => {\n        if(stateName === 'country' && 'tr' === value) {\n            this.setState({\n                identityVisible: true\n            })\n        }\n        var { values } = this.state;\n        values[stateName] = value;\n        this.setState({\n            values\n        });\n    }\n\n    handleSubmit = (event) => {\n        const { values } = this.state;\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === true) {\n            if(!values.phoneNumber || values.phoneNumber.length < 10) {\n                Alert.error('Phone number must be minimum 10 digits');\n                return;\n            }\n            this.props.updateProfile(values);\n            Alert.info('Profile info updated successfully.')\n        }\n        this.setState({ validated: true });\n    }\n\n    render() {\n        const { user } = this.props;\n        var defaultPhone = user ? user.phoneNumber : '';\n        var { values } = this.state;\n        if(!values) values = {};\n        return (\n            <Form noValidate validated={ this.state.validated } onSubmit={ this.handleSubmit }>\n                <Form.Group>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                        value={ values.name || '' }\n                        onChange={ (e) => { this.handleValueChange('name', e.target.value) } }\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Enter Name\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Surname</Form.Label>\n                    <Form.Control\n                        name=\"surname\"\n                        type=\"text\"\n                        placeholder=\"Surname\"\n                        value={ values.surname || '' }\n                        onChange={ (e) => { this.handleValueChange('surname', e.target.value) } }\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Enter Surname\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={ values.email || '' }\n                        onChange={ (e) => { this.handleValueChange('email', e.target.value) } }\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Enter Email\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Phone Number</Form.Label>\n                    <IntlTelInput\n                        fieldName='phoneNumner'\n                        preferredCountries={['TR', 'US', 'GB']}\n                        defaultCountry={'TR'}\n                        maxLength=\"20\"\n                        defaultValue={ defaultPhone }\n                        value={ values.phoneNumber || '' }\n                        onChange={ this.handlePhoneChange }\n                        telInputProps={{\n                            required: true\n                        }}\n                        inputClassName='form-control'\n                        required\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Enter Phone Number\n                    </Form.Control.Feedback>\n                </Form.Group>\n                <Card>\n                    <Accordion defaultActiveKey='0'>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"0\" className='address-title'>\n                            Edit Address\n                        </Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <Card.Body>\n                                <Form.Group>\n                                    <Form.Label>Country</Form.Label>\n                                    <Form.Control\n                                        name='country'\n                                        as='select'\n                                        required\n                                        onChange={ (e) => { this.handleValueChange('country', e.target.value) } }\n                                        value={ values.country || '' }\n                                    >\n                                        <option />\n                                        {\n                                            _.map(countryList.getCodeList(), (value, key) => {\n                                                return <option key={ key } value={ key }>{ value }</option>\n                                            })\n                                        }\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Select Address Country\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group>\n                                <Form.Label>City</Form.Label>\n                                    <Form.Control\n                                        name=\"city\"\n                                        type=\"text\"\n                                        placeholder=\"City\"\n                                        value={ values.city || '' }\n                                        onChange={ (e) => { this.handleValueChange('city', e.target.value) } }\n                                        required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Enter City\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Zip Code</Form.Label>\n                                    <Form.Control\n                                        name=\"zipCode\"\n                                        type=\"number\"\n                                        placeholder=\"Zip Code\"\n                                        value={ values.zipCode || '' }\n                                        onChange={ (e) => { this.handleValueChange('zipCode', e.target.value) } }\n                                        required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Enter Zip Code\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control\n                                        name=\"address\"\n                                        type=\"textarea\"\n                                        placeholder=\"Address\"\n                                        value={ values.address || '' }\n                                        onChange={ (e) => { this.handleValueChange('address', e.target.value) } }\n                                        required\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Enter Address\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                {\n                                    this.state.identityVisible &&\n                                    <Form.Group>\n                                        <Form.Label>Identity Number</Form.Label>\n                                        <Form.Control\n                                            name=\"identityNumber\"\n                                            type=\"number\"\n                                            placeholder=\"Identity Number\"\n                                            value={ values.identityNumber || '' }\n                                            onChange={ (e) => { this.handleValueChange('identityNumber', e.target.value) } }\n                                            required={ this.state.identityVisible }\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            Enter Identification Number\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                }\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Accordion>\n                </Card>\n                <br />\n                <Button type=\"submit\" className='float-right'>Submit</Button>\n            </Form>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user }) => {\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps, { updateProfile })(Profile);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { Container, Card, Form, Row, Col, InputGroup, Button, ResponsiveEmbed, Spinner, Alert } from 'react-bootstrap';\nimport * as SAlert from 'react-s-alert';\nimport publicIp from 'public-ip';\n\nimport firebase from '../../utils/firebase';\nimport Utils from '../../utils';\n\nclass Payment extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            duration: 0,\n            durationType: 'hours',\n            calculatedPrice: 0,\n            state: 'INITIAL'\n        }\n    }\n\n    initializePage = () => {\n        this.setState({\n            duration: 0,\n            durationType: 'hours',\n            calculatedPrice: 0,\n            state: 'INITIAL',\n            basketId: undefined,\n            checkoutForm: undefined,\n            showSpinner: false,\n            spinnerText: ''\n        })\n    }\n\n    componentWillReceiveProps({ user }) {\n        if(user && user.currentPlan && user.currentPlan.type === 'Monthly') {\n            const { currentPlan } = user;\n            this.setState({\n                calculatedPrice: (currentPlan.pricePerMinute * currentPlan.quota).toFixed(2)\n            })\n        } else {\n            this.setState({\n                calculatedPrice: 0\n            })\n        }\n    }\n\n    durationChanged = (e) => {\n        this.setState({\n            duration: e.target.value\n        })\n    }\n\n    calculatePrice = () => {\n        var calculatedPrice = 0;\n        var { duration, durationType } = this.state;\n        const { currentPlan } = this.props.user;\n        let durationInMinutes = parseFloat(duration) * (durationType === 'hours' ? 60 : 1);\n        if(durationInMinutes < 60) {\n            SAlert.error('You must buy at lease 60 minutes!');\n        } else {\n            let pricePerMinute = parseFloat(currentPlan.pricePerMinute);\n            calculatedPrice = (durationInMinutes * pricePerMinute).toFixed(2);\n        }\n        this.setState({\n            calculatedPrice,\n            state: 'INITIAL',\n            checkoutForm: undefined\n        })\n    }\n\n    initializePayment = async () => {\n        var that = this;\n        const { language, user } = this.props;\n        var { duration, durationType, basketId } = this.state;\n        let durationInMinutes = parseFloat(duration) * (durationType === 'hours' ? 60 : 1);\n        this.setState({\n            state: 'PAYMENT',\n            showSpinner: true,\n            spinnerText: 'Initializing...'\n        });\n        \n        var ip = await publicIp.v4();\n        var fncAddBasket = firebase.functions().httpsCallable('addToBasket');\n        fncAddBasket({ \n            minutes: durationInMinutes === 0 ? undefined : durationInMinutes,\n            locale: language,\n            newPlanId: user.currentPlan.id,\n            ip,\n            basketId\n        }).then(({ data }) => {\n            const { basketId, checkoutForm } = data;\n            that.setState({\n                basketId,\n                checkoutForm,\n                showSpinner: false,\n                spinnerText: ''\n            })\n            firebase.firestore().collection('payments').doc(user.uid).collection('userbasket').doc(basketId)\n            .onSnapshot((snapshot) => {\n                if(snapshot && snapshot.data && snapshot.data().status === 'SUCCESS') {\n                    that.setState({\n                        state: 'SUCCESS'\n                    });\n                }\n            });\n        });\n    }\n\n    renderSuccess = () => {\n        if(this.state.state !== 'SUCCESS') return null;\n        return (\n            <div>\n                <Alert variant='success'>\n                    Payment is successful.\n                </Alert>\n                <Button variant='primary' onClick={ this.initializePage }>Add More Credits</Button>\n                <br />\n                <Button variant='link'>\n                    <Link to='/dashboard'>Go to Dashboard</Link>\n                </Button>\n            </div>\n        )\n    }\n\n    renderFormAsDemo = () => {\n        return (\n            <div>\n                <Alert variant='danger'>\n                    You cannot add credit in Demo plan! <Alert.Link href=\"#\" onClick={() => this.props.changeTab('plan')}>Select a Plan</Alert.Link> in order to add credits.\n                </Alert>\n                {/* <Button variant='primary' onClick={() => this.props.changeTab('plan') }>Select a Plan</Button> */}\n            </div>\n        )\n    }\n\n    validatePayment = () => {\n        const { name, surname, email, phoneNumner, Billing } = this.props.user;\n        \n        if(_.isEmpty(name) || _.isEmpty(surname) || _.isEmpty(email) || _.isEmpty(phoneNumner)) {\n            if(_.isEmpty(Billing) || _.isEmpty(Billing.country) || _.isEmpty(Billing.city) || _.isEmpty(Billing.zipCode) || _.isEmpty(Billing.address) || _.isEmpty(Billing.identityNumber)) {\n                return (\n                    <div>\n                        <Alert variant='danger'>\n                            You need to <Alert.Link onClick={() => this.props.changeTab('profile')}>Complete Your Profile</Alert.Link> in order to make payment!\n                        </Alert>\n                        {/* <Button variant='primary' onClick={() => this.props.changeTab('payment') }>Go to Profile</Button> */}\n                    </div>\n                )\n            }\n        }\n        return {\n            success: true\n        }\n    }\n\n    renderPaymentForm = () => {\n        var { currentPlan } = this.props.user;\n        if(!currentPlan) currentPlan = {};\n        const { calculatedPrice, duration, checkoutForm, showSpinner, state } = this.state;\n        if(state === 'SUCCESS') return null;\n        if(currentPlan.type === 'Demo') {\n            return this.renderFormAsDemo();\n        }\n        var validationResult = this.validatePayment();\n        if(!validationResult.success) {\n            return validationResult;\n        }\n        return (\n            <div>\n                {\n                    currentPlan.type === 'PayAsYouGo' &&\n                    <Form.Group>\n                        <Form.Label>Usage needed in minutes</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <Form.Control\n                                name='duration'\n                                placeholder=\"Duration needed\"\n                                aria-label=\"Duration needed\"\n                                type='number'\n                                value={ duration }\n                                onChange={ this.durationChanged }\n                            />\n                            <InputGroup.Append>\n                                <Form.Control as='select' value={ this.state.durationType } onChange={ e => this.setState({ durationType: e.target.value }) }>\n                                    <option key='hours' value='hours'>Hours</option>\n                                    <option key='minutes' value='minutes'>Minutes</option>\n                                </Form.Control>\n                            </InputGroup.Append>\n                            <InputGroup.Append>\n                                <Button variant=\"primary\" onClick={ this.calculatePrice }>Calculate</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Form.Group>\n                }\n                {\n                    calculatedPrice > 0 &&\n                    <Form.Group>\n                        <Form.Label><b>{`${currentPlan.type === 'PayAsYouGo' ? 'Calculated ' : '' }Price :`}</b> { `${currentPlan.currency === 'USD' ? '$' : ''} ${calculatedPrice} ${ currentPlan.currency === 'TRY' ? 'TL' : '' }` }</Form.Label>\n                        <br />\n                        <Button variant='success' onClick={ this.initializePayment }>{ currentPlan.type === 'PayAsYouGo' ? 'Make Payment' : 'Renew Subscription'  }</Button>\n                    </Form.Group>\n                }\n                {\n                    showSpinner &&\n                    <div>\n                        <Spinner animation=\"border\" role=\"status\" />\n                        &nbsp;<span>{ this.state.spinnerText }</span>\n                    </div>\n                }\n                {\n                    checkoutForm && checkoutForm.paymentPageUrl &&\n                    <ResponsiveEmbed>\n                        <embed src={ checkoutForm.paymentPageUrl } />\n                    </ResponsiveEmbed>\n                }\n            </div>\n        )\n    }\n\n    render() {\n        var { currentPlan } = this.props.user;\n        if(_.isEmpty(currentPlan)) currentPlan = {};\n        return (\n            <Container>\n                <Card>\n                    <Card.Title className='current-plan-title'><b>CurrentPlan :</b> { currentPlan.planName }</Card.Title>\n                    <Card.Body>\n                        <Row>\n                            {\n                                currentPlan.type === 'Demo' &&\n                                <Col lg={6} md={6} sm={6}>\n                                    <Form.Label><b>Duration Limit : </b>{`${!currentPlan.quota || currentPlan.quota === 0 ? '-' : currentPlan.quota + ' mins'}`}</Form.Label>\n                                </Col>\n                            }\n                            {\n                                currentPlan.type === 'Monthly' &&\n                                <Col lg={6} md={6} sm={6}>\n                                    <Form.Label><b>Expire Date : </b> { Utils.formatExpireDate(currentPlan.expireDate) }</Form.Label>\n                                </Col>\n                            }\n                            <Col lg={6} md={6} sm={6}>\n                                <Form.Label><b>Remaining Duration : </b>{currentPlan.remainingMinutes} mins</Form.Label>\n                            </Col>\n                            {\n                                currentPlan.pricePerMinute > 0 &&\n                                <Col lg={6} md={6} sm={6}>\n                                    <Form.Label><b>Price Per Minute : </b>$ {currentPlan.pricePerMinute}</Form.Label>\n                                </Col>\n                            }\n                        </Row>\n                    </Card.Body>\n                </Card>\n                <br />\n                {\n                    this.renderPaymentForm()\n                }\n                {\n                    this.renderSuccess()\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, language }) => {\n    return {\n        user,\n        language\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Payment));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Container, Card, Row, Col, Form, Button } from 'react-bootstrap';\nimport { FormattedMessage } from 'react-intl';\nimport Alert from 'react-s-alert';\n\nimport Utils from '../../utils';\nimport firebase from '../../utils/firebase';\nimport ApprovementPopup from '../../components/approvement-popup';\n\nclass Plan extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedPlanType: ''\n        }\n    }\n\n    componentWillReceiveProps({ user }) {\n        if(user && user.currentPlan && user.currentPlan.type && user.currentPlan.type !== 'Demo') {\n            this.setState({\n                selectedPlanType: user.currentPlan.type\n            })\n        }\n    }\n\n    changeCurrentPlan = () => {\n        const { user } = this.props;\n        if(user.currentPlan.type !== 'Demo') {\n            this.setState({\n                showApprovement: true\n            });\n        } else {\n            this.submitPlanChange();\n        }\n    }\n\n    submitPlanChange = () => {\n        const { selectedPlanType } = this.state;\n        const { plans } = this.props;\n        var selectedPlan = _.find(plans, { type: selectedPlanType });\n        var fncAddBasket = firebase.functions().httpsCallable('changeUserPlan');\n        fncAddBasket({ \n            planId: selectedPlan.planId\n        }).then(({ data }) => {\n            if(data.success) {\n                Alert.success('You plan changed successfully.');\n            }\n        });\n        this.setState({\n            showApprovement: false\n        });\n    }\n\n    cancelPlanChange = () => {\n        this.setState({\n            showApprovement: false\n        })\n    }\n\n    render() {\n        var { currentPlan } = this.props.user;\n        var { selectedPlanType } = this.state;\n        if(_.isEmpty(currentPlan)) currentPlan = {};\n        if(!selectedPlanType) selectedPlanType = currentPlan.type;\n        return (\n            <Container>\n                <div className=\"pricing card-deck flex-column flex-md-row user-plan\">\n                    <div className={`card card-pricing text-center px-3 mb-4 ${selectedPlanType === 'PayAsYouGo' ? 'shadow card-pricing-popular' : ''}`} \n                            onClick={ () => this.setState({ selectedPlanType: 'PayAsYouGo'}) }>\n                        <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white\">\n                            <FormattedMessage id=\"Pricing.Standard.title\" />\n                        </span>\n                        <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\" >\n                            <h2 className=\"h2 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"30\">\n                                $<span className=\"price\">5,90</span>\n                                <span className=\"h6 text-muted ml-2\">/\n                                    <FormattedMessage id=\"Pricing.Standard.timeText\" />\n                                </span>\n                            </h2>\n                        </div>\n                        <div className=\"card-body pt-0\">\n                            <ul className=\"list-unstyled mb-4 plan-body-container\">\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Standard.feature1\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Standard.feature2\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Standard.feature3\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Standard.feature4\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Standard.feature5\" />\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div className={`card card-pricing text-center px-3 mb-4 ${selectedPlanType === 'Monthly' ? 'shadow card-pricing-popular' : ''}`} \n                            onClick={ () => this.setState({ selectedPlanType: 'Monthly'}) }>\n                        <span className=\"h6 w-60 mx-auto px-4 py-1 rounded-bottom bg-primary text-white shadow-sm\">\n                            <FormattedMessage id=\"Pricing.Monthly.title\" />\n                        </span>\n                        <div className=\"bg-transparent card-header pt-4 border-0 pricing-header-container\" >\n                            <h2 className=\"h2 font-weight-normal text-primary text-center mb-0\" data-pricing-value=\"30\">\n                                $<span className=\"price\">24,90</span>\n                                <span className=\"h6 text-muted ml-2\">\n                                    / 5\n                                    <FormattedMessage id=\"Pricing.Monthly.timeText\" />\n                                </span>\n                            </h2>\n                        </div>\n                        <div className=\"card-body pt-0\">\n                            <ul className=\"list-unstyled mb-4 plan-body-container\" >\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Monthly.feature1\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Monthly.feature2\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Monthly.feature3\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Monthly.feature4\" />\n                                </li>\n                                <li className='list-unstyled'>\n                                    <FormattedMessage id=\"Pricing.Monthly.feature5\" />\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                {\n                    selectedPlanType && selectedPlanType !== currentPlan.type &&\n                    <div align='center'>\n                        <Button variant='success' onClick={ this.changeCurrentPlan }>Change Plan</Button>\n                    </div>\n                }\n                {\n                    this.state.showApprovement &&\n                    <ApprovementPopup\n                        show={ this.state.showApprovement }\n                        headerText='Plan Change Confirmation'\n                        bodyText='You remaining duration will be deleted if you change plan now'\n                        handleSuccess={ this.submitPlanChange }\n                        handleCancel={ this.cancelPlanChange }\n                    />\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, plans }) => {\n    return {\n        user,\n        plans\n    }\n}\n\nexport default connect(mapStateToProps)(Plan);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport _ from 'lodash';\nimport { Container, Tab, Row, Col, Nav } from 'react-bootstrap';\n\nimport UserHeader from '../user-header';\nimport Profile from './profile';\nimport Payment from './payment';\nimport Plan from './plan';\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n\n        let hashValue = props.location.hash ? props.location.hash.substr(1) : '';\n        this.state = {\n            activeTabKey: hashValue ? hashValue : 'profile'\n        }\n    }\n\n    componentDidMount() {\n        if(_.isEmpty(this.props.user)) {\n            this.props.history.push('/');\n        }\n    }\n\n    changeTab = (tabName) => {\n        this.setState({\n            activeTabKey: tabName\n        });\n        this.props.history.push('#' + tabName)\n    }\n\n    render() {\n        return (\n            <div>\n                <UserHeader />\n                <Container className='profile-container'>\n                    <Tab.Container id=\"left-tabs-example\" activeKey={ this.state.activeTabKey }>\n                        <Row>\n                            <Col sm={3} className='user-tabs'>\n                                <Nav variant=\"pills\" className=\"flex-column\">\n                                    <Nav.Item>\n                                        <Nav.Link href='#profile' eventKey=\"profile\" onClick={ () => this.setState({ activeTabKey: 'profile' }) } >Profile</Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link href='#payment' eventKey=\"payment\" onClick={ () => this.setState({ activeTabKey: 'payment' }) } >Payment</Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link href='#plan' eventKey=\"plan\" onClick={ () => this.setState({ activeTabKey: 'plan' }) } >Plans</Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                            </Col>\n                            <Col sm={9} className='user-tab-content-container'>\n                                <Tab.Content>\n                                    <Tab.Pane eventKey=\"profile\">\n                                        <Profile />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"payment\">\n                                        <Payment changeTab={ this.changeTab } />\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"plan\">\n                                        <Plan />\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            </Col>\n                        </Row>\n                    </Tab.Container>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => {\n    return {\n        user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(User));","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from '../header';\nimport Footer from '../footer';\n\nconst Privacy = () => {\n    return (\n        <div className='privacy'>\n            <Header />\n            <Container className='privacy-container'>\n                <h2 align='center'><b>Privacy Policy</b></h2>\n                <p className='last-update'><b>Last Updated: September 12, 2019</b></p>\n                <p>\n                    This privacy policy applies between you, the User of this Website and SpeechText.io, the owner and provider of this Website. \n                    SpeechText.io takes the privacy of your information very seriously. \n                    This privacy policy applies to our use of any and all Data collected by us or provided by you in relation to your use of the Website.\n                </p>\n\n                <br />\n                <h5><b>Contact Information of the Data Controller</b></h5>\n                <p>\n                    For the purposes of data protection legislation in the European Union, we are the data controller. \n                    This means that we determine the purposes for, and ways in which, we collect and use personal information. \n                    SpeechText.io is incorporated in Ankara, TURKEY and registered in Ankara.\n                </p>\n                \n                <br />\n                <h5><b>Scope of Privacy Policy</b></h5>\n                <p>\n                    This privacy policy applies only to the actions of SpeechText.io and Users with respect to this Website. \n                    It does not extend to any websites that can be accessed from this Website including, but not limited to, \n                    any links we may provide to social media websites.\n                </p>\n                <p>\n                    For purposes of the applicable Data Protection Laws, SpeechText.io is the \"data controller\". \n                    This means that SpeechText.io determines the purposes for which, and the manner in which, your Data is processed.\n                </p>\n                \n                <br />\n                <h5><b>Information We Collect</b></h5>\n                <p>\n                    When you interact with us through the Services, we may collect Personal Data and other information from you, as further described below:\n                </p>\n                <p>\n                    Personal Data That You Provide Through the Services: We collect Personal Data from you when you voluntarily provide such information, \n                    such as when you contact us with inquiries, respond to one of our surveys, register for access to the Services or use certain Services. \n                    Wherever SpeechText.io collects Personal Data we make an effort to provide a link to this Privacy Policy. \n                </p>\n                <p>\n                    In addition, we may have access to your Personal Data if such data is included in any audio files you send us for transcription \n                    services. We only use such Personal Data solely to provide the Services to you and to improve our algorithms. \n                    We will never sell, lease, or otherwise provide access to such Personal Data to our employees, contractors, \n                    agents or other third parties without your authorization.\n                </p>\n                <p>\n                    By voluntarily providing us with Personal Data, you are consenting to our use of it in accordance with this Privacy Policy. \n                    If you provide Personal Data to the Services, you acknowledge and agree that such Personal Data may be transferred from your current \n                    location to the offices and servers of SpeechText.io and the authorized third parties referred to here in located in Turkey. \n                </p>\n                \n                <br />\n                <h5><b>How We Collect Data</b></h5>\n                <p>\n                    We collect Data in the following ways:\n                </p>\n                <ul>\n                    <li>data is given to us by you,</li>\n                    <li>data is received from other sources, and</li>\n                    <li>data is collected automatically</li>\n                </ul>\n                \n                <br />\n                <h5><b>Data Given by You</b></h5>\n                <p>\n                    SpeechText.io will collect your Data in a number of ways, for example:\n                </p>\n                <ul>\n                    <li>\n                        when you contact us through the Website, by telephone, post, e-mail or through any other means;\n                    </li>\n                    <li>\n                        when you register with us and set up an account to receive our products/services;\n                    </li>\n                    <li>\n                        when you complete surveys that we use for research purposes (although you are not obliged to respond to them);\n                    </li>\n                    <li>\n                        when you use our services;\n                    </li>\n                </ul>\n                <p>in each case, in accordance with this privacy policy.</p>\n                \n                <br />\n                <h5><b>Data Collected Automatically</b></h5>\n                <p>\n                    To the extent that you access the Website, we will collect your Data automatically, for example:\n                </p>\n                <ul>\n                    <li>\n                        we automatically collect some information about your visit to the Website. \n                        This information helps us to make improvements to Website content and navigation, and includes your IP address, \n                        the date, times and frequency with which you access the Website and the way you use and interact with its content.\n                    </li>\n                    <li>\n                        we will collect your Data automatically via cookies, in line with the cookie settings on your browser. \n                        For more information about cookies, and how we use them on the Website, see the section below, headed \"Cookies\".\n                    </li>\n                </ul>\n\n                <br />\n                <h5><b>Our Use of Data</b></h5>\n                <ul>\n                    <li>\n                        Any or all of the above Data may be required by us from time to time in order to provide you with the best possible service \n                        and experience when using our Website. Specifically, Data may be used by us for the following reasons:\n                        <ul>\n                            <li>\n                                internal record keeping;\n                            </li>\n                            <li>\n                                improvement of our products / services;\n                            </li>\n                            <li>\n                                transmission by email of marketing materials that may be of interest to you;\n                            </li>\n                            <li>\n                                contact for market research purposes which may be done using email, telephone, fax or mail. \n                                Such information may be used to customise or update the Website;\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        We may use your Data for the above purposes if we deem it necessary to do so for our legitimate interests. \n                        If you are not satisfied with this, you have the right to object in certain circumstances.\n                    </li>\n                    <li>\n                        For the delivery of direct marketing to you via e-mail, we'll need your consent, whether via an opt-in or soft-opt-in:\n                        <ul>\n                            <li>\n                                soft opt-in consent is a specific type of consent which applies when you have previously engaged with us \n                                (for example, you contact us to ask us for more details about a particular product/service, \n                                and we are marketing similar products/services). Under \"soft opt-in\" consent, \n                                we will take your consent as given unless you opt-out.\n                            </li>\n                            <li>\n                                for other types of e-marketing, we are required to obtain your explicit consent; that is, \n                                you need to take positive and affirmative action when consenting by, for example, \n                                checking a tick box that we'll provide.\n                            </li>\n                            <li>\n                                if you are not satisfied about our approach to marketing, you have the right to withdraw consent at any time. \n                                To find out how to withdraw your consent, see the section headed \"Your rights\" below.\n                            </li>\n                        </ul>\n                    </li>\n                    <li>\n                        When you register with us and set up an account to receive our services, the legal basis for this processing is the performance \n                        of a contract between you and us and/or taking steps, at your request, to enter into such a contract.\n                    </li>\n                </ul>\n\n                <br />\n                <h5><b>Data Share with</b></h5>\n                <p>\n                    We may share your Data with the following groups of people for the following reasons:\n                </p>\n                <ul>\n                    <li>\n                        our employees, agents and/or professional advisors - To enable us to engage in direct marketing \n                        (such as newsletters or marketing emails for products and services provided by us that we believe will be of interest to you);\n                    </li>\n                    <li>\n                        third party payment providers who process payments made over the Website - \n                        to enable third party payment providers to process user payments and refunds;\n                    </li>\n                </ul>\n                <p>in each case, in accordance with this privacy policy.</p>\n\n                <br />\n                <h5><b>Keeping Data Secure</b></h5>\n                <p>\n                    SpeechText.io takes reasonable steps to protect the Personal Data provided via the Services from loss, misuse, and \n                    unauthorized access, disclosure, alteration, or destruction. However, no Internet or email transmission is ever fully secure or \n                    error free. In particular, email sent to or from the Services may not be secure. Therefore, you should take special care in \n                    deciding what information you send to us via email. Please keep this in mind when disclosing any Personal Data to SpeechText.io \n                    via the Internet.\n                </p>\n                <p>\n                    Unless a longer retention period is required or permitted by law, we will only hold your Data on our systems for the period \n                    necessary to fulfil the purposes outlined in this privacy policy or until you request that the Data be deleted.\n                </p>\n                <p>\n                    Even if we delete your Data, it may persist on backup or archival media for legal, tax or regulatory purposes.\n                </p>\n\n                <br />\n                <h5><b>Links to Other Websites</b></h5>\n                <p>\n                    This Website may, from time to time, provide links to other websites. We have no control over such websites and are not responsible \n                    for the content of these websites. This privacy policy does not extend to your use of such websites. \n                    You are advised to read the privacy policy or statement of other websites prior to using them.\n                </p>\n\n                <br />\n                <h5><b>Cookies</b></h5>\n                <p>\n                    In operating the Services, we may use a technology called \"cookies.\" A cookie is a piece of information that the computer \n                    that hosts our Services gives to your browser when you access the Services. Our cookies help provide additional functionality \n                    to the Services and help us analyze Services usage more accurately. For instance, our Site may set a cookie on your browser \n                    that allows you to access the Services without needing to remember and then enter a password more than once during a visit \n                    to the Site. In all cases in which we use cookies, we will not collect Personal Data except with your permission. \n                    On most web browsers, you will find a “help” section on the toolbar. Please refer to this section for information on \n                    how to receive notification when you are receiving a new cookie and how to turn cookies off. We recommend that you \n                    leave cookies turned on because they allow you to take advantage of some of the Service features.\n                </p>\n\n                <br />\n                <h5><b>Children’s Privacy</b></h5>\n                <p>\n                    SpeechText.io does not knowingly collect Personal Data from children under the age of 13. \n                    If you are under the age of 13, please do not submit any Personal Data through the Services. \n                    We encourage parents and legal guardians to monitor their children’s Internet usage and to help enforce our Privacy Policy \n                    by instructing their children never to provide Personal Data on the Services without their permission. \n                    If you have reason to believe that a child under the age of 13 has provided Personal Data to SpeechText.io through the Services, \n                    please contact us, and we will endeavor to delete that information from our databases. \n                </p>\n\n                <br />\n                <h5><b>Other Terms and Conditions:</b></h5>\n                <p>\n                    Your access to and use of the Services is subject to the Terms of Service at&nbsp;\n                    <Link to='/terms'>https://speechtext.io/terms</Link>\n                </p>\n\n                <br />\n                <h5><b>Changes to This Privacy Policy</b></h5>\n                <p>\n                    SpeechText.io reserves the right to change this privacy policy as we may deem necessary from time to time or \n                    as may be required by law. Any changes will be immediately posted on the Website and you are deemed to have accepted the terms \n                    of the privacy policy on your first use of the Website following the alterations.\n                </p>\n                <p>\n                    We may change this Privacy Policy from time to time. If we make changes, we will notify you by revising the date at the \n                    top of the policy and, in some cases, we may provide you with additional notice (such as adding a statement to our homepage \n                    or sending you an email notification). We encourage you to review the Privacy Policy whenever you access the \n                    Transcription Service to stay informed about our information practices and the ways you can help protect your privacy.\n                </p>\n                <br />\n                <h5><b>Questions or Complaints</b></h5>\n                <p>\n                    If you have any questions about this Privacy Policy, please contact us at&nbsp;\n                    <a href='mailto:‍support@speechtext.io'>‍support@speechtext.io.</a>\n                </p>\n            </Container>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Privacy;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Header from '../header';\nimport Footer from '../footer';\n\nconst Terms = () => {\n    return (\n        <div className='terms'>\n            <Header />\n            <Container className='terms-container'>\n                <h2 align='center'><b>Terms of Service</b></h2>\n                <p className='last-update'><b>Last Updated: September 12, 2019</b></p>\n                <p>\n                    SpeechText.io, Inc. (“SpeechText.io,” “we,” “us,” “our”) provides its services (described below) to you through its website \n                    located at SpeechText.io(the “Site”) subject to the following Terms of Service (as amended from time to time, the “Terms of Service”). \n                    We reserve the right, at our sole discretion, to change or modify portions of these Terms of Service at any time. \n                    If we do this, we will post the changes on this page and will indicate at the top of this page the date these terms were \n                    last revised. We will also notify you, either through the Services user interface, in an email notification or through \n                    other reasonable means. Any such changes will become effective no earlier than fourteen (14) days after they are posted, \n                    except that changes addressing new functions of the Services or changes made for legal reasons will be effective immediately. \n                    Your continued use of the Service after the date any such changes become effective constitutes your acceptance of the \n                    new Terms of Service.\n                </p>\n                <p>\n                    PLEASE READ THESE TERMS OF SERVICE CAREFULLY, AS THEY CONTAIN AN AGREEMENT TO ARBITRATE AND OTHER IMPORTANT INFORMATION \n                    REGARDING YOUR LEGAL RIGHTS, REMEDIES, AND OBLIGATIONS. THE AGREEMENT TO ARBITRATE REQUIRES (WITH LIMITED EXCEPTION) \n                    THAT YOU SUBMIT CLAIMS YOU HAVE AGAINST US TO BINDING AND FINAL ARBITRATION, AND FURTHER (1) YOU WILL ONLY BE PERMITTED \n                    TO PURSUE CLAIMS AGAINST SpeechText.io ON AN INDIVIDUAL BASIS, NOT AS A PLAINTIFF OR CLASS MEMBER IN ANY CLASS \n                    OR REPRESENTATIVE ACTION OR PROCEEDING, AND (2) YOU WILL ONLY BE PERMITTED TO SEEK RELIEF (INCLUDING MONETARY, INJUNCTIVE, \n                    AND DECLARATORY RELIEF) ON AN INDIVIDUAL BASIS.\n                </p>\n                <p>\n                    In addition, when using certain services, you will be subject to any additional terms applicable to such services \n                    that may be posted on the Service from time to time, including, without limitation, the Privacy Policy \n                    located at&nbsp;<Link to='/privacy'>https://speechtext.io/privacy</Link>. All such terms are hereby incorporated \n                    by reference into these Terms of Service.\n                </p>\n                \n                <br />\n                <h5><b>Access and Use of the Service</b></h5>\n                <p>\n                    <b>Services Description:</b> Our Services are designed to provide you with a simple and intuitive platform \n                    that allows you to transcribe, timestamp and organize your audio/video files.\n                </p>\n                <p>\n                    <b>Confidentiality of Your Audio Files:</b> To use our Services, you may provide us with audio files either \n                    by uploading it to our Site or you may dial-in to the Services with your phone. We understand that your audio files may contain \n                    sensitive information and take the confidentiality of your audio files seriously. Unless you have given us your express permission, \n                    we will not use or share your audio files for any other purposes except to provide you with our transcription \n                    and other related services.\n                </p>\n                <p>\n                    <b>Your Registration Obligations:</b> You may be required to register with SpeechText.io in order to access and use certain \n                    features of the Service. If you choose to register for the Service, you agree to provide and maintain true, accurate, \n                    current and complete information about yourself as prompted by the Service’s registration form. \n                    Registration data and certain other information about you are governed by our Privacy Policy. \n                    If you are under 13 years of age, you are not authorized to use the Service, with or without registering. \n                    In addition, if you are under 18 years old, you may use the Service, with or without registering, \n                    only with the approval of your parent or guardian.\n                </p>\n                <p>\n                    <b>Member Account, Password and Security:</b> You are responsible for maintaining the confidentiality of your password and account, \n                    if any, and are fully responsible for any and all activities that occur under your password or account. \n                    You agree to (a) immediately notify SpeechText.io of any unauthorized use of your password or account or any other \n                    breach of security, and (b) ensure that you exit from your account at the end of each session when accessing the Service. \n                    SpeechText.io will not be liable for any loss or damage arising from your failure to comply with this Section.\n                </p>\n                <p>\n                    <b>Modifications to Service:</b> SpeechText.io reserves the right to modify or discontinue, temporarily or permanently, \n                    the Service (or any part thereof) with or without notice. You agree that SpeechText.io will not be liable to you or \n                    to any third party for any modification, suspension or discontinuance of the Service.\n                </p>\n                <p>\n                    <b>General Practices Regarding Use and Storage:</b> You acknowledge that SpeechText.io may establish general practices \n                    and limits concerning use of the Service, including without limitation the maximum period of time that data or other content \n                    will be retained by the Service and the maximum storage space that will be allotted on SpeechText.io’s servers on your behalf. \n                    You agree that SpeechText.io has no responsibility or liability for the deletion or failure to store any data or \n                    other content maintained or uploaded by the Service. You acknowledge that SpeechText.io reserves the right to terminate accounts \n                    that are inactive for an extended period of time. You further acknowledge that SpeechText.io reserves the right to change \n                    these general practices and limits at any time, in its sole discretion, with or without notice.\n                </p>\n\n                <br />\n                <h5><b>Conditions of Use </b></h5>\n                <p>\n                    <b>User Conduct:</b> You are solely responsible for all code, video, images, information, data, text, software, music, sound, \n                    photographs, graphics, messages or other materials (“content”) that you upload, post, publish or display (hereinafter, “upload”) \n                    or email or otherwise use via the Service. SpeechText.io reserves the right to investigate and take appropriate legal action \n                    against anyone who, in SpeechText.io’s sole discretion, violates this provision, including without limitation, removing the \n                    offending content from the Service, suspending or terminating the account of such violators and reporting you to the law \n                    enforcement authorities. You agree to not use the Service to:\n                </p>\n                <p>\n                    <b>Fees:</b> In order to use the Services, you will be required to select a payment plan and provide SpeechText.io \n                    information regarding your credit card or other payment instrument. You represent and warrant to SpeechText.io that such \n                    information is true and that you are authorized to use the payment instrument. You will promptly update your account \n                    information with any changes (for example, a change in your billing address or credit card expiration date) that may occur. \n                    You agree to pay SpeechText.io the amount that is specified in the payment plan in accordance with the terms of such plan and \n                    this Terms of Service. You hereby authorize SpeechText.io to bill your payment instrument in advance on a periodic basis \n                    in accordance with the terms of the applicable payment plan until you terminate your account, and you further agree to pay \n                    any charges so incurred. If you dispute any charges you must let SpeechText.io know within sixty (60) days after the date that \n                    SpeechText.io charges you. We reserve the right to change SpeechText.io’s prices. If SpeechText.io does change prices, \n                    SpeechText.io will provide notice of the change on the Site or in email to you, at SpeechText.io’s option, at least 30 days \n                    before the change is to take effect. Your continued use of the Service after the price change becomes effective constitutes \n                    your agreement to pay the changed amount. You shall be responsible for all taxes associated with the Services other than U.S. \n                    taxes based on SpeechText.io’s net income.\n                </p>\n                <p>\n                    <b>Special Notice for International Use; Export Controls:</b> Software (defined below) available in connection with the Service \n                    and the transmission of applicable data, if any, is subject to United States export controls. No Software may be downloaded \n                    from the Service or otherwise exported or re-exported in violation of U.S. export laws. Downloading or using the Software is at \n                    your sole risk. Recognizing the global nature of the Internet, you agree to comply with all local rules and laws regarding your \n                    use of the Service, including as it concerns online conduct and acceptable content.\n                </p>\n                <p>\n                    <b>Commercial Use:</b> Unless otherwise expressly authorized herein or in the Service, you agree not to display, distribute, \n                    license, perform, publish, reproduce, duplicate, copy, create derivative works from, modify, sell, resell, exploit, transfer or \n                    upload for any commercial purposes, any portion of the Service, use of the Service, or access to the Service.\n                </p>\n\n                <br />\n                <h5><b>Intellectual Property Rights </b></h5>\n                <p>\n                    <b>Service Content, Software and Trademarks:</b> You acknowledge and agree that the Service may contain content or features \n                    (“Service Content”) that are protected by copyright, patent, trademark, trade secret or other proprietary rights and laws. \n                    Except as expressly authorized by SpeechText.io, you agree not to modify, copy, frame, scrape, rent, lease, loan, sell, \n                    distribute or create derivative works based on the Service or the Service Content, in whole or in part, except that the foregoing \n                    does not apply to your own User Content (as defined below) that you legally upload to the Service. In connection with your \n                    use of the Service you will not engage in or use any data mining, robots, scraping or similar data gathering or extraction methods. \n                    If you are blocked by SpeechText.io from accessing the Service (including by blocking your IP address), you agree not to \n                    implement any measures to circumvent such blocking (e.g., by masking your IP address or using a proxy IP address). \n                    Any use of the Service or the Service Content other than as specifically authorized herein is strictly prohibited. \n                    The technology and software underlying the Service or distributed in connection therewith are the property of SpeechText.io, \n                    our affiliates and our partners (the “Software”). You agree not to copy, modify, create a derivative work of, reverse engineer, \n                    reverse assemble or otherwise attempt to discover any source code, sell, assign, sublicense, or otherwise transfer any right \n                    in the Software. Any rights not expressly granted herein are reserved by SpeechText.io.\n                </p>\n                <p>\n                    The SpeechText.io name and logos are trademarks and service marks of SpeechText.io (collectively the “SpeechText.io Trademarks”). \n                    Other company, product, and service names and logos used and displayed via the Service may be trademarks or service marks of their \n                    respective owners who may or may not endorse or be affiliated with or connected to SpeechText.io. Nothing in this Terms of Service \n                    or the Service should be construed as granting, by implication, estoppel, or otherwise, any license or right to use any of \n                    SpeechText.io Trademarks displayed on the Service, without our prior written permission in each instance. All goodwill \n                    generated from the use of SpeechText.io Trademarks will inure to our exclusive benefit.\n                </p>\n                <p>\n                    <b>Third Party Material:</b> Under no circumstances will SpeechText.io be liable in any way for any content or materials of any \n                    third parties (including users), including, but not limited to, for any errors or omissions in any content, or for any loss or \n                    damage of any kind incurred as a result of the use of any such content. You acknowledge that SpeechText.io does not pre-screen \n                    content, but that SpeechText.io and its designees will have the right (but not the obligation) in their sole discretion to \n                    refuse or remove any content that is available via the Service. Without limiting the foregoing, SpeechText.io and its designees \n                    will have the right to remove any content that violates these Terms of Service or is deemed by SpeechText.io, in its sole discretion, \n                    to be otherwise objectionable. You agree that you must evaluate, and bear all risks associated with, the use of any content, \n                    including any reliance on the accuracy, completeness, or usefulness of such content.\n                </p>\n                <p>\n                    You acknowledge and agree that any questions, comments, suggestions, ideas, feedback or other information about the Service \n                    (“Submissions”), provided by you to SpeechText.io are non-confidential and SpeechText.io will be entitled to the unrestricted \n                    use and dissemination of these Submissions for any purpose, commercial or otherwise, without acknowledgment or \n                    compensation to you.\n                </p>\n                <p>\n                    You acknowledge and agree that SpeechText.io may preserve content and may also disclose content if required to do so by law or \n                    in the good faith belief that such preservation or disclosure is reasonably necessary to: (a) comply with legal process, \n                    applicable laws or government requests; (b) enforce these Terms of Service; (c) respond to claims that any content violates \n                    the rights of third parties; or (d) protect the rights, property, or personal safety of SpeechText.io, its users and the public. \n                    You understand that the technical processing and transmission of the Service, including your content, may involve (a) \n                    transmissions over various networks; and (b) changes to conform and adapt to technical requirements of connecting networks \n                    or devices.\n                </p>\n                <p>\n                    <b>Copyright Complaints:</b> SpeechText.io respects the intellectual property of others, and we ask our users to do the same. \n                    If you believe that your work has been copied in a way that constitutes copyright infringement, or that your intellectual \n                    property rights have been otherwise violated, you should notify SpeechText.io of your infringement claim in accordance with \n                    the procedure set forth below.\n                </p>\n\n                <br />\n                <h5><b>Third Party Websites</b></h5>\n                <p>\n                    The Service may provide, or third parties may provide, links or other access to other sites and resources on the Internet. \n                    SpeechText.io has no control over such sites and resources and SpeechText.io is not responsible for and does not endorse \n                    such sites and resources. You further acknowledge and agree that SpeechText.io will not be responsible or liable, directly \n                    or indirectly, for any damage or loss caused or alleged to be caused by or in connection with use of or reliance on any content, \n                    events, goods or services available on or through any such site or resource. Any dealings you have with third parties \n                    found while using the Service are between you and the third party, and you agree that SpeechText.io is not liable for \n                    any loss or claim that you may have against any such third party.\n                </p>\n\n                <br />\n                <h5><b>Indemnity and Release</b></h5>\n                <p>\n                    You agree to release, indemnify and hold SpeechText.io and its affiliates and their officers, employees, directors and agents \n                    (collectively, “Indemnitees”) harmless from any from any and all losses, damages, expenses, including reasonable attorneys’ \n                    fees, rights, claims, actions of any kind and injury (including death) arising out of or relating to your use of the Service, \n                    any User Content, your connection to the Service, your violation of these Terms of Service or your violation of any rights of another. \n                    Notwithstanding the foregoing, you will have no obligation to indemnify or hold harmless any Indemnitee from or against any liability, \n                    losses, damages or expenses incurred as a result of any action or inaction of such Indemnitee.\n                </p>\n\n                <br />\n                <h5><b>Disclaimer of Warranties</b></h5>\n                <p>\n                    YOUR USE OF THE SERVICE IS AT YOUR SOLE RISK. THE SERVICE IS PROVIDED ON AN “AS IS” AND “AS AVAILABLE” BASIS. SpeechText.io \n                    EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO THE \n                    IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT.\n                </p>\n                <p>\n                    SpeechText.io MAKES NO WARRANTY THAT (I) THE SERVICE WILL MEET YOUR REQUIREMENTS, (II) THE SERVICE WILL BE UNINTERRUPTED, TIMELY, \n                    SECURE, OR ERROR-FREE, (III) THE RESULTS THAT MAY BE OBTAINED FROM THE USE OF THE SERVICE WILL BE ACCURATE OR RELIABLE, OR (IV) \n                    THE QUALITY OF ANY PRODUCTS, SERVICES, INFORMATION, OR OTHER MATERIAL PURCHASED OR OBTAINED BY YOU THROUGH THE SERVICE WILL \n                    MEET YOUR EXPECTATIONS.\n                </p>\n\n                <br />\n                <h5><b>Limitation of Liability</b></h5>\n                <p>\n                    YOU EXPRESSLY UNDERSTAND AND AGREE THAT SpeechText.io WILL NOT BE LIABLE FOR ANY INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, \n                    EXEMPLARY DAMAGES, OR DAMAGES FOR LOSS OF PROFITS INCLUDING BUT NOT LIMITED TO, DAMAGES FOR LOSS OF GOODWILL, USE, DATA \n                    OR OTHER INTANGIBLE LOSSES (EVEN IF SpeechText.io HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), WHETHER BASED ON CONTRACT, \n                    TORT, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE, RESULTING FROM: (I) THE USE OR THE INABILITY TO USE THE SERVICE; (II) \n                    THE COST OF PROCUREMENT OF SUBSTITUTE GOODS AND SERVICES RESULTING FROM ANY GOODS, DATA, INFORMATION OR SERVICES PURCHASED \n                    OR OBTAINED OR MESSAGES RECEIVED OR TRANSACTIONS ENTERED INTO THROUGH OR FROM THE SERVICE; (III) UNAUTHORIZED ACCESS TO \n                    OR ALTERATION OF YOUR TRANSMISSIONS OR DATA; (IV) STATEMENTS OR CONDUCT OF ANY THIRD PARTY ON THE SERVICE; OR (V) ANY OTHER MATTER \n                    RELATING TO THE SERVICE. IN NO EVENT WILL SpeechText.io’S TOTAL LIABILITY TO YOU FOR ALL DAMAGES, LOSSES OR CAUSES OF \n                    ACTION EXCEED THE AMOUNT YOU HAVE PAID SpeechText.io IN THE LAST SIX (6) MONTHS, OR, IF GREATER, ONE HUNDRED DOLLARS ($100).\n                </p>\n                <p>\n                    SOME JURISDICTIONS DO NOT ALLOW THE DISCLAIMER OR EXCLUSION OF CERTAIN WARRANTIES OR THE LIMITATION OR EXCLUSION OF LIABILITY \n                    FOR INCIDENTAL OR CONSEQUENTIAL DAMAGES. ACCORDINGLY, SOME OF THE ABOVE LIMITATIONS SET FORTH ABOVE MAY NOT APPLY TO YOU \n                    OR BE ENFORCEABLE WITH RESPECT TO YOU. IF YOU ARE DISSATISFIED WITH ANY PORTION OF THE SERVICE OR WITH THESE TERMS OF SERVICE, \n                    YOUR SOLE AND EXCLUSIVE REMEDY IS TO DISCONTINUE USE OF THE SERVICE.\n                </p>\n\n                <br />\n                <h5><b>Termination</b></h5>\n                <p>\n                    You agree that SpeechText.io, in its sole discretion, may suspend or terminate your account (or any part thereof) or use of the \n                    Service and remove and discard any content within the Service, for any reason, including, without limitation, for lack of use \n                    or if SpeechText.io believes that you have violated or acted inconsistently with the letter or spirit of these Terms of Service. \n                    Any suspected fraudulent, abusive or illegal activity that may be grounds for termination of your use of Service, \n                    may be referred to appropriate law enforcement authorities. SpeechText.io may also in its sole discretion and at any time \n                    discontinue providing the Service, or any part thereof, with or without notice. You agree that any termination of your access \n                    to the Service under any provision of this Terms of Service may be effected without prior notice, and acknowledge and agree that \n                    SpeechText.io may immediately deactivate or delete your account and all related information and files in your account and/or \n                    bar any further access to such files or the Service. Further, you agree that SpeechText.io will not be liable to you or \n                    any third party for any termination of your access to the Service.\n                </p>\n\n                <br />\n                <h5><b>User Disputes</b></h5>\n                <p>\n                    You agree that you are solely responsible for your interactions with any other user in connection with the Service and \n                    SpeechText.io will have no liability or responsibility with respect thereto. SpeechText.io reserves the right, but has no obligation, \n                    to become involved in any way with disputes between you and any other user of the Service.\n                </p>\n\n                <br />\n                <h5><b>Your Privacy</b></h5>\n                <p>\n                    At SpeechText.io, we respect the privacy of our users. For details please see our <Link to='privacy'>Privacy Policy</Link>. By using the Service, \n                    you consent to our collection and use of personal data as outlined therein. \n                </p>\n\n                <br />\n                <h5><b>Questions? Concerns? Suggestions?</b></h5>\n                <p>\n                    Please do not hesitate to contact (<a href='mailto:support@speechtext.io'>support@speechtext.io</a> to) us regarding any matter \n                    relating to these Terms or the Statement.\n                </p>\n            </Container>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Terms;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Alert from 'react-s-alert';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport 'react-s-alert/dist/s-alert-css-effects/slide.css';\n\nimport { setLanguage, setSupportedLanguages, getPlans } from '../actions';\nimport Main from './landing/main';\nimport Dashboard from './dashboard/dashboard';\nimport User from './user/user';\nimport Privacy from './landing/privacy';\nimport Terms from './landing/terms';\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.setLanguage(this.props.language);\n        this.props.setSupportedLanguages(this.props.supportedLanguages);\n        this.props.getPlans();\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <Route exact path='/' render={ props => <Main {...props} /> } />\n                    <Route path='/dashboard' component={ Dashboard } />\n                    <Route path='/user' component={ User } />\n                    <Route path='/privacy' component={ Privacy } />\n                    <Route path='/terms' component={ Terms } />\n                </BrowserRouter>\n                <Alert stack={{ limit: 3 }} timeout={ 5000 } html={ true } effect={ 'slide' } position={ 'top-right' } />\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { setLanguage, setSupportedLanguages, getPlans })(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { IntlProvider } from 'react-intl';\n\nimport reducers from './reducers';\nimport Utils from './utils';\nimport App from './containers/app';\n\nconst { supportedLanguages, currentLanguage, messages } = Utils.Localization;\nUtils.initGoogleAnalytics();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst Root = () => (\n    <Provider store={ store }>\n        <IntlProvider locale={ currentLanguage } messages={messages[currentLanguage]} >\n            <App language={ currentLanguage } supportedLanguages={ supportedLanguages } />\n        </IntlProvider>\n    </Provider>\n);\n  \nReactDOM.render(<Root />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/logo.f4bc8f01.png\";"],"sourceRoot":""}